<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NinjaTrader.Custom</name>
    </assembly>
    <members>
        <member name="T:NinjaTrader.Indicator.ADL">
            <summary>
            The Accumulation/Distribution (AD) study attempts to quantify the amount of volume flowing into or out of an instrument by identifying the position of the close of the period in relation to that period�s high/low range.
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.Indicator">
            <summary>
            </summary>
            <summary>
            This file holds all user defined indicator methods.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ADL">
            <summary>
            The Accumulation/Distribution (AD) study attempts to quantify the amount of volume flowing into or out of an instrument by identifying the position of the close of the period in relation to that period�s high/low range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ADL(NinjaTrader.Data.IDataSeries)">
            <summary>
            The Accumulation/Distribution (AD) study attempts to quantify the amount of volume flowing into or out of an instrument by identifying the position of the close of the period in relation to that period�s high/low range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ADX(System.Int32)">
            <summary>
            The Average Directional Index measures the strength of a prevailing trend as well as whether movement exists in the market. The ADX is measured on a scale of 0  100. A low ADX value (generally less than 20) can indicate a non-trending market with low volumes whereas a cross above 20 may indicate the start of a trend (either up or down). If the ADX is over 40 and begins to fall, it can indicate the slowdown of a current trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ADX(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Average Directional Index measures the strength of a prevailing trend as well as whether movement exists in the market. The ADX is measured on a scale of 0  100. A low ADX value (generally less than 20) can indicate a non-trending market with low volumes whereas a cross above 20 may indicate the start of a trend (either up or down). If the ADX is over 40 and begins to fall, it can indicate the slowdown of a current trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ADXR(System.Int32,System.Int32)">
            <summary>
            Average Directional Movement Rating quantifies momentum change in the ADX. It is calculated by adding two values of ADX (the current value and a value n periods back), then dividing by two. This additional smoothing makes the ADXR slightly less responsive than ADX. The interpretation is the same as the ADX; the higher the value, the stronger the trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ADXR(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            Average Directional Movement Rating quantifies momentum change in the ADX. It is calculated by adding two values of ADX (the current value and a value n periods back), then dividing by two. This additional smoothing makes the ADXR slightly less responsive than ADX. The interpretation is the same as the ADX; the higher the value, the stronger the trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.APZ(System.Double,System.Int32)">
            <summary>
            The APZ (Adaptive Prize Zone) forms a steady channel based on double smoothed exponential moving averages around the average price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.APZ(NinjaTrader.Data.IDataSeries,System.Double,System.Int32)">
            <summary>
            The APZ (Adaptive Prize Zone) forms a steady channel based on double smoothed exponential moving averages around the average price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Aroon(System.Int32)">
            <summary>
            The Aroon Indicator was developed by Tushar Chande. Its comprised of two plots one measuring the number of periods since the most recent x-period high (Aroon Up) and the other measuring the number of periods since the most recent x-period low (Aroon Down).
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Aroon(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Aroon Indicator was developed by Tushar Chande. Its comprised of two plots one measuring the number of periods since the most recent x-period high (Aroon Up) and the other measuring the number of periods since the most recent x-period low (Aroon Down).
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.AroonOscillator(System.Int32)">
            <summary>
            The Aroon Oscillator is based upon his Aroon Indicator. Much like the Aroon Indicator, the Aroon Oscillator measures the strength of a trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.AroonOscillator(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Aroon Oscillator is based upon his Aroon Indicator. Much like the Aroon Indicator, the Aroon Oscillator measures the strength of a trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ATR(System.Int32)">
            <summary>
            The Average True Range (ATR) is a measure of volatility. It was introduced by Welles Wilder in his book 'New Concepts in Technical Trading Systems' and has since been used as a component of many indicators and trading systems.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ATR(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Average True Range (ATR) is a measure of volatility. It was introduced by Welles Wilder in his book 'New Concepts in Technical Trading Systems' and has since been used as a component of many indicators and trading systems.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.BarTimer">
            <summary>
            Displays remaining time of minute based bar
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.BarTimer(NinjaTrader.Data.IDataSeries)">
            <summary>
            Displays remaining time of minute based bar
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Bollinger(System.Double,System.Int32)">
            <summary>
            Bollinger Bands are plotted at standard deviation levels above and below a moving average. Since standard deviation is a measure of volatility, the bands are self-adjusting: widening during volatile markets and contracting during calmer periods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Bollinger(NinjaTrader.Data.IDataSeries,System.Double,System.Int32)">
            <summary>
            Bollinger Bands are plotted at standard deviation levels above and below a moving average. Since standard deviation is a measure of volatility, the bands are self-adjusting: widening during volatile markets and contracting during calmer periods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.BOP(System.Int32)">
            <summary>
            The balance of power indicator measures the strength of the bulls vs. bears by assessing the ability of each to push price to an extreme level.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.BOP(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The balance of power indicator measures the strength of the bulls vs. bears by assessing the ability of each to push price to an extreme level.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.BuySellPressure">
            <summary>
            Indicates the current buying or selling pressure as a perecentage. This is a tick by tick indicator. If 'Calculate on bar close' is true, the indicator values will always be 100.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.BuySellPressure(NinjaTrader.Data.IDataSeries)">
            <summary>
            Indicates the current buying or selling pressure as a perecentage. This is a tick by tick indicator. If 'Calculate on bar close' is true, the indicator values will always be 100.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.BuySellVolume">
            <summary>
            This indicator is a real-time indicator and does not plot against historical data. Plots a histogram splitting volume between trades at the ask or higher and trades at the bid and lower.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.BuySellVolume(NinjaTrader.Data.IDataSeries)">
            <summary>
            This indicator is a real-time indicator and does not plot against historical data. Plots a histogram splitting volume between trades at the ask or higher and trades at the bid and lower.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.CandleStickPattern(ChartPattern,System.Int32)">
            <summary>
            Detects common candlestick patterns and marks them on the chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.CandleStickPattern(NinjaTrader.Data.IDataSeries,ChartPattern,System.Int32)">
            <summary>
            Detects common candlestick patterns and marks them on the chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.CCI(System.Int32)">
            <summary>
            The Commodity Channel Index (CCI) measures the variation of a security's price from its statistical mean. High values show that prices are unusually high compared to average prices whereas low values indicate that prices are unusually low.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.CCI(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Commodity Channel Index (CCI) measures the variation of a security's price from its statistical mean. High values show that prices are unusually high compared to average prices whereas low values indicate that prices are unusually low.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ChaikinMoneyFlow(System.Int32)">
            <summary>
            Chaikin Money Flow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ChaikinMoneyFlow(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Chaikin Money Flow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ChaikinOscillator(System.Int32,System.Int32)">
            <summary>
            Chaikin Oscillator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ChaikinOscillator(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            Chaikin Oscillator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ChaikinVolatility(System.Int32)">
            <summary>
            Chaikin Volatility
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ChaikinVolatility(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Chaikin Volatility
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.CMO(System.Int32)">
            <summary>
            The CMO differs from other momentum oscillators such as Relative Strength Index (RSI) and Stochastics. It uses both up and down days data in the numerator of the calculation to measure momentum directly. Primarily used to look for extreme overbought and oversold conditions, CMO can also be used to look for trends.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.CMO(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The CMO differs from other momentum oscillators such as Relative Strength Index (RSI) and Stochastics. It uses both up and down days data in the numerator of the calculation to measure momentum directly. Primarily used to look for extreme overbought and oversold conditions, CMO can also be used to look for trends.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ConstantLines(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Plots lines at user defined values. Lines with values of zero will not plot.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ConstantLines(NinjaTrader.Data.IDataSeries,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Plots lines at user defined values. Lines with values of zero will not plot.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.CurrentDayOHL">
            <summary>
            Plots the open, high, and low values from the session starting on the current day.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.CurrentDayOHL(NinjaTrader.Data.IDataSeries)">
            <summary>
            Plots the open, high, and low values from the session starting on the current day.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.CustomPlotSample">
            <summary>
            This is a sample for an indicator using custom plotting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.CustomPlotSample(NinjaTrader.Data.IDataSeries)">
            <summary>
            This is a sample for an indicator using custom plotting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Darvas">
            <summary>
            The Darvas Boxes were taken from the pages of Nicolas Darvas book, How I Made $2,000,000 in the Stock Market. The boxes are used to normalize a trend. A 'buy' signal would be indicated when the price of the stock exceeds the top of the box. A 'sell' signal would be indicated when the price of the stock falls below the bottom of the box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Darvas(NinjaTrader.Data.IDataSeries)">
            <summary>
            The Darvas Boxes were taken from the pages of Nicolas Darvas book, How I Made $2,000,000 in the Stock Market. The boxes are used to normalize a trend. A 'buy' signal would be indicated when the price of the stock exceeds the top of the box. A 'sell' signal would be indicated when the price of the stock falls below the bottom of the box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DEMA(System.Int32)">
            <summary>
            Double Exponential Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DEMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Double Exponential Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DM(System.Int32)">
            <summary>
            This is the same indicator as the ADX, with the addition of the two directional movement indicators +DI and -DI. +DI and -DI measure upward and downward momentum. A buy signal is generated when +DI crosses -DI to the upside. A sell signal is generated when -DI crosses +DI to the downside.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DM(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            This is the same indicator as the ADX, with the addition of the two directional movement indicators +DI and -DI. +DI and -DI measure upward and downward momentum. A buy signal is generated when +DI crosses -DI to the upside. A sell signal is generated when -DI crosses +DI to the downside.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DMI(System.Int32)">
            <summary>
            The Directional Movement Index is quite similiar to Welles Wilder's Relative Strength Index. The difference is the DMI uses variable time periods (from 3 to 30) vs. the RSI's fixed periods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DMI(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Directional Movement Index is quite similiar to Welles Wilder's Relative Strength Index. The difference is the DMI uses variable time periods (from 3 to 30) vs. the RSI's fixed periods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DMIndex(System.Int32)">
            <summary>
            The Dynamic Momentum Index (DMI) as developed by Tushar Chande and Stanley Kroll and outlined in detail in their book The New Technical Trader.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DMIndex(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Dynamic Momentum Index (DMI) as developed by Tushar Chande and Stanley Kroll and outlined in detail in their book The New Technical Trader.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DonchianChannel(System.Int32)">
            <summary>
            The Donchian Channel indicator was created by Richard Donchian. It uses the highest high and the lowest low of a period of time to plot the channel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DonchianChannel(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Donchian Channel indicator was created by Richard Donchian. It uses the highest high and the lowest low of a period of time to plot the channel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DoubleStochastics(System.Int32)">
            <summary>
            Double stochastics
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DoubleStochastics(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Double stochastics
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.EaseOfMovement(System.Int32,System.Int32)">
            <summary>
            The Ease of Movement (EMV) indicator emphasizes days in which the stock is moving easily and minimizes the days in which the stock is finding it difficult to move. A buy signal is generated when the EMV crosses above zero, a sell signal when it crosses below zero. When the EMV hovers around zero, then there are small price movements and/or high volume, which is to say, the price is not moving easily.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.EaseOfMovement(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The Ease of Movement (EMV) indicator emphasizes days in which the stock is moving easily and minimizes the days in which the stock is finding it difficult to move. A buy signal is generated when the EMV crosses above zero, a sell signal when it crosses below zero. When the EMV hovers around zero, then there are small price movements and/or high volume, which is to say, the price is not moving easily.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.EMA(System.Int32)">
            <summary>
            The Exponential Moving Average is an indicator that shows the average value of a security's price over a period of time. When calculating a moving average. The EMA applies more weight to recent prices than the SMA.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.EMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Exponential Moving Average is an indicator that shows the average value of a security's price over a period of time. When calculating a moving average. The EMA applies more weight to recent prices than the SMA.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.FisherTransform(System.Int32)">
            <summary>
            The Fisher Transform has sharp and distinct turning points that occur in a timely fashion. The resulting peak swings are used to identify price reversals.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.FisherTransform(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Fisher Transform has sharp and distinct turning points that occur in a timely fashion. The resulting peak swings are used to identify price reversals.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.FOSC(System.Int32)">
            <summary>
            The Forecast Oscillator (FOSC) is an extension of the linear regression based indicators made popular by Tushar Chande. The Forecast Oscillator plots the percentage difference between the forecast price (generated by an x-period linear regression line) and the actual price. The oscillator is above zero when the forecast price is greater than the actual price.  Conversely, it's less than zero if its below. In the rare case when the forecast price and the actual price are the same, the oscillator would plot zero. Actual prices that are persistently below the forecast price suggest lower prices ahead.  Likewise, actual prices that are persistently above the forecast price suggest higher prices ahead. Short-term traders should use shorter time periods and perhaps more relaxed standards for the required length of time above or below the forecast price. Long-term traders should use longer time periods and perhaps stricter standards for the required length of time above or below the forecast price. Chande also suggests plotting a three-day moving average trigger line of the Forecast Oscillator to generate early warnings of changes in trend. When the oscillator crosses below the trigger line, lower prices are suggested. When the oscillator crosses above the trigger line, higher prices are suggested.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.FOSC(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Forecast Oscillator (FOSC) is an extension of the linear regression based indicators made popular by Tushar Chande. The Forecast Oscillator plots the percentage difference between the forecast price (generated by an x-period linear regression line) and the actual price. The oscillator is above zero when the forecast price is greater than the actual price.  Conversely, it's less than zero if its below. In the rare case when the forecast price and the actual price are the same, the oscillator would plot zero. Actual prices that are persistently below the forecast price suggest lower prices ahead.  Likewise, actual prices that are persistently above the forecast price suggest higher prices ahead. Short-term traders should use shorter time periods and perhaps more relaxed standards for the required length of time above or below the forecast price. Long-term traders should use longer time periods and perhaps stricter standards for the required length of time above or below the forecast price. Chande also suggests plotting a three-day moving average trigger line of the Forecast Oscillator to generate early warnings of changes in trend. When the oscillator crosses below the trigger line, lower prices are suggested. When the oscillator crosses above the trigger line, higher prices are suggested.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.HeikenAshi">
            <summary>
            HeikenAshi technique discussed in the article 'Using Heiken-Ashi Technique' in February 2004 issue of TASC magazine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.HeikenAshi(NinjaTrader.Data.IDataSeries)">
            <summary>
            HeikenAshi technique discussed in the article 'Using Heiken-Ashi Technique' in February 2004 issue of TASC magazine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.HMA(System.Int32)">
            <summary>
            The Hull Moving Average (HMA) employs weighted MA calculations to offer superior smoothing, and much less lag, over traditional SMA indicators.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.HMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Hull Moving Average (HMA) employs weighted MA calculations to offer superior smoothing, and much less lag, over traditional SMA indicators.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.KAMA(System.Int32,System.Int32,System.Int32)">
            <summary>
            Developed by Perry Kaufman, this indicator is an EMA using an Efficiency Ratio to modify the smoothing constant, which ranges from a minimum of Fast Length to a maximum of Slow Length. Since this moving average is adaptive it tends to follow prices more closely than other MA's.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.KAMA(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            Developed by Perry Kaufman, this indicator is an EMA using an Efficiency Ratio to modify the smoothing constant, which ranges from a minimum of Fast Length to a maximum of Slow Length. Since this moving average is adaptive it tends to follow prices more closely than other MA's.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.KeltnerChannel(System.Double,System.Int32)">
            <summary>
            The Keltner Channel is a similar indicator to Bollinger Bands. Here the midline is a standard moving average with the upper and lower bands offset by the SMA of the difference between the high and low of the previous bars. The offset multiplier as well as the SMA period is configurable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.KeltnerChannel(NinjaTrader.Data.IDataSeries,System.Double,System.Int32)">
            <summary>
            The Keltner Channel is a similar indicator to Bollinger Bands. Here the midline is a standard moving average with the upper and lower bands offset by the SMA of the difference between the high and low of the previous bars. The offset multiplier as well as the SMA period is configurable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.KeyReversalDown(System.Int32)">
            <summary>
            Returns a value of 1 when the current close is less than the prior close after penetrating the highest high of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.KeyReversalDown(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Returns a value of 1 when the current close is less than the prior close after penetrating the highest high of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.KeyReversalUp(System.Int32)">
            <summary>
            Returns a value of 1 when the current close is greater than the prior close after penetrating the lowest low of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.KeyReversalUp(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Returns a value of 1 when the current close is greater than the prior close after penetrating the lowest low of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.LinReg(System.Int32)">
            <summary>
            The Linear Regression is an indicator that 'predicts' the value of a security's price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.LinReg(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Linear Regression is an indicator that 'predicts' the value of a security's price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.LinRegIntercept(System.Int32)">
            <summary>
            Linnear Regression Intercept
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.LinRegIntercept(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Linnear Regression Intercept
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.LinRegSlope(System.Int32)">
            <summary>
            Linear Regression Slope
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.LinRegSlope(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Linear Regression Slope
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.MACD(System.Int32,System.Int32,System.Int32)">
            <summary>
            The MACD (Moving Average Convergence/Divergence) is a trend following momentum indicator that shows the relationship between two moving averages of prices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.MACD(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            The MACD (Moving Average Convergence/Divergence) is a trend following momentum indicator that shows the relationship between two moving averages of prices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.MAEnvelopes(System.Double,System.Int32,System.Int32)">
            <summary>
            Plots % envelopes around a moving average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.MAEnvelopes(NinjaTrader.Data.IDataSeries,System.Double,System.Int32,System.Int32)">
            <summary>
            Plots % envelopes around a moving average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.MAMA(System.Double,System.Double)">
            <summary>
            The MAMA (MESA Adaptive Moving Average) was developed by John Ehlers. It adapts to price movement in a new and unique way. The adaptation is based on the Hilbert Transform Discriminator. The adavantage of this method features fast attack average and a slow decay average. The MAMA + the FAMA (Following Adaptive Moving Average) lines only cross at major market reversals.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.MAMA(NinjaTrader.Data.IDataSeries,System.Double,System.Double)">
            <summary>
            The MAMA (MESA Adaptive Moving Average) was developed by John Ehlers. It adapts to price movement in a new and unique way. The adaptation is based on the Hilbert Transform Discriminator. The adavantage of this method features fast attack average and a slow decay average. The MAMA + the FAMA (Following Adaptive Moving Average) lines only cross at major market reversals.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.MAX(System.Int32)">
            <summary>
            The Maximum shows the maximum of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.MAX(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Maximum shows the maximum of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.MFI(System.Int32)">
            <summary>
            The MFI (Money Flow Index) is a momentum indicator that measures the strength of money flowing in and out of a security.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.MFI(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The MFI (Money Flow Index) is a momentum indicator that measures the strength of money flowing in and out of a security.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.MIN(System.Int32)">
            <summary>
            The Minimum shows the minimum of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.MIN(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Minimum shows the minimum of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Momentum(System.Int32)">
            <summary>
            The Momentum indicator measures the amount that a security's price has changed over a given time span.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Momentum(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Momentum indicator measures the amount that a security's price has changed over a given time span.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.NBarsDown(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This indicator returns 1 when we have n of consecutive bars down, otherwise returns 0. A down bar is defined as a bar where the close is below the open and the bars makes a lower high and a lower low. You can adjust the specific requirements with the indicator options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.NBarsDown(NinjaTrader.Data.IDataSeries,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This indicator returns 1 when we have n of consecutive bars down, otherwise returns 0. A down bar is defined as a bar where the close is below the open and the bars makes a lower high and a lower low. You can adjust the specific requirements with the indicator options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.NBarsUp(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This indicator returns 1 when we have n of consecutive bars up, otherwise returns 0. An up bar is defined as a bar where the close is above the open and the bars makes a higher high and a higher low. You can adjust the specific requirements with the indicator options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.NBarsUp(NinjaTrader.Data.IDataSeries,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This indicator returns 1 when we have n of consecutive bars up, otherwise returns 0. An up bar is defined as a bar where the close is above the open and the bars makes a higher high and a higher low. You can adjust the specific requirements with the indicator options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.OBV">
            <summary>
            OBV (On Balance Volume) is a running total of volume. It shows if volume is flowing into or out of a security. When the security closes higher than the previous close, all of the day's volume is considered up-volume. When the security closes lower than the previous close, all of the day's volume is considered down-volume.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.OBV(NinjaTrader.Data.IDataSeries)">
            <summary>
            OBV (On Balance Volume) is a running total of volume. It shows if volume is flowing into or out of a security. When the security closes higher than the previous close, all of the day's volume is considered up-volume. When the security closes lower than the previous close, all of the day's volume is considered down-volume.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ParabolicSAR(System.Double,System.Double,System.Double)">
            <summary>
            Parabolic SAR
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ParabolicSAR(NinjaTrader.Data.IDataSeries,System.Double,System.Double,System.Double)">
            <summary>
            Parabolic SAR
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.PFE(System.Int32,System.Int32)">
            <summary>
            The PFE (Polarized Fractal Efficiency) is an indicator that uses fractal geometry to determine how efficiently the price is moving.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.PFE(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The PFE (Polarized Fractal Efficiency) is an indicator that uses fractal geometry to determine how efficiently the price is moving.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Pivots(NinjaTrader.Data.PivotRange,NinjaTrader.Data.HLCCalculationMode,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Pivot Points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Pivots(NinjaTrader.Data.IDataSeries,NinjaTrader.Data.PivotRange,NinjaTrader.Data.HLCCalculationMode,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Pivot Points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.PPO(System.Int32,System.Int32,System.Int32)">
            <summary>
            The PPO (Percentage Price Oscillator) is based on two moving averages expressed as a percentage. The PPO is found by subtracting the longer MA from the shorter MA and then dividing the difference by the longer MA.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.PPO(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            The PPO (Percentage Price Oscillator) is based on two moving averages expressed as a percentage. The PPO is found by subtracting the longer MA from the shorter MA and then dividing the difference by the longer MA.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.PriceAlert_New(System.Double,System.Boolean)">
            <summary>
            Sends an alert to the alert window when a price level has been reached.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.PriceAlert_New(NinjaTrader.Data.IDataSeries,System.Double,System.Boolean)">
            <summary>
            Sends an alert to the alert window when a price level has been reached.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.PriceOscillator(System.Int32,System.Int32,System.Int32)">
            <summary>
            The Price Oscillator indicator shows the variation among two moving averages for the price of a security.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.PriceOscillator(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            The Price Oscillator indicator shows the variation among two moving averages for the price of a security.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.PriorDayOHLC">
            <summary>
            Plots the open, high, low and close values from the session starting on the prior day.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.PriorDayOHLC(NinjaTrader.Data.IDataSeries)">
            <summary>
            Plots the open, high, low and close values from the session starting on the prior day.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Range">
            <summary>
            Calculates the range of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Range(NinjaTrader.Data.IDataSeries)">
            <summary>
            Calculates the range of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RangeCounter(System.Boolean)">
            <summary>
            Displays the range countdown of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RangeCounter(NinjaTrader.Data.IDataSeries,System.Boolean)">
            <summary>
            Displays the range countdown of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RegressionChannel(System.Int32,System.Double)">
            <summary>
            Linear regression is used to calculate a best fit line for the price data. In addition an upper and lower band is added by calculating the standard deviation of prices from the regression line.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RegressionChannel(NinjaTrader.Data.IDataSeries,System.Int32,System.Double)">
            <summary>
            Linear regression is used to calculate a best fit line for the price data. In addition an upper and lower band is added by calculating the standard deviation of prices from the regression line.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RIND(System.Int32,System.Int32)">
            <summary>
            RIND (Range Indicator) compares the intraday range (high - low) to the inter-day (close - previous close) range. When the intraday range is greater than the inter-day range, the Range Indicator will be a high value. This signals an end to the current trend. When the Range Indicator is at a low level, a new trend is about to start.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RIND(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            RIND (Range Indicator) compares the intraday range (high - low) to the inter-day (close - previous close) range. When the intraday range is greater than the inter-day range, the Range Indicator will be a high value. This signals an end to the current trend. When the Range Indicator is at a low level, a new trend is about to start.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ROC(System.Int32)">
            <summary>
            The ROC (Rate-of-Change) indicator displays the difference between the current price and the price x-time periods ago.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ROC(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The ROC (Rate-of-Change) indicator displays the difference between the current price and the price x-time periods ago.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RSI(System.Int32,System.Int32)">
            <summary>
            The RSI (Relative Strength Index) is a price-following oscillator that ranges between 0 and 100.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RSI(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The RSI (Relative Strength Index) is a price-following oscillator that ranges between 0 and 100.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RSquared(System.Int32)">
            <summary>
            R-squared indicator
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RSquared(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            R-squared indicator
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RSS(System.Int32,System.Int32,System.Int32)">
            <summary>
            Relative Spread Strength of the spread between two moving averages. TASC, October 2006, p. 16.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RSS(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            Relative Spread Strength of the spread between two moving averages. TASC, October 2006, p. 16.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RVI(System.Int32)">
            <summary>
            The RVI (Relative Volatility Index) was developed by Donald Dorsey as a compliment to and a confirmation of momentum based indicators. When used to confirm other signals, only buy when the RVI is over 50 and only sell when the RVI is under 50.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RVI(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The RVI (Relative Volatility Index) was developed by Donald Dorsey as a compliment to and a confirmation of momentum based indicators. When used to confirm other signals, only buy when the RVI is over 50 and only sell when the RVI is under 50.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.SMA(System.Int32)">
            <summary>
            The SMA (Simple Moving Average) is an indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.SMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The SMA (Simple Moving Average) is an indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.StdDev(System.Int32)">
            <summary>
            Standard Deviation is a statistical measure of volatility. Standard Deviation is typically used as a component of other indicators, rather than as a stand-alone indicator. For example, Bollinger Bands are calculated by adding a security's Standard Deviation to a moving average.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.StdDev(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Standard Deviation is a statistical measure of volatility. Standard Deviation is typically used as a component of other indicators, rather than as a stand-alone indicator. For example, Bollinger Bands are calculated by adding a security's Standard Deviation to a moving average.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.StdError(System.Int32)">
            <summary>
            Standard Error shows how near prices go around a linear regression line.  The closer the prices are to the linear regression line, the stronger is the trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.StdError(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Standard Error shows how near prices go around a linear regression line.  The closer the prices are to the linear regression line, the stronger is the trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Stochastics(System.Int32,System.Int32,System.Int32)">
            <summary>
            The Stochastic Oscillator is made up of two lines that oscillate between a vertical scale of 0 to 100. The %K is the main line and it is drawn as a solid line. The second is the %D line and is a moving average of %K. The %D line is drawn as a dotted line. Use as a buy/sell signal generator, buying when fast moves above slow and selling when fast moves below slow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Stochastics(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            The Stochastic Oscillator is made up of two lines that oscillate between a vertical scale of 0 to 100. The %K is the main line and it is drawn as a solid line. The second is the %D line and is a moving average of %K. The %D line is drawn as a dotted line. Use as a buy/sell signal generator, buying when fast moves above slow and selling when fast moves below slow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.StochasticsFast(System.Int32,System.Int32)">
            <summary>
            The Stochastic Oscillator is made up of two lines that oscillate between a vertical scale of 0 to 100. The %K is the main line and it is drawn as a solid line. The second is the %D line and is a moving average of %K. The %D line is drawn as a dotted line. Use as a buy/sell signal generator, buying when fast moves above slow and selling when fast moves below slow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.StochasticsFast(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The Stochastic Oscillator is made up of two lines that oscillate between a vertical scale of 0 to 100. The %K is the main line and it is drawn as a solid line. The second is the %D line and is a moving average of %K. The %D line is drawn as a dotted line. Use as a buy/sell signal generator, buying when fast moves above slow and selling when fast moves below slow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.StochRSI(System.Int32)">
            <summary>
            The StochRSI is an oscillator similar in computation to the stochastic measure, except instead of price values as input, the StochRSI uses RSI values. The StochRSI computes the current position of the RSI relative to the high and low RSI values over a specified number of days. The intent of this measure, designed by Tushard Chande and Stanley Kroll, is to provide further information about the overbought/oversold nature of the RSI. The StochRSI ranges between 0.0 and 1.0. Values above 0.8 are generally seen to identify overbought levels and values below 0.2 are considered to indicate oversold conditions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.StochRSI(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The StochRSI is an oscillator similar in computation to the stochastic measure, except instead of price values as input, the StochRSI uses RSI values. The StochRSI computes the current position of the RSI relative to the high and low RSI values over a specified number of days. The intent of this measure, designed by Tushard Chande and Stanley Kroll, is to provide further information about the overbought/oversold nature of the RSI. The StochRSI ranges between 0.0 and 1.0. Values above 0.8 are generally seen to identify overbought levels and values below 0.2 are considered to indicate oversold conditions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.SUM(System.Int32)">
            <summary>
            The Sum shows the summation of the last n data points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.SUM(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Sum shows the summation of the last n data points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Swing(System.Int32)">
            <summary>
            The Swing indicator plots lines that represents the swing high and low points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.Swing(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Swing indicator plots lines that represents the swing high and low points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.T3(System.Int32,System.Int32,System.Double)">
            <summary>
            T3 Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.T3(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Double)">
            <summary>
            T3 Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TEMA(System.Int32)">
            <summary>
            Triple Exponential Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TEMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Triple Exponential Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TickCounter(System.Boolean,System.Boolean)">
            <summary>
            Displays the tick count of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TickCounter(NinjaTrader.Data.IDataSeries,System.Boolean,System.Boolean)">
            <summary>
            Displays the tick count of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TMA(System.Int32)">
            <summary>
            The TMA (Triangular Moving Average) is a weighted moving average. Compared to the WMA which puts more weight on the latest price bar, the TMA puts more weight on the data in the middle of the specified period.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The TMA (Triangular Moving Average) is a weighted moving average. Compared to the WMA which puts more weight on the latest price bar, the TMA puts more weight on the data in the middle of the specified period.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TRIX(System.Int32,System.Int32)">
            <summary>
            The TRIX (Triple Exponential Average) displays the percentage Rate of Change (ROC) of a triple EMA. Trix oscillates above and below the zero value. The indicator applies triple smoothing in an attempt to eliminate insignificant price movements within the trend that you're trying to isolate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TRIX(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The TRIX (Triple Exponential Average) displays the percentage Rate of Change (ROC) of a triple EMA. Trix oscillates above and below the zero value. The indicator applies triple smoothing in an attempt to eliminate insignificant price movements within the trend that you're trying to isolate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TSF(System.Int32,System.Int32)">
            <summary>
            The TSF (Time Series Forecast) calculates probable future values for the price by fitting a linear regression line over a given number of price bars and following that line forward into the future. A linear regression line is a straight line which is as close to all of the given price points as possible. Also see the Linear Regression indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TSF(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The TSF (Time Series Forecast) calculates probable future values for the price by fitting a linear regression line over a given number of price bars and following that line forward into the future. A linear regression line is a straight line which is as close to all of the given price points as possible. Also see the Linear Regression indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TSI(System.Int32,System.Int32)">
            <summary>
            The TSI (True Strength Index) is a momentum-based indicator, developed by William Blau. Designed to determine both trend and overbought/oversold conditions, the TSI is applicable to intraday time frames as well as long term trading.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TSI(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The TSI (True Strength Index) is a momentum-based indicator, developed by William Blau. Designed to determine both trend and overbought/oversold conditions, the TSI is applicable to intraday time frames as well as long term trading.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.UltimateOscillator(System.Int32,System.Int32,System.Int32)">
            <summary>
            The Ultimate Oscillator is the weighted sum of three oscillators of different time periods. The typical time periods are 7, 14 and 28. The values of the Ultimate Oscillator range from zero to 100. Values over 70 indicate overbought conditions, and values under 30 indicate oversold conditions. Also look for agreement/divergence with the price to confirm a trend or signal the end of a trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.UltimateOscillator(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            The Ultimate Oscillator is the weighted sum of three oscillators of different time periods. The typical time periods are 7, 14 and 28. The values of the Ultimate Oscillator range from zero to 100. Values over 70 indicate overbought conditions, and values under 30 indicate oversold conditions. Also look for agreement/divergence with the price to confirm a trend or signal the end of a trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VMA(System.Int32,System.Int32)">
            <summary>
            The VMA (Variable Moving Average, also known as VIDYA or Variable Index Dynamic Average) is an exponential moving average that automatically adjusts the smoothing weight based on the volatility of the data series. VMA solves a problem with most moving averages. In times of low volatility, such as when the price is trending, the moving average time period should be shorter to be sensitive to the inevitable break in the trend. Whereas, in more volatile non-trending times, the moving average time period should be longer to filter out the choppiness. VIDYA uses the CMO indicator for it's internal volatility calculations. Both the VMA and the CMO period are adjustable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VMA(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The VMA (Variable Moving Average, also known as VIDYA or Variable Index Dynamic Average) is an exponential moving average that automatically adjusts the smoothing weight based on the volatility of the data series. VMA solves a problem with most moving averages. In times of low volatility, such as when the price is trending, the moving average time period should be shorter to be sensitive to the inevitable break in the trend. Whereas, in more volatile non-trending times, the moving average time period should be longer to filter out the choppiness. VIDYA uses the CMO indicator for it's internal volatility calculations. Both the VMA and the CMO period are adjustable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VOL">
            <summary>
            Volume is simply the number of shares (or contracts) traded during a specified time frame (e.g. hour, day, week, month, etc).
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VOL(NinjaTrader.Data.IDataSeries)">
            <summary>
            Volume is simply the number of shares (or contracts) traded during a specified time frame (e.g. hour, day, week, month, etc).
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VOLMA(System.Int32)">
            <summary>
            The VOLMA (Volume Moving Average) plots an exponential moving average (EMA) of volume.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VOLMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The VOLMA (Volume Moving Average) plots an exponential moving average (EMA) of volume.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VolumeCounter(System.Boolean,System.Boolean)">
            <summary>
            Displays the volume count of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VolumeCounter(NinjaTrader.Data.IDataSeries,System.Boolean,System.Boolean)">
            <summary>
            Displays the volume count of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VolumeOscillator(System.Int32,System.Int32)">
            <summary>
            The Volume Oscillator measures volume by calculating the difference of a fast and a slow moving average of volume. The Volume Oscillator can provide insight into the strength or weakness of a price trend. A positive value suggests there is enough market support to continue driving price activity in the direction of the current trend. A negative value suggests there is a lack of support, that prices may begin to become stagnant or reverse.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VolumeOscillator(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The Volume Oscillator measures volume by calculating the difference of a fast and a slow moving average of volume. The Volume Oscillator can provide insight into the strength or weakness of a price trend. A positive value suggests there is enough market support to continue driving price activity in the direction of the current trend. A negative value suggests there is a lack of support, that prices may begin to become stagnant or reverse.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VolumeProfile(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Plots a vertical histogram of volume by price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VolumeProfile(NinjaTrader.Data.IDataSeries,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Plots a vertical histogram of volume by price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VolumeUpDown">
            <summary>
            Variation of the VOL (Volume) indicator that colors the volume histogram different color depending if the current bar is up or down bar
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VolumeUpDown(NinjaTrader.Data.IDataSeries)">
            <summary>
            Variation of the VOL (Volume) indicator that colors the volume histogram different color depending if the current bar is up or down bar
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VolumeZones(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Boolean,System.Drawing.Color,System.Int32)">
            <summary>
            Volume Zones plots a horizontal histogram that overlays a price chart. The histogram bars stretch from left to right starting at the left side of the chart. The length of each bar is determined by the cumulative total of all volume bars for the periods during which the price fell within the vertical range of the histogram bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VolumeZones(NinjaTrader.Data.IDataSeries,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Boolean,System.Drawing.Color,System.Int32)">
            <summary>
            Volume Zones plots a horizontal histogram that overlays a price chart. The histogram bars stretch from left to right starting at the left side of the chart. The length of each bar is determined by the cumulative total of all volume bars for the periods during which the price fell within the vertical range of the histogram bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VROC(System.Int32,System.Int32)">
            <summary>
            The VROC (Volume Rate-of-Change) shows whether or not a volume trend is developing in either an up or down direction. It is similar to the ROC indicator, but is applied to volume instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VROC(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The VROC (Volume Rate-of-Change) shows whether or not a volume trend is developing in either an up or down direction. It is similar to the ROC indicator, but is applied to volume instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VWMA(System.Int32)">
            <summary>
            The VWMA (Volume-Weighted Moving Average) returns the volume-weighted moving average for the specified price series and period. VWMA is similar to a Simple Moving Average (SMA), but each bar of data is weighted by the bar's Volume. VWMA places more significance on the days with the largest volume and the least for the days with lowest volume for the period specified.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.VWMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The VWMA (Volume-Weighted Moving Average) returns the volume-weighted moving average for the specified price series and period. VWMA is similar to a Simple Moving Average (SMA), but each bar of data is weighted by the bar's Volume. VWMA places more significance on the days with the largest volume and the least for the days with lowest volume for the period specified.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.WilliamsR(System.Int32)">
            <summary>
            The Williams %R is a momentum indicator that is designed to identify overbought and oversold areas in a nontrending market.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.WilliamsR(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Williams %R is a momentum indicator that is designed to identify overbought and oversold areas in a nontrending market.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.WMA(System.Int32)">
            <summary>
            The WMA (Weighted Moving Average) is a Moving Average indicator that shows the average value of a security's price over a period of time with special emphasis on the more recent portions of the time period under analysis as opposed to the earlier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.WMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The WMA (Weighted Moving Average) is a Moving Average indicator that shows the average value of a security's price over a period of time with special emphasis on the more recent portions of the time period under analysis as opposed to the earlier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ZigZag(NinjaTrader.Data.DeviationType,System.Double,System.Boolean)">
            <summary>
            The ZigZag indicator shows trend lines filtering out changes below a defined level. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ZigZag(NinjaTrader.Data.IDataSeries,NinjaTrader.Data.DeviationType,System.Double,System.Boolean)">
            <summary>
            The ZigZag indicator shows trend lines filtering out changes below a defined level. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ZLEMA(System.Int32)">
            <summary>
            The ZLEMA (Zero-Lag Exponential Moving Average) is an EMA variant that attempts to adjust for lag.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.ZLEMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The ZLEMA (Zero-Lag Exponential Moving Average) is an EMA variant that attempts to adjust for lag.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.anaFibonacciClusterV14D(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            anaFibonacciClusterV14D.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.anaFibonacciClusterV14D(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            anaFibonacciClusterV14D.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.anaFibonacciClusterV14L(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            anaFibonacciClusterV14L.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.anaFibonacciClusterV14L(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            anaFibonacciClusterV14L.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.AutoTrendH(System.Boolean,System.Boolean,System.Int32)">
            <summary>
            AutoTrendLine with History option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.AutoTrendH(NinjaTrader.Data.IDataSeries,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            AutoTrendLine with History option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.bwAlligator">
            <summary>
            In principle, bwAlligator Technical Indicator is a combination of Balance Lines (Moving Averages) that use fractal geometry and nonlinear dynamics.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.bwAlligator(NinjaTrader.Data.IDataSeries)">
            <summary>
            In principle, bwAlligator Technical Indicator is a combination of Balance Lines (Moving Averages) that use fractal geometry and nonlinear dynamics.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.bwAO">
            <summary>
            Awesome Oscillator Technical Indicator (AO) is a 34-period simple moving average, plotted through the middle points of the bars (H+L)/2, which is subtracted from the 5-period simple moving average, built across the central points of the bars (H+L)/2. It shows us quite clearly what’s happening to the market driving force at the present moment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.bwAO(NinjaTrader.Data.IDataSeries)">
            <summary>
            Awesome Oscillator Technical Indicator (AO) is a 34-period simple moving average, plotted through the middle points of the bars (H+L)/2, which is subtracted from the 5-period simple moving average, built across the central points of the bars (H+L)/2. It shows us quite clearly what’s happening to the market driving force at the present moment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.bwFractals">
            <summary>
            Fractal Technical Indicator it is a series of at least five successive bars, with the highest HIGH in the middle, and two lower HIGHs on both sides. The reversing set is a series of at least five successive bars, with the lowest LOW in the middle, and two higher LOWs on both sides, which correlates to the sell fractal. The fractals are have High and Low values and are indicated with the up and down arrows.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.bwFractals(NinjaTrader.Data.IDataSeries)">
            <summary>
            Fractal Technical Indicator it is a series of at least five successive bars, with the highest HIGH in the middle, and two lower HIGHs on both sides. The reversing set is a series of at least five successive bars, with the lowest LOW in the middle, and two higher LOWs on both sides, which correlates to the sell fractal. The fractals are have High and Low values and are indicated with the up and down arrows.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.dsFibConfluence(System.Int32)">
            <summary>
            Enter the description of your new custom indicator here
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.dsFibConfluence(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Enter the description of your new custom indicator here
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DStochZeroLag(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DStochZeroLag(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DynamicSRLines(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws nearest level of S/R lines above and below current market based on historical price swing High/Low pivots
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.DynamicSRLines(NinjaTrader.Data.IDataSeries,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws nearest level of S/R lines above and below current market based on historical price swing High/Low pivots
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TSEcoNews(TSEcoUtility.DockingPlace)">
            <summary>
             TS Economic News Add On
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TSEcoNews(NinjaTrader.Data.IDataSeries,TSEcoUtility.DockingPlace)">
            <summary>
             TS Economic News Add On
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.FractalLevel(System.Int32)">
            <summary>
            Draws the fractal pivot lines based on 7 fractal bar patterns
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.FractalLevel(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Draws the fractal pivot lines based on 7 fractal bar patterns
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.GrabLong(System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.GrabLong(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.GrabRange(System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.GrabRange(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.GrabShort(System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.GrabShort(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.IchimokuCloud(System.Int32,System.Int32,System.Int32)">
            <summary>
            IchimokuCloud Kinko Hyo - please see http://www.forexabode.com/technical-analysis/ichimoku-cloud
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.IchimokuCloud(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            IchimokuCloud Kinko Hyo - please see http://www.forexabode.com/technical-analysis/ichimoku-cloud
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.LabelRayLineAlerts(System.String,System.Boolean,System.Single,NinjaTrader.Gui.Chart.LabelAreaType,NinjaTrader.Gui.Chart.LabelSideType)">
            <summary>
            Label Ray Lines Alerts
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.LabelRayLineAlerts(NinjaTrader.Data.IDataSeries,System.String,System.Boolean,System.Single,NinjaTrader.Gui.Chart.LabelAreaType,NinjaTrader.Gui.Chart.LabelSideType)">
            <summary>
            Label Ray Lines Alerts
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.LineAlert(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.String)">
            <summary>
            This indicator will alert crossovers for manually drawn lines. Alerts are reset with each new bar or when ManualReset input set to true. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.LineAlert(NinjaTrader.Data.IDataSeries,System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.String)">
            <summary>
            This indicator will alert crossovers for manually drawn lines. Alerts are reset with each new bar or when ManualReset input set to true. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.MACDGapless(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            The MACD (Moving Average Convergence/Divergence) is a trend following momentum indicator that shows the relationship between two moving averages of prices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.MACDGapless(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            The MACD (Moving Average Convergence/Divergence) is a trend following momentum indicator that shows the relationship between two moving averages of prices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.mahTrendGRaBerV1(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This is an adaptation of the GRAB (GRB) setup used by Raghee Horner of InterbankFX for trading currency pairs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.mahTrendGRaBerV1(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This is an adaptation of the GRAB (GRB) setup used by Raghee Horner of InterbankFX for trading currency pairs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.HeikenAshi_Smoothed">
            <summary>
            HeikenAshi_Smoothed technique discussed in the article 'Using Heiken-Ashi Technique' in February 2004 issue of TASC magazine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.HeikenAshi_Smoothed(NinjaTrader.Data.IDataSeries)">
            <summary>
            HeikenAshi_Smoothed technique discussed in the article 'Using Heiken-Ashi Technique' in February 2004 issue of TASC magazine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RBI(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Generates a Generalized Renko Bars 'LineOnClose' Plot on a 1 TICK chart. You should only apply RBI to 1 TICK Charts! But you may get 'interesting'  results if you like to experiment with other charts! Sorry, but it will not improve your batting average!
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RBI(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Generates a Generalized Renko Bars 'LineOnClose' Plot on a 1 TICK chart. You should only apply RBI to 1 TICK Charts! But you may get 'interesting'  results if you like to experiment with other charts! Sorry, but it will not improve your batting average!
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RGaussianFilter(System.Int32,System.Int32)">
            <summary>
            Gaussian Filter Ported to NT
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RGaussianFilter(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            Gaussian Filter Ported to NT
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RSqueeze(RSqueeze.Utility.SqueezeStyle)">
            <summary>
            Squeeze collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RSqueeze(NinjaTrader.Data.IDataSeries,RSqueeze.Utility.SqueezeStyle)">
            <summary>
            Squeeze collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RValueCharts(System.Boolean,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Single,System.Int32,System.Boolean,System.Boolean,System.Drawing.Color,RValueCharts.Utility.ValueChartStyle)">
            <summary>
            Value Charts by David Stendhal; Converted to NinjaTrader by TradingStudies.com
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.RValueCharts(NinjaTrader.Data.IDataSeries,System.Boolean,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Single,System.Int32,System.Boolean,System.Boolean,System.Drawing.Color,RValueCharts.Utility.ValueChartStyle)">
            <summary>
            Value Charts by David Stendhal; Converted to NinjaTrader by TradingStudies.com
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.SlingShot(System.Drawing.Color,System.Drawing.Color,System.Int32,NinjaTrader.Data.PriceType,SlingShot.Utility.MovingAverageType,System.Int32,System.Int32,NinjaTrader.Data.PriceType,SlingShot.Utility.MovingAverageType)">
            <summary>
            SlingShot Indicator - Paints Region between two moving averages of your choice. Created by TradingStudies.com
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.SlingShot(NinjaTrader.Data.IDataSeries,System.Drawing.Color,System.Drawing.Color,System.Int32,NinjaTrader.Data.PriceType,SlingShot.Utility.MovingAverageType,System.Int32,System.Int32,NinjaTrader.Data.PriceType,SlingShot.Utility.MovingAverageType)">
            <summary>
            SlingShot Indicator - Paints Region between two moving averages of your choice. Created by TradingStudies.com
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.SMMA(System.Int32)">
            <summary>
            The SMMA (Smoothed Moving Average) is an indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.SMMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The SMMA (Smoothed Moving Average) is an indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.SuperTrend(System.Int32,System.Double,System.Boolean)">
            <summary>
            SuperTrend Indicator developed by Roonius
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.SuperTrend(NinjaTrader.Data.IDataSeries,System.Int32,System.Double,System.Boolean)">
            <summary>
            SuperTrend Indicator developed by Roonius
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TrendLineAlert">
            <summary>
            Alert when price hits a trend line. Bid when price is below a trend line, and Ask when price is above a trend line. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TrendLineAlert(NinjaTrader.Data.IDataSeries)">
            <summary>
            Alert when price hits a trend line. Bid when price is below a trend line, and Ask when price is above a trend line. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TrendSpotter(System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Finds the the current, prevailing linear trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TrendSpotter(NinjaTrader.Data.IDataSeries,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Finds the the current, prevailing linear trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TSIntradayPivots(System.Int32)">
            <summary>
            Rolling Intraday Pivots (created by TradingStudies.com)
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TSIntradayPivots(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Rolling Intraday Pivots (created by TradingStudies.com)
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TTMWaveAOC(System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TTMWaveAOC(NinjaTrader.Data.IDataSeries,System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TTMWaveBOC(System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TTMWaveBOC(NinjaTrader.Data.IDataSeries,System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TTMWaveCOC(System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.TTMWaveCOC(NinjaTrader.Data.IDataSeries,System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.JurikDMX(System.Int32)">
            <summary>
            Jurik DMX (Directional Movement Index) is a smoother version of the technical indicator DMI, while retaining very fast response speed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.JurikDMX(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Jurik DMX (Directional Movement Index) is a smoother version of the technical indicator DMI, while retaining very fast response speed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.JurikJMA(System.Double,System.Double)">
            <summary>
            Jurik JMA Adaptive Moving Average is a Moving Average Indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.JurikJMA(NinjaTrader.Data.IDataSeries,System.Double,System.Double)">
            <summary>
            Jurik JMA Adaptive Moving Average is a Moving Average Indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.JurikRSX(System.Double)">
            <summary>
            Jurik RSX (Relative Trend Strength Index) is a smoother version of the technical RSI indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.JurikRSX(NinjaTrader.Data.IDataSeries,System.Double)">
            <summary>
            Jurik RSX (Relative Trend Strength Index) is a smoother version of the technical RSI indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.JurikVEL(System.Int32)">
            <summary>
            Jurik VEL (Zero-Lag Velocity) is a smoother version of the technical indicator 'momentum' with the special feature that the smoothing process has added no additional lag to the original momentum indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.JurikVEL(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Jurik VEL (Zero-Lag Velocity) is a smoother version of the technical indicator 'momentum' with the special feature that the smoothing process has added no additional lag to the original momentum indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.WoodiesCCI(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Woodies variation of the CCI.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.WoodiesCCI(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Woodies variation of the CCI.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.WoodiesPivots(NinjaTrader.Data.HLCCalculationMode,System.Int32)">
            <summary>
            Woodies Pivot Points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Indicator.WoodiesPivots(NinjaTrader.Data.IDataSeries,NinjaTrader.Data.HLCCalculationMode,System.Int32)">
            <summary>
            Woodies Pivot Points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.ADL.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ADL.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.Column">
            <summary>
            </summary>
            <summary>
            This file holds all user defined quoteboard column methods.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ADL">
            <summary>
            The Accumulation/Distribution (AD) study attempts to quantify the amount of volume flowing into or out of an instrument by identifying the position of the close of the period in relation to that period�s high/low range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ADL(NinjaTrader.Data.IDataSeries)">
            <summary>
            The Accumulation/Distribution (AD) study attempts to quantify the amount of volume flowing into or out of an instrument by identifying the position of the close of the period in relation to that period�s high/low range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ADX(System.Int32)">
            <summary>
            The Average Directional Index measures the strength of a prevailing trend as well as whether movement exists in the market. The ADX is measured on a scale of 0  100. A low ADX value (generally less than 20) can indicate a non-trending market with low volumes whereas a cross above 20 may indicate the start of a trend (either up or down). If the ADX is over 40 and begins to fall, it can indicate the slowdown of a current trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ADX(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Average Directional Index measures the strength of a prevailing trend as well as whether movement exists in the market. The ADX is measured on a scale of 0  100. A low ADX value (generally less than 20) can indicate a non-trending market with low volumes whereas a cross above 20 may indicate the start of a trend (either up or down). If the ADX is over 40 and begins to fall, it can indicate the slowdown of a current trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ADXR(System.Int32,System.Int32)">
            <summary>
            Average Directional Movement Rating quantifies momentum change in the ADX. It is calculated by adding two values of ADX (the current value and a value n periods back), then dividing by two. This additional smoothing makes the ADXR slightly less responsive than ADX. The interpretation is the same as the ADX; the higher the value, the stronger the trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ADXR(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            Average Directional Movement Rating quantifies momentum change in the ADX. It is calculated by adding two values of ADX (the current value and a value n periods back), then dividing by two. This additional smoothing makes the ADXR slightly less responsive than ADX. The interpretation is the same as the ADX; the higher the value, the stronger the trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.APZ(System.Double,System.Int32)">
            <summary>
            The APZ (Adaptive Prize Zone) forms a steady channel based on double smoothed exponential moving averages around the average price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.APZ(NinjaTrader.Data.IDataSeries,System.Double,System.Int32)">
            <summary>
            The APZ (Adaptive Prize Zone) forms a steady channel based on double smoothed exponential moving averages around the average price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Aroon(System.Int32)">
            <summary>
            The Aroon Indicator was developed by Tushar Chande. Its comprised of two plots one measuring the number of periods since the most recent x-period high (Aroon Up) and the other measuring the number of periods since the most recent x-period low (Aroon Down).
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Aroon(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Aroon Indicator was developed by Tushar Chande. Its comprised of two plots one measuring the number of periods since the most recent x-period high (Aroon Up) and the other measuring the number of periods since the most recent x-period low (Aroon Down).
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.AroonOscillator(System.Int32)">
            <summary>
            The Aroon Oscillator is based upon his Aroon Indicator. Much like the Aroon Indicator, the Aroon Oscillator measures the strength of a trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.AroonOscillator(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Aroon Oscillator is based upon his Aroon Indicator. Much like the Aroon Indicator, the Aroon Oscillator measures the strength of a trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ATR(System.Int32)">
            <summary>
            The Average True Range (ATR) is a measure of volatility. It was introduced by Welles Wilder in his book 'New Concepts in Technical Trading Systems' and has since been used as a component of many indicators and trading systems.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ATR(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Average True Range (ATR) is a measure of volatility. It was introduced by Welles Wilder in his book 'New Concepts in Technical Trading Systems' and has since been used as a component of many indicators and trading systems.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.BarTimer">
            <summary>
            Displays remaining time of minute based bar
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.BarTimer(NinjaTrader.Data.IDataSeries)">
            <summary>
            Displays remaining time of minute based bar
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Bollinger(System.Double,System.Int32)">
            <summary>
            Bollinger Bands are plotted at standard deviation levels above and below a moving average. Since standard deviation is a measure of volatility, the bands are self-adjusting: widening during volatile markets and contracting during calmer periods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Bollinger(NinjaTrader.Data.IDataSeries,System.Double,System.Int32)">
            <summary>
            Bollinger Bands are plotted at standard deviation levels above and below a moving average. Since standard deviation is a measure of volatility, the bands are self-adjusting: widening during volatile markets and contracting during calmer periods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.BOP(System.Int32)">
            <summary>
            The balance of power indicator measures the strength of the bulls vs. bears by assessing the ability of each to push price to an extreme level.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.BOP(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The balance of power indicator measures the strength of the bulls vs. bears by assessing the ability of each to push price to an extreme level.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.BuySellPressure">
            <summary>
            Indicates the current buying or selling pressure as a perecentage. This is a tick by tick indicator. If 'Calculate on bar close' is true, the indicator values will always be 100.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.BuySellPressure(NinjaTrader.Data.IDataSeries)">
            <summary>
            Indicates the current buying or selling pressure as a perecentage. This is a tick by tick indicator. If 'Calculate on bar close' is true, the indicator values will always be 100.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.BuySellVolume">
            <summary>
            This indicator is a real-time indicator and does not plot against historical data. Plots a histogram splitting volume between trades at the ask or higher and trades at the bid and lower.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.BuySellVolume(NinjaTrader.Data.IDataSeries)">
            <summary>
            This indicator is a real-time indicator and does not plot against historical data. Plots a histogram splitting volume between trades at the ask or higher and trades at the bid and lower.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.CandleStickPattern(ChartPattern,System.Int32)">
            <summary>
            Detects common candlestick patterns and marks them on the chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.CandleStickPattern(NinjaTrader.Data.IDataSeries,ChartPattern,System.Int32)">
            <summary>
            Detects common candlestick patterns and marks them on the chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.CCI(System.Int32)">
            <summary>
            The Commodity Channel Index (CCI) measures the variation of a security's price from its statistical mean. High values show that prices are unusually high compared to average prices whereas low values indicate that prices are unusually low.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.CCI(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Commodity Channel Index (CCI) measures the variation of a security's price from its statistical mean. High values show that prices are unusually high compared to average prices whereas low values indicate that prices are unusually low.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ChaikinMoneyFlow(System.Int32)">
            <summary>
            Chaikin Money Flow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ChaikinMoneyFlow(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Chaikin Money Flow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ChaikinOscillator(System.Int32,System.Int32)">
            <summary>
            Chaikin Oscillator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ChaikinOscillator(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            Chaikin Oscillator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ChaikinVolatility(System.Int32)">
            <summary>
            Chaikin Volatility
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ChaikinVolatility(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Chaikin Volatility
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.CMO(System.Int32)">
            <summary>
            The CMO differs from other momentum oscillators such as Relative Strength Index (RSI) and Stochastics. It uses both up and down days data in the numerator of the calculation to measure momentum directly. Primarily used to look for extreme overbought and oversold conditions, CMO can also be used to look for trends.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.CMO(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The CMO differs from other momentum oscillators such as Relative Strength Index (RSI) and Stochastics. It uses both up and down days data in the numerator of the calculation to measure momentum directly. Primarily used to look for extreme overbought and oversold conditions, CMO can also be used to look for trends.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ConstantLines(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Plots lines at user defined values. Lines with values of zero will not plot.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ConstantLines(NinjaTrader.Data.IDataSeries,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Plots lines at user defined values. Lines with values of zero will not plot.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.CurrentDayOHL">
            <summary>
            Plots the open, high, and low values from the session starting on the current day.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.CurrentDayOHL(NinjaTrader.Data.IDataSeries)">
            <summary>
            Plots the open, high, and low values from the session starting on the current day.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.CustomPlotSample">
            <summary>
            This is a sample for an indicator using custom plotting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.CustomPlotSample(NinjaTrader.Data.IDataSeries)">
            <summary>
            This is a sample for an indicator using custom plotting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Darvas">
            <summary>
            The Darvas Boxes were taken from the pages of Nicolas Darvas book, How I Made $2,000,000 in the Stock Market. The boxes are used to normalize a trend. A 'buy' signal would be indicated when the price of the stock exceeds the top of the box. A 'sell' signal would be indicated when the price of the stock falls below the bottom of the box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Darvas(NinjaTrader.Data.IDataSeries)">
            <summary>
            The Darvas Boxes were taken from the pages of Nicolas Darvas book, How I Made $2,000,000 in the Stock Market. The boxes are used to normalize a trend. A 'buy' signal would be indicated when the price of the stock exceeds the top of the box. A 'sell' signal would be indicated when the price of the stock falls below the bottom of the box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DEMA(System.Int32)">
            <summary>
            Double Exponential Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DEMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Double Exponential Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DM(System.Int32)">
            <summary>
            This is the same indicator as the ADX, with the addition of the two directional movement indicators +DI and -DI. +DI and -DI measure upward and downward momentum. A buy signal is generated when +DI crosses -DI to the upside. A sell signal is generated when -DI crosses +DI to the downside.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DM(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            This is the same indicator as the ADX, with the addition of the two directional movement indicators +DI and -DI. +DI and -DI measure upward and downward momentum. A buy signal is generated when +DI crosses -DI to the upside. A sell signal is generated when -DI crosses +DI to the downside.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DMI(System.Int32)">
            <summary>
            The Directional Movement Index is quite similiar to Welles Wilder's Relative Strength Index. The difference is the DMI uses variable time periods (from 3 to 30) vs. the RSI's fixed periods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DMI(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Directional Movement Index is quite similiar to Welles Wilder's Relative Strength Index. The difference is the DMI uses variable time periods (from 3 to 30) vs. the RSI's fixed periods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DMIndex(System.Int32)">
            <summary>
            The Dynamic Momentum Index (DMI) as developed by Tushar Chande and Stanley Kroll and outlined in detail in their book The New Technical Trader.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DMIndex(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Dynamic Momentum Index (DMI) as developed by Tushar Chande and Stanley Kroll and outlined in detail in their book The New Technical Trader.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DonchianChannel(System.Int32)">
            <summary>
            The Donchian Channel indicator was created by Richard Donchian. It uses the highest high and the lowest low of a period of time to plot the channel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DonchianChannel(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Donchian Channel indicator was created by Richard Donchian. It uses the highest high and the lowest low of a period of time to plot the channel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DoubleStochastics(System.Int32)">
            <summary>
            Double stochastics
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DoubleStochastics(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Double stochastics
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.EaseOfMovement(System.Int32,System.Int32)">
            <summary>
            The Ease of Movement (EMV) indicator emphasizes days in which the stock is moving easily and minimizes the days in which the stock is finding it difficult to move. A buy signal is generated when the EMV crosses above zero, a sell signal when it crosses below zero. When the EMV hovers around zero, then there are small price movements and/or high volume, which is to say, the price is not moving easily.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.EaseOfMovement(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The Ease of Movement (EMV) indicator emphasizes days in which the stock is moving easily and minimizes the days in which the stock is finding it difficult to move. A buy signal is generated when the EMV crosses above zero, a sell signal when it crosses below zero. When the EMV hovers around zero, then there are small price movements and/or high volume, which is to say, the price is not moving easily.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.EMA(System.Int32)">
            <summary>
            The Exponential Moving Average is an indicator that shows the average value of a security's price over a period of time. When calculating a moving average. The EMA applies more weight to recent prices than the SMA.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.EMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Exponential Moving Average is an indicator that shows the average value of a security's price over a period of time. When calculating a moving average. The EMA applies more weight to recent prices than the SMA.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.FisherTransform(System.Int32)">
            <summary>
            The Fisher Transform has sharp and distinct turning points that occur in a timely fashion. The resulting peak swings are used to identify price reversals.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.FisherTransform(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Fisher Transform has sharp and distinct turning points that occur in a timely fashion. The resulting peak swings are used to identify price reversals.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.FOSC(System.Int32)">
            <summary>
            The Forecast Oscillator (FOSC) is an extension of the linear regression based indicators made popular by Tushar Chande. The Forecast Oscillator plots the percentage difference between the forecast price (generated by an x-period linear regression line) and the actual price. The oscillator is above zero when the forecast price is greater than the actual price.  Conversely, it's less than zero if its below. In the rare case when the forecast price and the actual price are the same, the oscillator would plot zero. Actual prices that are persistently below the forecast price suggest lower prices ahead.  Likewise, actual prices that are persistently above the forecast price suggest higher prices ahead. Short-term traders should use shorter time periods and perhaps more relaxed standards for the required length of time above or below the forecast price. Long-term traders should use longer time periods and perhaps stricter standards for the required length of time above or below the forecast price. Chande also suggests plotting a three-day moving average trigger line of the Forecast Oscillator to generate early warnings of changes in trend. When the oscillator crosses below the trigger line, lower prices are suggested. When the oscillator crosses above the trigger line, higher prices are suggested.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.FOSC(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Forecast Oscillator (FOSC) is an extension of the linear regression based indicators made popular by Tushar Chande. The Forecast Oscillator plots the percentage difference between the forecast price (generated by an x-period linear regression line) and the actual price. The oscillator is above zero when the forecast price is greater than the actual price.  Conversely, it's less than zero if its below. In the rare case when the forecast price and the actual price are the same, the oscillator would plot zero. Actual prices that are persistently below the forecast price suggest lower prices ahead.  Likewise, actual prices that are persistently above the forecast price suggest higher prices ahead. Short-term traders should use shorter time periods and perhaps more relaxed standards for the required length of time above or below the forecast price. Long-term traders should use longer time periods and perhaps stricter standards for the required length of time above or below the forecast price. Chande also suggests plotting a three-day moving average trigger line of the Forecast Oscillator to generate early warnings of changes in trend. When the oscillator crosses below the trigger line, lower prices are suggested. When the oscillator crosses above the trigger line, higher prices are suggested.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.HeikenAshi">
            <summary>
            HeikenAshi technique discussed in the article 'Using Heiken-Ashi Technique' in February 2004 issue of TASC magazine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.HeikenAshi(NinjaTrader.Data.IDataSeries)">
            <summary>
            HeikenAshi technique discussed in the article 'Using Heiken-Ashi Technique' in February 2004 issue of TASC magazine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.HMA(System.Int32)">
            <summary>
            The Hull Moving Average (HMA) employs weighted MA calculations to offer superior smoothing, and much less lag, over traditional SMA indicators.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.HMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Hull Moving Average (HMA) employs weighted MA calculations to offer superior smoothing, and much less lag, over traditional SMA indicators.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.KAMA(System.Int32,System.Int32,System.Int32)">
            <summary>
            Developed by Perry Kaufman, this indicator is an EMA using an Efficiency Ratio to modify the smoothing constant, which ranges from a minimum of Fast Length to a maximum of Slow Length. Since this moving average is adaptive it tends to follow prices more closely than other MA's.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.KAMA(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            Developed by Perry Kaufman, this indicator is an EMA using an Efficiency Ratio to modify the smoothing constant, which ranges from a minimum of Fast Length to a maximum of Slow Length. Since this moving average is adaptive it tends to follow prices more closely than other MA's.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.KeltnerChannel(System.Double,System.Int32)">
            <summary>
            The Keltner Channel is a similar indicator to Bollinger Bands. Here the midline is a standard moving average with the upper and lower bands offset by the SMA of the difference between the high and low of the previous bars. The offset multiplier as well as the SMA period is configurable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.KeltnerChannel(NinjaTrader.Data.IDataSeries,System.Double,System.Int32)">
            <summary>
            The Keltner Channel is a similar indicator to Bollinger Bands. Here the midline is a standard moving average with the upper and lower bands offset by the SMA of the difference between the high and low of the previous bars. The offset multiplier as well as the SMA period is configurable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.KeyReversalDown(System.Int32)">
            <summary>
            Returns a value of 1 when the current close is less than the prior close after penetrating the highest high of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.KeyReversalDown(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Returns a value of 1 when the current close is less than the prior close after penetrating the highest high of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.KeyReversalUp(System.Int32)">
            <summary>
            Returns a value of 1 when the current close is greater than the prior close after penetrating the lowest low of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.KeyReversalUp(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Returns a value of 1 when the current close is greater than the prior close after penetrating the lowest low of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.LinReg(System.Int32)">
            <summary>
            The Linear Regression is an indicator that 'predicts' the value of a security's price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.LinReg(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Linear Regression is an indicator that 'predicts' the value of a security's price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.LinRegIntercept(System.Int32)">
            <summary>
            Linnear Regression Intercept
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.LinRegIntercept(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Linnear Regression Intercept
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.LinRegSlope(System.Int32)">
            <summary>
            Linear Regression Slope
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.LinRegSlope(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Linear Regression Slope
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.MACD(System.Int32,System.Int32,System.Int32)">
            <summary>
            The MACD (Moving Average Convergence/Divergence) is a trend following momentum indicator that shows the relationship between two moving averages of prices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.MACD(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            The MACD (Moving Average Convergence/Divergence) is a trend following momentum indicator that shows the relationship between two moving averages of prices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.MAEnvelopes(System.Double,System.Int32,System.Int32)">
            <summary>
            Plots % envelopes around a moving average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.MAEnvelopes(NinjaTrader.Data.IDataSeries,System.Double,System.Int32,System.Int32)">
            <summary>
            Plots % envelopes around a moving average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.MAMA(System.Double,System.Double)">
            <summary>
            The MAMA (MESA Adaptive Moving Average) was developed by John Ehlers. It adapts to price movement in a new and unique way. The adaptation is based on the Hilbert Transform Discriminator. The adavantage of this method features fast attack average and a slow decay average. The MAMA + the FAMA (Following Adaptive Moving Average) lines only cross at major market reversals.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.MAMA(NinjaTrader.Data.IDataSeries,System.Double,System.Double)">
            <summary>
            The MAMA (MESA Adaptive Moving Average) was developed by John Ehlers. It adapts to price movement in a new and unique way. The adaptation is based on the Hilbert Transform Discriminator. The adavantage of this method features fast attack average and a slow decay average. The MAMA + the FAMA (Following Adaptive Moving Average) lines only cross at major market reversals.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.MAX(System.Int32)">
            <summary>
            The Maximum shows the maximum of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.MAX(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Maximum shows the maximum of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.MFI(System.Int32)">
            <summary>
            The MFI (Money Flow Index) is a momentum indicator that measures the strength of money flowing in and out of a security.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.MFI(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The MFI (Money Flow Index) is a momentum indicator that measures the strength of money flowing in and out of a security.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.MIN(System.Int32)">
            <summary>
            The Minimum shows the minimum of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.MIN(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Minimum shows the minimum of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Momentum(System.Int32)">
            <summary>
            The Momentum indicator measures the amount that a security's price has changed over a given time span.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Momentum(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Momentum indicator measures the amount that a security's price has changed over a given time span.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.NBarsDown(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This indicator returns 1 when we have n of consecutive bars down, otherwise returns 0. A down bar is defined as a bar where the close is below the open and the bars makes a lower high and a lower low. You can adjust the specific requirements with the indicator options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.NBarsDown(NinjaTrader.Data.IDataSeries,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This indicator returns 1 when we have n of consecutive bars down, otherwise returns 0. A down bar is defined as a bar where the close is below the open and the bars makes a lower high and a lower low. You can adjust the specific requirements with the indicator options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.NBarsUp(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This indicator returns 1 when we have n of consecutive bars up, otherwise returns 0. An up bar is defined as a bar where the close is above the open and the bars makes a higher high and a higher low. You can adjust the specific requirements with the indicator options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.NBarsUp(NinjaTrader.Data.IDataSeries,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This indicator returns 1 when we have n of consecutive bars up, otherwise returns 0. An up bar is defined as a bar where the close is above the open and the bars makes a higher high and a higher low. You can adjust the specific requirements with the indicator options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.OBV">
            <summary>
            OBV (On Balance Volume) is a running total of volume. It shows if volume is flowing into or out of a security. When the security closes higher than the previous close, all of the day's volume is considered up-volume. When the security closes lower than the previous close, all of the day's volume is considered down-volume.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.OBV(NinjaTrader.Data.IDataSeries)">
            <summary>
            OBV (On Balance Volume) is a running total of volume. It shows if volume is flowing into or out of a security. When the security closes higher than the previous close, all of the day's volume is considered up-volume. When the security closes lower than the previous close, all of the day's volume is considered down-volume.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ParabolicSAR(System.Double,System.Double,System.Double)">
            <summary>
            Parabolic SAR
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ParabolicSAR(NinjaTrader.Data.IDataSeries,System.Double,System.Double,System.Double)">
            <summary>
            Parabolic SAR
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.PFE(System.Int32,System.Int32)">
            <summary>
            The PFE (Polarized Fractal Efficiency) is an indicator that uses fractal geometry to determine how efficiently the price is moving.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.PFE(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The PFE (Polarized Fractal Efficiency) is an indicator that uses fractal geometry to determine how efficiently the price is moving.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Pivots(NinjaTrader.Data.PivotRange,NinjaTrader.Data.HLCCalculationMode,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Pivot Points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Pivots(NinjaTrader.Data.IDataSeries,NinjaTrader.Data.PivotRange,NinjaTrader.Data.HLCCalculationMode,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Pivot Points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.PPO(System.Int32,System.Int32,System.Int32)">
            <summary>
            The PPO (Percentage Price Oscillator) is based on two moving averages expressed as a percentage. The PPO is found by subtracting the longer MA from the shorter MA and then dividing the difference by the longer MA.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.PPO(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            The PPO (Percentage Price Oscillator) is based on two moving averages expressed as a percentage. The PPO is found by subtracting the longer MA from the shorter MA and then dividing the difference by the longer MA.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.PriceAlert_New(System.Double,System.Boolean)">
            <summary>
            Sends an alert to the alert window when a price level has been reached.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.PriceAlert_New(NinjaTrader.Data.IDataSeries,System.Double,System.Boolean)">
            <summary>
            Sends an alert to the alert window when a price level has been reached.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.PriceOscillator(System.Int32,System.Int32,System.Int32)">
            <summary>
            The Price Oscillator indicator shows the variation among two moving averages for the price of a security.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.PriceOscillator(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            The Price Oscillator indicator shows the variation among two moving averages for the price of a security.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.PriorDayOHLC">
            <summary>
            Plots the open, high, low and close values from the session starting on the prior day.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.PriorDayOHLC(NinjaTrader.Data.IDataSeries)">
            <summary>
            Plots the open, high, low and close values from the session starting on the prior day.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Range">
            <summary>
            Calculates the range of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Range(NinjaTrader.Data.IDataSeries)">
            <summary>
            Calculates the range of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RangeCounter(System.Boolean)">
            <summary>
            Displays the range countdown of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RangeCounter(NinjaTrader.Data.IDataSeries,System.Boolean)">
            <summary>
            Displays the range countdown of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RegressionChannel(System.Int32,System.Double)">
            <summary>
            Linear regression is used to calculate a best fit line for the price data. In addition an upper and lower band is added by calculating the standard deviation of prices from the regression line.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RegressionChannel(NinjaTrader.Data.IDataSeries,System.Int32,System.Double)">
            <summary>
            Linear regression is used to calculate a best fit line for the price data. In addition an upper and lower band is added by calculating the standard deviation of prices from the regression line.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RIND(System.Int32,System.Int32)">
            <summary>
            RIND (Range Indicator) compares the intraday range (high - low) to the inter-day (close - previous close) range. When the intraday range is greater than the inter-day range, the Range Indicator will be a high value. This signals an end to the current trend. When the Range Indicator is at a low level, a new trend is about to start.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RIND(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            RIND (Range Indicator) compares the intraday range (high - low) to the inter-day (close - previous close) range. When the intraday range is greater than the inter-day range, the Range Indicator will be a high value. This signals an end to the current trend. When the Range Indicator is at a low level, a new trend is about to start.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ROC(System.Int32)">
            <summary>
            The ROC (Rate-of-Change) indicator displays the difference between the current price and the price x-time periods ago.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ROC(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The ROC (Rate-of-Change) indicator displays the difference between the current price and the price x-time periods ago.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RSI(System.Int32,System.Int32)">
            <summary>
            The RSI (Relative Strength Index) is a price-following oscillator that ranges between 0 and 100.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RSI(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The RSI (Relative Strength Index) is a price-following oscillator that ranges between 0 and 100.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RSquared(System.Int32)">
            <summary>
            R-squared indicator
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RSquared(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            R-squared indicator
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RSS(System.Int32,System.Int32,System.Int32)">
            <summary>
            Relative Spread Strength of the spread between two moving averages. TASC, October 2006, p. 16.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RSS(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            Relative Spread Strength of the spread between two moving averages. TASC, October 2006, p. 16.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RVI(System.Int32)">
            <summary>
            The RVI (Relative Volatility Index) was developed by Donald Dorsey as a compliment to and a confirmation of momentum based indicators. When used to confirm other signals, only buy when the RVI is over 50 and only sell when the RVI is under 50.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RVI(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The RVI (Relative Volatility Index) was developed by Donald Dorsey as a compliment to and a confirmation of momentum based indicators. When used to confirm other signals, only buy when the RVI is over 50 and only sell when the RVI is under 50.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.SMA(System.Int32)">
            <summary>
            The SMA (Simple Moving Average) is an indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.SMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The SMA (Simple Moving Average) is an indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.StdDev(System.Int32)">
            <summary>
            Standard Deviation is a statistical measure of volatility. Standard Deviation is typically used as a component of other indicators, rather than as a stand-alone indicator. For example, Bollinger Bands are calculated by adding a security's Standard Deviation to a moving average.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.StdDev(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Standard Deviation is a statistical measure of volatility. Standard Deviation is typically used as a component of other indicators, rather than as a stand-alone indicator. For example, Bollinger Bands are calculated by adding a security's Standard Deviation to a moving average.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.StdError(System.Int32)">
            <summary>
            Standard Error shows how near prices go around a linear regression line.  The closer the prices are to the linear regression line, the stronger is the trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.StdError(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Standard Error shows how near prices go around a linear regression line.  The closer the prices are to the linear regression line, the stronger is the trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Stochastics(System.Int32,System.Int32,System.Int32)">
            <summary>
            The Stochastic Oscillator is made up of two lines that oscillate between a vertical scale of 0 to 100. The %K is the main line and it is drawn as a solid line. The second is the %D line and is a moving average of %K. The %D line is drawn as a dotted line. Use as a buy/sell signal generator, buying when fast moves above slow and selling when fast moves below slow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Stochastics(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            The Stochastic Oscillator is made up of two lines that oscillate between a vertical scale of 0 to 100. The %K is the main line and it is drawn as a solid line. The second is the %D line and is a moving average of %K. The %D line is drawn as a dotted line. Use as a buy/sell signal generator, buying when fast moves above slow and selling when fast moves below slow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.StochasticsFast(System.Int32,System.Int32)">
            <summary>
            The Stochastic Oscillator is made up of two lines that oscillate between a vertical scale of 0 to 100. The %K is the main line and it is drawn as a solid line. The second is the %D line and is a moving average of %K. The %D line is drawn as a dotted line. Use as a buy/sell signal generator, buying when fast moves above slow and selling when fast moves below slow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.StochasticsFast(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The Stochastic Oscillator is made up of two lines that oscillate between a vertical scale of 0 to 100. The %K is the main line and it is drawn as a solid line. The second is the %D line and is a moving average of %K. The %D line is drawn as a dotted line. Use as a buy/sell signal generator, buying when fast moves above slow and selling when fast moves below slow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.StochRSI(System.Int32)">
            <summary>
            The StochRSI is an oscillator similar in computation to the stochastic measure, except instead of price values as input, the StochRSI uses RSI values. The StochRSI computes the current position of the RSI relative to the high and low RSI values over a specified number of days. The intent of this measure, designed by Tushard Chande and Stanley Kroll, is to provide further information about the overbought/oversold nature of the RSI. The StochRSI ranges between 0.0 and 1.0. Values above 0.8 are generally seen to identify overbought levels and values below 0.2 are considered to indicate oversold conditions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.StochRSI(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The StochRSI is an oscillator similar in computation to the stochastic measure, except instead of price values as input, the StochRSI uses RSI values. The StochRSI computes the current position of the RSI relative to the high and low RSI values over a specified number of days. The intent of this measure, designed by Tushard Chande and Stanley Kroll, is to provide further information about the overbought/oversold nature of the RSI. The StochRSI ranges between 0.0 and 1.0. Values above 0.8 are generally seen to identify overbought levels and values below 0.2 are considered to indicate oversold conditions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.SUM(System.Int32)">
            <summary>
            The Sum shows the summation of the last n data points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.SUM(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Sum shows the summation of the last n data points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Swing(System.Int32)">
            <summary>
            The Swing indicator plots lines that represents the swing high and low points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Swing(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Swing indicator plots lines that represents the swing high and low points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.T3(System.Int32,System.Int32,System.Double)">
            <summary>
            T3 Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.T3(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Double)">
            <summary>
            T3 Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TEMA(System.Int32)">
            <summary>
            Triple Exponential Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TEMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Triple Exponential Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TickCounter(System.Boolean,System.Boolean)">
            <summary>
            Displays the tick count of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TickCounter(NinjaTrader.Data.IDataSeries,System.Boolean,System.Boolean)">
            <summary>
            Displays the tick count of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TMA(System.Int32)">
            <summary>
            The TMA (Triangular Moving Average) is a weighted moving average. Compared to the WMA which puts more weight on the latest price bar, the TMA puts more weight on the data in the middle of the specified period.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The TMA (Triangular Moving Average) is a weighted moving average. Compared to the WMA which puts more weight on the latest price bar, the TMA puts more weight on the data in the middle of the specified period.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TRIX(System.Int32,System.Int32)">
            <summary>
            The TRIX (Triple Exponential Average) displays the percentage Rate of Change (ROC) of a triple EMA. Trix oscillates above and below the zero value. The indicator applies triple smoothing in an attempt to eliminate insignificant price movements within the trend that you're trying to isolate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TRIX(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The TRIX (Triple Exponential Average) displays the percentage Rate of Change (ROC) of a triple EMA. Trix oscillates above and below the zero value. The indicator applies triple smoothing in an attempt to eliminate insignificant price movements within the trend that you're trying to isolate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TSF(System.Int32,System.Int32)">
            <summary>
            The TSF (Time Series Forecast) calculates probable future values for the price by fitting a linear regression line over a given number of price bars and following that line forward into the future. A linear regression line is a straight line which is as close to all of the given price points as possible. Also see the Linear Regression indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TSF(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The TSF (Time Series Forecast) calculates probable future values for the price by fitting a linear regression line over a given number of price bars and following that line forward into the future. A linear regression line is a straight line which is as close to all of the given price points as possible. Also see the Linear Regression indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TSI(System.Int32,System.Int32)">
            <summary>
            The TSI (True Strength Index) is a momentum-based indicator, developed by William Blau. Designed to determine both trend and overbought/oversold conditions, the TSI is applicable to intraday time frames as well as long term trading.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TSI(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The TSI (True Strength Index) is a momentum-based indicator, developed by William Blau. Designed to determine both trend and overbought/oversold conditions, the TSI is applicable to intraday time frames as well as long term trading.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.UltimateOscillator(System.Int32,System.Int32,System.Int32)">
            <summary>
            The Ultimate Oscillator is the weighted sum of three oscillators of different time periods. The typical time periods are 7, 14 and 28. The values of the Ultimate Oscillator range from zero to 100. Values over 70 indicate overbought conditions, and values under 30 indicate oversold conditions. Also look for agreement/divergence with the price to confirm a trend or signal the end of a trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.UltimateOscillator(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            The Ultimate Oscillator is the weighted sum of three oscillators of different time periods. The typical time periods are 7, 14 and 28. The values of the Ultimate Oscillator range from zero to 100. Values over 70 indicate overbought conditions, and values under 30 indicate oversold conditions. Also look for agreement/divergence with the price to confirm a trend or signal the end of a trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VMA(System.Int32,System.Int32)">
            <summary>
            The VMA (Variable Moving Average, also known as VIDYA or Variable Index Dynamic Average) is an exponential moving average that automatically adjusts the smoothing weight based on the volatility of the data series. VMA solves a problem with most moving averages. In times of low volatility, such as when the price is trending, the moving average time period should be shorter to be sensitive to the inevitable break in the trend. Whereas, in more volatile non-trending times, the moving average time period should be longer to filter out the choppiness. VIDYA uses the CMO indicator for it's internal volatility calculations. Both the VMA and the CMO period are adjustable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VMA(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The VMA (Variable Moving Average, also known as VIDYA or Variable Index Dynamic Average) is an exponential moving average that automatically adjusts the smoothing weight based on the volatility of the data series. VMA solves a problem with most moving averages. In times of low volatility, such as when the price is trending, the moving average time period should be shorter to be sensitive to the inevitable break in the trend. Whereas, in more volatile non-trending times, the moving average time period should be longer to filter out the choppiness. VIDYA uses the CMO indicator for it's internal volatility calculations. Both the VMA and the CMO period are adjustable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VOL">
            <summary>
            Volume is simply the number of shares (or contracts) traded during a specified time frame (e.g. hour, day, week, month, etc).
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VOL(NinjaTrader.Data.IDataSeries)">
            <summary>
            Volume is simply the number of shares (or contracts) traded during a specified time frame (e.g. hour, day, week, month, etc).
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VOLMA(System.Int32)">
            <summary>
            The VOLMA (Volume Moving Average) plots an exponential moving average (EMA) of volume.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VOLMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The VOLMA (Volume Moving Average) plots an exponential moving average (EMA) of volume.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VolumeCounter(System.Boolean,System.Boolean)">
            <summary>
            Displays the volume count of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VolumeCounter(NinjaTrader.Data.IDataSeries,System.Boolean,System.Boolean)">
            <summary>
            Displays the volume count of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VolumeOscillator(System.Int32,System.Int32)">
            <summary>
            The Volume Oscillator measures volume by calculating the difference of a fast and a slow moving average of volume. The Volume Oscillator can provide insight into the strength or weakness of a price trend. A positive value suggests there is enough market support to continue driving price activity in the direction of the current trend. A negative value suggests there is a lack of support, that prices may begin to become stagnant or reverse.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VolumeOscillator(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The Volume Oscillator measures volume by calculating the difference of a fast and a slow moving average of volume. The Volume Oscillator can provide insight into the strength or weakness of a price trend. A positive value suggests there is enough market support to continue driving price activity in the direction of the current trend. A negative value suggests there is a lack of support, that prices may begin to become stagnant or reverse.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VolumeProfile(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Plots a vertical histogram of volume by price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VolumeProfile(NinjaTrader.Data.IDataSeries,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Plots a vertical histogram of volume by price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VolumeUpDown">
            <summary>
            Variation of the VOL (Volume) indicator that colors the volume histogram different color depending if the current bar is up or down bar
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VolumeUpDown(NinjaTrader.Data.IDataSeries)">
            <summary>
            Variation of the VOL (Volume) indicator that colors the volume histogram different color depending if the current bar is up or down bar
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VolumeZones(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Boolean,System.Drawing.Color,System.Int32)">
            <summary>
            Volume Zones plots a horizontal histogram that overlays a price chart. The histogram bars stretch from left to right starting at the left side of the chart. The length of each bar is determined by the cumulative total of all volume bars for the periods during which the price fell within the vertical range of the histogram bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VolumeZones(NinjaTrader.Data.IDataSeries,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Boolean,System.Drawing.Color,System.Int32)">
            <summary>
            Volume Zones plots a horizontal histogram that overlays a price chart. The histogram bars stretch from left to right starting at the left side of the chart. The length of each bar is determined by the cumulative total of all volume bars for the periods during which the price fell within the vertical range of the histogram bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VROC(System.Int32,System.Int32)">
            <summary>
            The VROC (Volume Rate-of-Change) shows whether or not a volume trend is developing in either an up or down direction. It is similar to the ROC indicator, but is applied to volume instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VROC(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The VROC (Volume Rate-of-Change) shows whether or not a volume trend is developing in either an up or down direction. It is similar to the ROC indicator, but is applied to volume instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VWMA(System.Int32)">
            <summary>
            The VWMA (Volume-Weighted Moving Average) returns the volume-weighted moving average for the specified price series and period. VWMA is similar to a Simple Moving Average (SMA), but each bar of data is weighted by the bar's Volume. VWMA places more significance on the days with the largest volume and the least for the days with lowest volume for the period specified.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.VWMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The VWMA (Volume-Weighted Moving Average) returns the volume-weighted moving average for the specified price series and period. VWMA is similar to a Simple Moving Average (SMA), but each bar of data is weighted by the bar's Volume. VWMA places more significance on the days with the largest volume and the least for the days with lowest volume for the period specified.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.WilliamsR(System.Int32)">
            <summary>
            The Williams %R is a momentum indicator that is designed to identify overbought and oversold areas in a nontrending market.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.WilliamsR(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Williams %R is a momentum indicator that is designed to identify overbought and oversold areas in a nontrending market.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.WMA(System.Int32)">
            <summary>
            The WMA (Weighted Moving Average) is a Moving Average indicator that shows the average value of a security's price over a period of time with special emphasis on the more recent portions of the time period under analysis as opposed to the earlier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.WMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The WMA (Weighted Moving Average) is a Moving Average indicator that shows the average value of a security's price over a period of time with special emphasis on the more recent portions of the time period under analysis as opposed to the earlier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ZigZag(NinjaTrader.Data.DeviationType,System.Double,System.Boolean)">
            <summary>
            The ZigZag indicator shows trend lines filtering out changes below a defined level. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ZigZag(NinjaTrader.Data.IDataSeries,NinjaTrader.Data.DeviationType,System.Double,System.Boolean)">
            <summary>
            The ZigZag indicator shows trend lines filtering out changes below a defined level. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ZLEMA(System.Int32)">
            <summary>
            The ZLEMA (Zero-Lag Exponential Moving Average) is an EMA variant that attempts to adjust for lag.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.ZLEMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The ZLEMA (Zero-Lag Exponential Moving Average) is an EMA variant that attempts to adjust for lag.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.anaFibonacciClusterV14D(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            anaFibonacciClusterV14D.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.anaFibonacciClusterV14D(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            anaFibonacciClusterV14D.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.anaFibonacciClusterV14L(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            anaFibonacciClusterV14L.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.anaFibonacciClusterV14L(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            anaFibonacciClusterV14L.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.AutoTrendH(System.Boolean,System.Boolean,System.Int32)">
            <summary>
            AutoTrendLine with History option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.AutoTrendH(NinjaTrader.Data.IDataSeries,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            AutoTrendLine with History option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.bwAlligator">
            <summary>
            In principle, bwAlligator Technical Indicator is a combination of Balance Lines (Moving Averages) that use fractal geometry and nonlinear dynamics.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.bwAlligator(NinjaTrader.Data.IDataSeries)">
            <summary>
            In principle, bwAlligator Technical Indicator is a combination of Balance Lines (Moving Averages) that use fractal geometry and nonlinear dynamics.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.bwAO">
            <summary>
            Awesome Oscillator Technical Indicator (AO) is a 34-period simple moving average, plotted through the middle points of the bars (H+L)/2, which is subtracted from the 5-period simple moving average, built across the central points of the bars (H+L)/2. It shows us quite clearly what’s happening to the market driving force at the present moment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.bwAO(NinjaTrader.Data.IDataSeries)">
            <summary>
            Awesome Oscillator Technical Indicator (AO) is a 34-period simple moving average, plotted through the middle points of the bars (H+L)/2, which is subtracted from the 5-period simple moving average, built across the central points of the bars (H+L)/2. It shows us quite clearly what’s happening to the market driving force at the present moment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.bwFractals">
            <summary>
            Fractal Technical Indicator it is a series of at least five successive bars, with the highest HIGH in the middle, and two lower HIGHs on both sides. The reversing set is a series of at least five successive bars, with the lowest LOW in the middle, and two higher LOWs on both sides, which correlates to the sell fractal. The fractals are have High and Low values and are indicated with the up and down arrows.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.bwFractals(NinjaTrader.Data.IDataSeries)">
            <summary>
            Fractal Technical Indicator it is a series of at least five successive bars, with the highest HIGH in the middle, and two lower HIGHs on both sides. The reversing set is a series of at least five successive bars, with the lowest LOW in the middle, and two higher LOWs on both sides, which correlates to the sell fractal. The fractals are have High and Low values and are indicated with the up and down arrows.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.dsFibConfluence(System.Int32)">
            <summary>
            Enter the description of your new custom indicator here
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.dsFibConfluence(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Enter the description of your new custom indicator here
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DStochZeroLag(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DStochZeroLag(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DynamicSRLines(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws nearest level of S/R lines above and below current market based on historical price swing High/Low pivots
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.DynamicSRLines(NinjaTrader.Data.IDataSeries,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws nearest level of S/R lines above and below current market based on historical price swing High/Low pivots
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TSEcoNews(TSEcoUtility.DockingPlace)">
            <summary>
             TS Economic News Add On
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TSEcoNews(NinjaTrader.Data.IDataSeries,TSEcoUtility.DockingPlace)">
            <summary>
             TS Economic News Add On
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.FractalLevel(System.Int32)">
            <summary>
            Draws the fractal pivot lines based on 7 fractal bar patterns
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.FractalLevel(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Draws the fractal pivot lines based on 7 fractal bar patterns
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.GrabLong(System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.GrabLong(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.GrabRange(System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.GrabRange(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.GrabShort(System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.GrabShort(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.IchimokuCloud(System.Int32,System.Int32,System.Int32)">
            <summary>
            IchiCloud Kinko Hyo - please see http: http://www.forexabode.com/technical-analysis/ichimoku-cloud
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.IchimokuCloud(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            IchiCloud Kinko Hyo - please see http://www.forexabode.com/technical-analysis/ichimoku-cloud
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.LabelRayLineAlerts(System.String,System.Boolean,System.Single,NinjaTrader.Gui.Chart.LabelAreaType,NinjaTrader.Gui.Chart.LabelSideType)">
            <summary>
            Label Ray Lines Alerts
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.LabelRayLineAlerts(NinjaTrader.Data.IDataSeries,System.String,System.Boolean,System.Single,NinjaTrader.Gui.Chart.LabelAreaType,NinjaTrader.Gui.Chart.LabelSideType)">
            <summary>
            Label Ray Lines Alerts
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.LineAlert(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.String)">
            <summary>
            This indicator will alert crossovers for manually drawn lines. Alerts are reset with each new bar or when ManualReset input set to true. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.LineAlert(NinjaTrader.Data.IDataSeries,System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.String)">
            <summary>
            This indicator will alert crossovers for manually drawn lines. Alerts are reset with each new bar or when ManualReset input set to true. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.MACDGapless(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            The MACD (Moving Average Convergence/Divergence) is a trend following momentum indicator that shows the relationship between two moving averages of prices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.MACDGapless(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            The MACD (Moving Average Convergence/Divergence) is a trend following momentum indicator that shows the relationship between two moving averages of prices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.mahTrendGRaBerV1(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This is an adaptation of the GRAB (GRB) setup used by Raghee Horner of InterbankFX for trading currency pairs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.mahTrendGRaBerV1(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This is an adaptation of the GRAB (GRB) setup used by Raghee Horner of InterbankFX for trading currency pairs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.HeikenAshi_Smoothed">
            <summary>
            HeikenAshi_Smoothed technique discussed in the article 'Using Heiken-Ashi Technique' in February 2004 issue of TASC magazine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.HeikenAshi_Smoothed(NinjaTrader.Data.IDataSeries)">
            <summary>
            HeikenAshi_Smoothed technique discussed in the article 'Using Heiken-Ashi Technique' in February 2004 issue of TASC magazine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RBI(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Generates a Generalized Renko Bars 'LineOnClose' Plot on a 1 TICK chart. You should only apply RBI to 1 TICK Charts! But you may get 'interesting'  results if you like to experiment with other charts! Sorry, but it will not improve your batting average!
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RBI(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Generates a Generalized Renko Bars 'LineOnClose' Plot on a 1 TICK chart. You should only apply RBI to 1 TICK Charts! But you may get 'interesting'  results if you like to experiment with other charts! Sorry, but it will not improve your batting average!
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RGaussianFilter(System.Int32,System.Int32)">
            <summary>
            Gaussian Filter Ported to NT
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RGaussianFilter(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            Gaussian Filter Ported to NT
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RSqueeze(RSqueeze.Utility.SqueezeStyle)">
            <summary>
            Squeeze collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RSqueeze(NinjaTrader.Data.IDataSeries,RSqueeze.Utility.SqueezeStyle)">
            <summary>
            Squeeze collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RValueCharts(System.Boolean,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Single,System.Int32,System.Boolean,System.Boolean,System.Drawing.Color,RValueCharts.Utility.ValueChartStyle)">
            <summary>
            Value Charts by David Stendhal; Converted to NinjaTrader by TradingStudies.com
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.RValueCharts(NinjaTrader.Data.IDataSeries,System.Boolean,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Single,System.Int32,System.Boolean,System.Boolean,System.Drawing.Color,RValueCharts.Utility.ValueChartStyle)">
            <summary>
            Value Charts by David Stendhal; Converted to NinjaTrader by TradingStudies.com
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.SlingShot(System.Drawing.Color,System.Drawing.Color,System.Int32,NinjaTrader.Data.PriceType,SlingShot.Utility.MovingAverageType,System.Int32,System.Int32,NinjaTrader.Data.PriceType,SlingShot.Utility.MovingAverageType)">
            <summary>
            SlingShot Indicator - Paints Region between two moving averages of your choice. Created by TradingStudies.com
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.SlingShot(NinjaTrader.Data.IDataSeries,System.Drawing.Color,System.Drawing.Color,System.Int32,NinjaTrader.Data.PriceType,SlingShot.Utility.MovingAverageType,System.Int32,System.Int32,NinjaTrader.Data.PriceType,SlingShot.Utility.MovingAverageType)">
            <summary>
            SlingShot Indicator - Paints Region between two moving averages of your choice. Created by TradingStudies.com
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.SMMA(System.Int32)">
            <summary>
            The SMMA (Smoothed Moving Average) is an indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.SMMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The SMMA (Smoothed Moving Average) is an indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.SuperTrend(System.Int32,System.Double,System.Boolean)">
            <summary>
            SuperTrend Indicator developed by Roonius
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.SuperTrend(NinjaTrader.Data.IDataSeries,System.Int32,System.Double,System.Boolean)">
            <summary>
            SuperTrend Indicator developed by Roonius
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TrendLineAlert">
            <summary>
            Alert when price hits a trend line. Bid when price is below a trend line, and Ask when price is above a trend line. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TrendLineAlert(NinjaTrader.Data.IDataSeries)">
            <summary>
            Alert when price hits a trend line. Bid when price is below a trend line, and Ask when price is above a trend line. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TrendSpotter(System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Finds the the current, prevailing linear trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TrendSpotter(NinjaTrader.Data.IDataSeries,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Finds the the current, prevailing linear trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TSIntradayPivots(System.Int32)">
            <summary>
            Rolling Intraday Pivots (created by TradingStudies.com)
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TSIntradayPivots(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Rolling Intraday Pivots (created by TradingStudies.com)
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TTMWaveAOC(System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TTMWaveAOC(NinjaTrader.Data.IDataSeries,System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TTMWaveBOC(System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TTMWaveBOC(NinjaTrader.Data.IDataSeries,System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TTMWaveCOC(System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.TTMWaveCOC(NinjaTrader.Data.IDataSeries,System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.JurikDMX(System.Int32)">
            <summary>
            Jurik DMX (Directional Movement Index) is a smoother version of the technical indicator DMI, while retaining very fast response speed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.JurikDMX(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Jurik DMX (Directional Movement Index) is a smoother version of the technical indicator DMI, while retaining very fast response speed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.JurikJMA(System.Double,System.Double)">
            <summary>
            Jurik JMA Adaptive Moving Average is a Moving Average Indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.JurikJMA(NinjaTrader.Data.IDataSeries,System.Double,System.Double)">
            <summary>
            Jurik JMA Adaptive Moving Average is a Moving Average Indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.JurikRSX(System.Double)">
            <summary>
            Jurik RSX (Relative Trend Strength Index) is a smoother version of the technical RSI indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.JurikRSX(NinjaTrader.Data.IDataSeries,System.Double)">
            <summary>
            Jurik RSX (Relative Trend Strength Index) is a smoother version of the technical RSI indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.JurikVEL(System.Int32)">
            <summary>
            Jurik VEL (Zero-Lag Velocity) is a smoother version of the technical indicator 'momentum' with the special feature that the smoothing process has added no additional lag to the original momentum indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.JurikVEL(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Jurik VEL (Zero-Lag Velocity) is a smoother version of the technical indicator 'momentum' with the special feature that the smoothing process has added no additional lag to the original momentum indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.WoodiesCCI(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Woodies variation of the CCI.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.WoodiesCCI(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Woodies variation of the CCI.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.WoodiesPivots(NinjaTrader.Data.HLCCalculationMode,System.Int32)">
            <summary>
            Woodies Pivot Points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Column.WoodiesPivots(NinjaTrader.Data.IDataSeries,NinjaTrader.Data.HLCCalculationMode,System.Int32)">
            <summary>
            Woodies Pivot Points.
            </summary>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.MarketAnalyzer.Column.CalculateOnBarClose">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.MarketAnalyzer.Column.LeadIndicator">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.MarketAnalyzer.Column.MaximumBarsLookBack">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.Strategy">
            <summary>
            </summary>
            <summary>
            This file holds all user defined strategy methods.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ADL">
            <summary>
            The Accumulation/Distribution (AD) study attempts to quantify the amount of volume flowing into or out of an instrument by identifying the position of the close of the period in relation to that period�s high/low range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ADL(NinjaTrader.Data.IDataSeries)">
            <summary>
            The Accumulation/Distribution (AD) study attempts to quantify the amount of volume flowing into or out of an instrument by identifying the position of the close of the period in relation to that period�s high/low range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ADX(System.Int32)">
            <summary>
            The Average Directional Index measures the strength of a prevailing trend as well as whether movement exists in the market. The ADX is measured on a scale of 0  100. A low ADX value (generally less than 20) can indicate a non-trending market with low volumes whereas a cross above 20 may indicate the start of a trend (either up or down). If the ADX is over 40 and begins to fall, it can indicate the slowdown of a current trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ADX(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Average Directional Index measures the strength of a prevailing trend as well as whether movement exists in the market. The ADX is measured on a scale of 0  100. A low ADX value (generally less than 20) can indicate a non-trending market with low volumes whereas a cross above 20 may indicate the start of a trend (either up or down). If the ADX is over 40 and begins to fall, it can indicate the slowdown of a current trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ADXR(System.Int32,System.Int32)">
            <summary>
            Average Directional Movement Rating quantifies momentum change in the ADX. It is calculated by adding two values of ADX (the current value and a value n periods back), then dividing by two. This additional smoothing makes the ADXR slightly less responsive than ADX. The interpretation is the same as the ADX; the higher the value, the stronger the trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ADXR(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            Average Directional Movement Rating quantifies momentum change in the ADX. It is calculated by adding two values of ADX (the current value and a value n periods back), then dividing by two. This additional smoothing makes the ADXR slightly less responsive than ADX. The interpretation is the same as the ADX; the higher the value, the stronger the trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.APZ(System.Double,System.Int32)">
            <summary>
            The APZ (Adaptive Prize Zone) forms a steady channel based on double smoothed exponential moving averages around the average price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.APZ(NinjaTrader.Data.IDataSeries,System.Double,System.Int32)">
            <summary>
            The APZ (Adaptive Prize Zone) forms a steady channel based on double smoothed exponential moving averages around the average price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Aroon(System.Int32)">
            <summary>
            The Aroon Indicator was developed by Tushar Chande. Its comprised of two plots one measuring the number of periods since the most recent x-period high (Aroon Up) and the other measuring the number of periods since the most recent x-period low (Aroon Down).
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Aroon(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Aroon Indicator was developed by Tushar Chande. Its comprised of two plots one measuring the number of periods since the most recent x-period high (Aroon Up) and the other measuring the number of periods since the most recent x-period low (Aroon Down).
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.AroonOscillator(System.Int32)">
            <summary>
            The Aroon Oscillator is based upon his Aroon Indicator. Much like the Aroon Indicator, the Aroon Oscillator measures the strength of a trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.AroonOscillator(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Aroon Oscillator is based upon his Aroon Indicator. Much like the Aroon Indicator, the Aroon Oscillator measures the strength of a trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ATR(System.Int32)">
            <summary>
            The Average True Range (ATR) is a measure of volatility. It was introduced by Welles Wilder in his book 'New Concepts in Technical Trading Systems' and has since been used as a component of many indicators and trading systems.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ATR(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Average True Range (ATR) is a measure of volatility. It was introduced by Welles Wilder in his book 'New Concepts in Technical Trading Systems' and has since been used as a component of many indicators and trading systems.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.BarTimer">
            <summary>
            Displays remaining time of minute based bar
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.BarTimer(NinjaTrader.Data.IDataSeries)">
            <summary>
            Displays remaining time of minute based bar
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Bollinger(System.Double,System.Int32)">
            <summary>
            Bollinger Bands are plotted at standard deviation levels above and below a moving average. Since standard deviation is a measure of volatility, the bands are self-adjusting: widening during volatile markets and contracting during calmer periods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Bollinger(NinjaTrader.Data.IDataSeries,System.Double,System.Int32)">
            <summary>
            Bollinger Bands are plotted at standard deviation levels above and below a moving average. Since standard deviation is a measure of volatility, the bands are self-adjusting: widening during volatile markets and contracting during calmer periods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.BOP(System.Int32)">
            <summary>
            The balance of power indicator measures the strength of the bulls vs. bears by assessing the ability of each to push price to an extreme level.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.BOP(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The balance of power indicator measures the strength of the bulls vs. bears by assessing the ability of each to push price to an extreme level.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.BuySellPressure">
            <summary>
            Indicates the current buying or selling pressure as a perecentage. This is a tick by tick indicator. If 'Calculate on bar close' is true, the indicator values will always be 100.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.BuySellPressure(NinjaTrader.Data.IDataSeries)">
            <summary>
            Indicates the current buying or selling pressure as a perecentage. This is a tick by tick indicator. If 'Calculate on bar close' is true, the indicator values will always be 100.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.BuySellVolume">
            <summary>
            This indicator is a real-time indicator and does not plot against historical data. Plots a histogram splitting volume between trades at the ask or higher and trades at the bid and lower.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.BuySellVolume(NinjaTrader.Data.IDataSeries)">
            <summary>
            This indicator is a real-time indicator and does not plot against historical data. Plots a histogram splitting volume between trades at the ask or higher and trades at the bid and lower.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.CandleStickPattern(ChartPattern,System.Int32)">
            <summary>
            Detects common candlestick patterns and marks them on the chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.CandleStickPattern(NinjaTrader.Data.IDataSeries,ChartPattern,System.Int32)">
            <summary>
            Detects common candlestick patterns and marks them on the chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.CCI(System.Int32)">
            <summary>
            The Commodity Channel Index (CCI) measures the variation of a security's price from its statistical mean. High values show that prices are unusually high compared to average prices whereas low values indicate that prices are unusually low.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.CCI(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Commodity Channel Index (CCI) measures the variation of a security's price from its statistical mean. High values show that prices are unusually high compared to average prices whereas low values indicate that prices are unusually low.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ChaikinMoneyFlow(System.Int32)">
            <summary>
            Chaikin Money Flow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ChaikinMoneyFlow(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Chaikin Money Flow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ChaikinOscillator(System.Int32,System.Int32)">
            <summary>
            Chaikin Oscillator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ChaikinOscillator(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            Chaikin Oscillator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ChaikinVolatility(System.Int32)">
            <summary>
            Chaikin Volatility
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ChaikinVolatility(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Chaikin Volatility
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.CMO(System.Int32)">
            <summary>
            The CMO differs from other momentum oscillators such as Relative Strength Index (RSI) and Stochastics. It uses both up and down days data in the numerator of the calculation to measure momentum directly. Primarily used to look for extreme overbought and oversold conditions, CMO can also be used to look for trends.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.CMO(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The CMO differs from other momentum oscillators such as Relative Strength Index (RSI) and Stochastics. It uses both up and down days data in the numerator of the calculation to measure momentum directly. Primarily used to look for extreme overbought and oversold conditions, CMO can also be used to look for trends.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ConstantLines(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Plots lines at user defined values. Lines with values of zero will not plot.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ConstantLines(NinjaTrader.Data.IDataSeries,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Plots lines at user defined values. Lines with values of zero will not plot.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.CurrentDayOHL">
            <summary>
            Plots the open, high, and low values from the session starting on the current day.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.CurrentDayOHL(NinjaTrader.Data.IDataSeries)">
            <summary>
            Plots the open, high, and low values from the session starting on the current day.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.CustomPlotSample">
            <summary>
            This is a sample for an indicator using custom plotting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.CustomPlotSample(NinjaTrader.Data.IDataSeries)">
            <summary>
            This is a sample for an indicator using custom plotting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Darvas">
            <summary>
            The Darvas Boxes were taken from the pages of Nicolas Darvas book, How I Made $2,000,000 in the Stock Market. The boxes are used to normalize a trend. A 'buy' signal would be indicated when the price of the stock exceeds the top of the box. A 'sell' signal would be indicated when the price of the stock falls below the bottom of the box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Darvas(NinjaTrader.Data.IDataSeries)">
            <summary>
            The Darvas Boxes were taken from the pages of Nicolas Darvas book, How I Made $2,000,000 in the Stock Market. The boxes are used to normalize a trend. A 'buy' signal would be indicated when the price of the stock exceeds the top of the box. A 'sell' signal would be indicated when the price of the stock falls below the bottom of the box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DEMA(System.Int32)">
            <summary>
            Double Exponential Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DEMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Double Exponential Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DM(System.Int32)">
            <summary>
            This is the same indicator as the ADX, with the addition of the two directional movement indicators +DI and -DI. +DI and -DI measure upward and downward momentum. A buy signal is generated when +DI crosses -DI to the upside. A sell signal is generated when -DI crosses +DI to the downside.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DM(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            This is the same indicator as the ADX, with the addition of the two directional movement indicators +DI and -DI. +DI and -DI measure upward and downward momentum. A buy signal is generated when +DI crosses -DI to the upside. A sell signal is generated when -DI crosses +DI to the downside.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DMI(System.Int32)">
            <summary>
            The Directional Movement Index is quite similiar to Welles Wilder's Relative Strength Index. The difference is the DMI uses variable time periods (from 3 to 30) vs. the RSI's fixed periods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DMI(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Directional Movement Index is quite similiar to Welles Wilder's Relative Strength Index. The difference is the DMI uses variable time periods (from 3 to 30) vs. the RSI's fixed periods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DMIndex(System.Int32)">
            <summary>
            The Dynamic Momentum Index (DMI) as developed by Tushar Chande and Stanley Kroll and outlined in detail in their book The New Technical Trader.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DMIndex(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Dynamic Momentum Index (DMI) as developed by Tushar Chande and Stanley Kroll and outlined in detail in their book The New Technical Trader.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DonchianChannel(System.Int32)">
            <summary>
            The Donchian Channel indicator was created by Richard Donchian. It uses the highest high and the lowest low of a period of time to plot the channel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DonchianChannel(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Donchian Channel indicator was created by Richard Donchian. It uses the highest high and the lowest low of a period of time to plot the channel.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DoubleStochastics(System.Int32)">
            <summary>
            Double stochastics
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DoubleStochastics(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Double stochastics
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.EaseOfMovement(System.Int32,System.Int32)">
            <summary>
            The Ease of Movement (EMV) indicator emphasizes days in which the stock is moving easily and minimizes the days in which the stock is finding it difficult to move. A buy signal is generated when the EMV crosses above zero, a sell signal when it crosses below zero. When the EMV hovers around zero, then there are small price movements and/or high volume, which is to say, the price is not moving easily.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.EaseOfMovement(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The Ease of Movement (EMV) indicator emphasizes days in which the stock is moving easily and minimizes the days in which the stock is finding it difficult to move. A buy signal is generated when the EMV crosses above zero, a sell signal when it crosses below zero. When the EMV hovers around zero, then there are small price movements and/or high volume, which is to say, the price is not moving easily.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.EMA(System.Int32)">
            <summary>
            The Exponential Moving Average is an indicator that shows the average value of a security's price over a period of time. When calculating a moving average. The EMA applies more weight to recent prices than the SMA.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.EMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Exponential Moving Average is an indicator that shows the average value of a security's price over a period of time. When calculating a moving average. The EMA applies more weight to recent prices than the SMA.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.FisherTransform(System.Int32)">
            <summary>
            The Fisher Transform has sharp and distinct turning points that occur in a timely fashion. The resulting peak swings are used to identify price reversals.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.FisherTransform(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Fisher Transform has sharp and distinct turning points that occur in a timely fashion. The resulting peak swings are used to identify price reversals.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.FOSC(System.Int32)">
            <summary>
            The Forecast Oscillator (FOSC) is an extension of the linear regression based indicators made popular by Tushar Chande. The Forecast Oscillator plots the percentage difference between the forecast price (generated by an x-period linear regression line) and the actual price. The oscillator is above zero when the forecast price is greater than the actual price.  Conversely, it's less than zero if its below. In the rare case when the forecast price and the actual price are the same, the oscillator would plot zero. Actual prices that are persistently below the forecast price suggest lower prices ahead.  Likewise, actual prices that are persistently above the forecast price suggest higher prices ahead. Short-term traders should use shorter time periods and perhaps more relaxed standards for the required length of time above or below the forecast price. Long-term traders should use longer time periods and perhaps stricter standards for the required length of time above or below the forecast price. Chande also suggests plotting a three-day moving average trigger line of the Forecast Oscillator to generate early warnings of changes in trend. When the oscillator crosses below the trigger line, lower prices are suggested. When the oscillator crosses above the trigger line, higher prices are suggested.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.FOSC(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Forecast Oscillator (FOSC) is an extension of the linear regression based indicators made popular by Tushar Chande. The Forecast Oscillator plots the percentage difference between the forecast price (generated by an x-period linear regression line) and the actual price. The oscillator is above zero when the forecast price is greater than the actual price.  Conversely, it's less than zero if its below. In the rare case when the forecast price and the actual price are the same, the oscillator would plot zero. Actual prices that are persistently below the forecast price suggest lower prices ahead.  Likewise, actual prices that are persistently above the forecast price suggest higher prices ahead. Short-term traders should use shorter time periods and perhaps more relaxed standards for the required length of time above or below the forecast price. Long-term traders should use longer time periods and perhaps stricter standards for the required length of time above or below the forecast price. Chande also suggests plotting a three-day moving average trigger line of the Forecast Oscillator to generate early warnings of changes in trend. When the oscillator crosses below the trigger line, lower prices are suggested. When the oscillator crosses above the trigger line, higher prices are suggested.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.HeikenAshi">
            <summary>
            HeikenAshi technique discussed in the article 'Using Heiken-Ashi Technique' in February 2004 issue of TASC magazine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.HeikenAshi(NinjaTrader.Data.IDataSeries)">
            <summary>
            HeikenAshi technique discussed in the article 'Using Heiken-Ashi Technique' in February 2004 issue of TASC magazine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.HMA(System.Int32)">
            <summary>
            The Hull Moving Average (HMA) employs weighted MA calculations to offer superior smoothing, and much less lag, over traditional SMA indicators.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.HMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Hull Moving Average (HMA) employs weighted MA calculations to offer superior smoothing, and much less lag, over traditional SMA indicators.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.KAMA(System.Int32,System.Int32,System.Int32)">
            <summary>
            Developed by Perry Kaufman, this indicator is an EMA using an Efficiency Ratio to modify the smoothing constant, which ranges from a minimum of Fast Length to a maximum of Slow Length. Since this moving average is adaptive it tends to follow prices more closely than other MA's.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.KAMA(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            Developed by Perry Kaufman, this indicator is an EMA using an Efficiency Ratio to modify the smoothing constant, which ranges from a minimum of Fast Length to a maximum of Slow Length. Since this moving average is adaptive it tends to follow prices more closely than other MA's.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.KeltnerChannel(System.Double,System.Int32)">
            <summary>
            The Keltner Channel is a similar indicator to Bollinger Bands. Here the midline is a standard moving average with the upper and lower bands offset by the SMA of the difference between the high and low of the previous bars. The offset multiplier as well as the SMA period is configurable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.KeltnerChannel(NinjaTrader.Data.IDataSeries,System.Double,System.Int32)">
            <summary>
            The Keltner Channel is a similar indicator to Bollinger Bands. Here the midline is a standard moving average with the upper and lower bands offset by the SMA of the difference between the high and low of the previous bars. The offset multiplier as well as the SMA period is configurable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.KeyReversalDown(System.Int32)">
            <summary>
            Returns a value of 1 when the current close is less than the prior close after penetrating the highest high of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.KeyReversalDown(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Returns a value of 1 when the current close is less than the prior close after penetrating the highest high of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.KeyReversalUp(System.Int32)">
            <summary>
            Returns a value of 1 when the current close is greater than the prior close after penetrating the lowest low of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.KeyReversalUp(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Returns a value of 1 when the current close is greater than the prior close after penetrating the lowest low of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.LinReg(System.Int32)">
            <summary>
            The Linear Regression is an indicator that 'predicts' the value of a security's price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.LinReg(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Linear Regression is an indicator that 'predicts' the value of a security's price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.LinRegIntercept(System.Int32)">
            <summary>
            Linnear Regression Intercept
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.LinRegIntercept(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Linnear Regression Intercept
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.LinRegSlope(System.Int32)">
            <summary>
            Linear Regression Slope
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.LinRegSlope(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Linear Regression Slope
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.MACD(System.Int32,System.Int32,System.Int32)">
            <summary>
            The MACD (Moving Average Convergence/Divergence) is a trend following momentum indicator that shows the relationship between two moving averages of prices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.MACD(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            The MACD (Moving Average Convergence/Divergence) is a trend following momentum indicator that shows the relationship between two moving averages of prices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.MAEnvelopes(System.Double,System.Int32,System.Int32)">
            <summary>
            Plots % envelopes around a moving average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.MAEnvelopes(NinjaTrader.Data.IDataSeries,System.Double,System.Int32,System.Int32)">
            <summary>
            Plots % envelopes around a moving average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.MAMA(System.Double,System.Double)">
            <summary>
            The MAMA (MESA Adaptive Moving Average) was developed by John Ehlers. It adapts to price movement in a new and unique way. The adaptation is based on the Hilbert Transform Discriminator. The adavantage of this method features fast attack average and a slow decay average. The MAMA + the FAMA (Following Adaptive Moving Average) lines only cross at major market reversals.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.MAMA(NinjaTrader.Data.IDataSeries,System.Double,System.Double)">
            <summary>
            The MAMA (MESA Adaptive Moving Average) was developed by John Ehlers. It adapts to price movement in a new and unique way. The adaptation is based on the Hilbert Transform Discriminator. The adavantage of this method features fast attack average and a slow decay average. The MAMA + the FAMA (Following Adaptive Moving Average) lines only cross at major market reversals.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.MAX(System.Int32)">
            <summary>
            The Maximum shows the maximum of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.MAX(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Maximum shows the maximum of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.MFI(System.Int32)">
            <summary>
            The MFI (Money Flow Index) is a momentum indicator that measures the strength of money flowing in and out of a security.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.MFI(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The MFI (Money Flow Index) is a momentum indicator that measures the strength of money flowing in and out of a security.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.MIN(System.Int32)">
            <summary>
            The Minimum shows the minimum of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.MIN(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Minimum shows the minimum of the last n bars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Momentum(System.Int32)">
            <summary>
            The Momentum indicator measures the amount that a security's price has changed over a given time span.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Momentum(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Momentum indicator measures the amount that a security's price has changed over a given time span.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.NBarsDown(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This indicator returns 1 when we have n of consecutive bars down, otherwise returns 0. A down bar is defined as a bar where the close is below the open and the bars makes a lower high and a lower low. You can adjust the specific requirements with the indicator options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.NBarsDown(NinjaTrader.Data.IDataSeries,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This indicator returns 1 when we have n of consecutive bars down, otherwise returns 0. A down bar is defined as a bar where the close is below the open and the bars makes a lower high and a lower low. You can adjust the specific requirements with the indicator options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.NBarsUp(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This indicator returns 1 when we have n of consecutive bars up, otherwise returns 0. An up bar is defined as a bar where the close is above the open and the bars makes a higher high and a higher low. You can adjust the specific requirements with the indicator options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.NBarsUp(NinjaTrader.Data.IDataSeries,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This indicator returns 1 when we have n of consecutive bars up, otherwise returns 0. An up bar is defined as a bar where the close is above the open and the bars makes a higher high and a higher low. You can adjust the specific requirements with the indicator options.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.OBV">
            <summary>
            OBV (On Balance Volume) is a running total of volume. It shows if volume is flowing into or out of a security. When the security closes higher than the previous close, all of the day's volume is considered up-volume. When the security closes lower than the previous close, all of the day's volume is considered down-volume.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.OBV(NinjaTrader.Data.IDataSeries)">
            <summary>
            OBV (On Balance Volume) is a running total of volume. It shows if volume is flowing into or out of a security. When the security closes higher than the previous close, all of the day's volume is considered up-volume. When the security closes lower than the previous close, all of the day's volume is considered down-volume.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ParabolicSAR(System.Double,System.Double,System.Double)">
            <summary>
            Parabolic SAR
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ParabolicSAR(NinjaTrader.Data.IDataSeries,System.Double,System.Double,System.Double)">
            <summary>
            Parabolic SAR
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.PFE(System.Int32,System.Int32)">
            <summary>
            The PFE (Polarized Fractal Efficiency) is an indicator that uses fractal geometry to determine how efficiently the price is moving.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.PFE(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The PFE (Polarized Fractal Efficiency) is an indicator that uses fractal geometry to determine how efficiently the price is moving.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Pivots(NinjaTrader.Data.PivotRange,NinjaTrader.Data.HLCCalculationMode,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Pivot Points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Pivots(NinjaTrader.Data.IDataSeries,NinjaTrader.Data.PivotRange,NinjaTrader.Data.HLCCalculationMode,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Pivot Points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.PPO(System.Int32,System.Int32,System.Int32)">
            <summary>
            The PPO (Percentage Price Oscillator) is based on two moving averages expressed as a percentage. The PPO is found by subtracting the longer MA from the shorter MA and then dividing the difference by the longer MA.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.PPO(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            The PPO (Percentage Price Oscillator) is based on two moving averages expressed as a percentage. The PPO is found by subtracting the longer MA from the shorter MA and then dividing the difference by the longer MA.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.PriceAlert_New(System.Double,System.Boolean)">
            <summary>
            Sends an alert to the alert window when a price level has been reached.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.PriceAlert_New(NinjaTrader.Data.IDataSeries,System.Double,System.Boolean)">
            <summary>
            Sends an alert to the alert window when a price level has been reached.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.PriceOscillator(System.Int32,System.Int32,System.Int32)">
            <summary>
            The Price Oscillator indicator shows the variation among two moving averages for the price of a security.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.PriceOscillator(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            The Price Oscillator indicator shows the variation among two moving averages for the price of a security.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.PriorDayOHLC">
            <summary>
            Plots the open, high, low and close values from the session starting on the prior day.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.PriorDayOHLC(NinjaTrader.Data.IDataSeries)">
            <summary>
            Plots the open, high, low and close values from the session starting on the prior day.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Range">
            <summary>
            Calculates the range of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Range(NinjaTrader.Data.IDataSeries)">
            <summary>
            Calculates the range of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RangeCounter(System.Boolean)">
            <summary>
            Displays the range countdown of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RangeCounter(NinjaTrader.Data.IDataSeries,System.Boolean)">
            <summary>
            Displays the range countdown of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RegressionChannel(System.Int32,System.Double)">
            <summary>
            Linear regression is used to calculate a best fit line for the price data. In addition an upper and lower band is added by calculating the standard deviation of prices from the regression line.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RegressionChannel(NinjaTrader.Data.IDataSeries,System.Int32,System.Double)">
            <summary>
            Linear regression is used to calculate a best fit line for the price data. In addition an upper and lower band is added by calculating the standard deviation of prices from the regression line.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RIND(System.Int32,System.Int32)">
            <summary>
            RIND (Range Indicator) compares the intraday range (high - low) to the inter-day (close - previous close) range. When the intraday range is greater than the inter-day range, the Range Indicator will be a high value. This signals an end to the current trend. When the Range Indicator is at a low level, a new trend is about to start.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RIND(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            RIND (Range Indicator) compares the intraday range (high - low) to the inter-day (close - previous close) range. When the intraday range is greater than the inter-day range, the Range Indicator will be a high value. This signals an end to the current trend. When the Range Indicator is at a low level, a new trend is about to start.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ROC(System.Int32)">
            <summary>
            The ROC (Rate-of-Change) indicator displays the difference between the current price and the price x-time periods ago.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ROC(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The ROC (Rate-of-Change) indicator displays the difference between the current price and the price x-time periods ago.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RSI(System.Int32,System.Int32)">
            <summary>
            The RSI (Relative Strength Index) is a price-following oscillator that ranges between 0 and 100.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RSI(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The RSI (Relative Strength Index) is a price-following oscillator that ranges between 0 and 100.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RSquared(System.Int32)">
            <summary>
            R-squared indicator
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RSquared(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            R-squared indicator
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RSS(System.Int32,System.Int32,System.Int32)">
            <summary>
            Relative Spread Strength of the spread between two moving averages. TASC, October 2006, p. 16.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RSS(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            Relative Spread Strength of the spread between two moving averages. TASC, October 2006, p. 16.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RVI(System.Int32)">
            <summary>
            The RVI (Relative Volatility Index) was developed by Donald Dorsey as a compliment to and a confirmation of momentum based indicators. When used to confirm other signals, only buy when the RVI is over 50 and only sell when the RVI is under 50.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RVI(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The RVI (Relative Volatility Index) was developed by Donald Dorsey as a compliment to and a confirmation of momentum based indicators. When used to confirm other signals, only buy when the RVI is over 50 and only sell when the RVI is under 50.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.SMA(System.Int32)">
            <summary>
            The SMA (Simple Moving Average) is an indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.SMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The SMA (Simple Moving Average) is an indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.StdDev(System.Int32)">
            <summary>
            Standard Deviation is a statistical measure of volatility. Standard Deviation is typically used as a component of other indicators, rather than as a stand-alone indicator. For example, Bollinger Bands are calculated by adding a security's Standard Deviation to a moving average.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.StdDev(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Standard Deviation is a statistical measure of volatility. Standard Deviation is typically used as a component of other indicators, rather than as a stand-alone indicator. For example, Bollinger Bands are calculated by adding a security's Standard Deviation to a moving average.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.StdError(System.Int32)">
            <summary>
            Standard Error shows how near prices go around a linear regression line.  The closer the prices are to the linear regression line, the stronger is the trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.StdError(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Standard Error shows how near prices go around a linear regression line.  The closer the prices are to the linear regression line, the stronger is the trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Stochastics(System.Int32,System.Int32,System.Int32)">
            <summary>
            The Stochastic Oscillator is made up of two lines that oscillate between a vertical scale of 0 to 100. The %K is the main line and it is drawn as a solid line. The second is the %D line and is a moving average of %K. The %D line is drawn as a dotted line. Use as a buy/sell signal generator, buying when fast moves above slow and selling when fast moves below slow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Stochastics(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            The Stochastic Oscillator is made up of two lines that oscillate between a vertical scale of 0 to 100. The %K is the main line and it is drawn as a solid line. The second is the %D line and is a moving average of %K. The %D line is drawn as a dotted line. Use as a buy/sell signal generator, buying when fast moves above slow and selling when fast moves below slow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.StochasticsFast(System.Int32,System.Int32)">
            <summary>
            The Stochastic Oscillator is made up of two lines that oscillate between a vertical scale of 0 to 100. The %K is the main line and it is drawn as a solid line. The second is the %D line and is a moving average of %K. The %D line is drawn as a dotted line. Use as a buy/sell signal generator, buying when fast moves above slow and selling when fast moves below slow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.StochasticsFast(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The Stochastic Oscillator is made up of two lines that oscillate between a vertical scale of 0 to 100. The %K is the main line and it is drawn as a solid line. The second is the %D line and is a moving average of %K. The %D line is drawn as a dotted line. Use as a buy/sell signal generator, buying when fast moves above slow and selling when fast moves below slow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.StochRSI(System.Int32)">
            <summary>
            The StochRSI is an oscillator similar in computation to the stochastic measure, except instead of price values as input, the StochRSI uses RSI values. The StochRSI computes the current position of the RSI relative to the high and low RSI values over a specified number of days. The intent of this measure, designed by Tushard Chande and Stanley Kroll, is to provide further information about the overbought/oversold nature of the RSI. The StochRSI ranges between 0.0 and 1.0. Values above 0.8 are generally seen to identify overbought levels and values below 0.2 are considered to indicate oversold conditions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.StochRSI(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The StochRSI is an oscillator similar in computation to the stochastic measure, except instead of price values as input, the StochRSI uses RSI values. The StochRSI computes the current position of the RSI relative to the high and low RSI values over a specified number of days. The intent of this measure, designed by Tushard Chande and Stanley Kroll, is to provide further information about the overbought/oversold nature of the RSI. The StochRSI ranges between 0.0 and 1.0. Values above 0.8 are generally seen to identify overbought levels and values below 0.2 are considered to indicate oversold conditions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.SUM(System.Int32)">
            <summary>
            The Sum shows the summation of the last n data points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.SUM(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Sum shows the summation of the last n data points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Swing(System.Int32)">
            <summary>
            The Swing indicator plots lines that represents the swing high and low points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Swing(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Swing indicator plots lines that represents the swing high and low points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.T3(System.Int32,System.Int32,System.Double)">
            <summary>
            T3 Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.T3(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Double)">
            <summary>
            T3 Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TEMA(System.Int32)">
            <summary>
            Triple Exponential Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TEMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Triple Exponential Moving Average
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TickCounter(System.Boolean,System.Boolean)">
            <summary>
            Displays the tick count of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TickCounter(NinjaTrader.Data.IDataSeries,System.Boolean,System.Boolean)">
            <summary>
            Displays the tick count of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TMA(System.Int32)">
            <summary>
            The TMA (Triangular Moving Average) is a weighted moving average. Compared to the WMA which puts more weight on the latest price bar, the TMA puts more weight on the data in the middle of the specified period.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The TMA (Triangular Moving Average) is a weighted moving average. Compared to the WMA which puts more weight on the latest price bar, the TMA puts more weight on the data in the middle of the specified period.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TRIX(System.Int32,System.Int32)">
            <summary>
            The TRIX (Triple Exponential Average) displays the percentage Rate of Change (ROC) of a triple EMA. Trix oscillates above and below the zero value. The indicator applies triple smoothing in an attempt to eliminate insignificant price movements within the trend that you're trying to isolate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TRIX(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The TRIX (Triple Exponential Average) displays the percentage Rate of Change (ROC) of a triple EMA. Trix oscillates above and below the zero value. The indicator applies triple smoothing in an attempt to eliminate insignificant price movements within the trend that you're trying to isolate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TSF(System.Int32,System.Int32)">
            <summary>
            The TSF (Time Series Forecast) calculates probable future values for the price by fitting a linear regression line over a given number of price bars and following that line forward into the future. A linear regression line is a straight line which is as close to all of the given price points as possible. Also see the Linear Regression indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TSF(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The TSF (Time Series Forecast) calculates probable future values for the price by fitting a linear regression line over a given number of price bars and following that line forward into the future. A linear regression line is a straight line which is as close to all of the given price points as possible. Also see the Linear Regression indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TSI(System.Int32,System.Int32)">
            <summary>
            The TSI (True Strength Index) is a momentum-based indicator, developed by William Blau. Designed to determine both trend and overbought/oversold conditions, the TSI is applicable to intraday time frames as well as long term trading.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TSI(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The TSI (True Strength Index) is a momentum-based indicator, developed by William Blau. Designed to determine both trend and overbought/oversold conditions, the TSI is applicable to intraday time frames as well as long term trading.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.UltimateOscillator(System.Int32,System.Int32,System.Int32)">
            <summary>
            The Ultimate Oscillator is the weighted sum of three oscillators of different time periods. The typical time periods are 7, 14 and 28. The values of the Ultimate Oscillator range from zero to 100. Values over 70 indicate overbought conditions, and values under 30 indicate oversold conditions. Also look for agreement/divergence with the price to confirm a trend or signal the end of a trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.UltimateOscillator(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            The Ultimate Oscillator is the weighted sum of three oscillators of different time periods. The typical time periods are 7, 14 and 28. The values of the Ultimate Oscillator range from zero to 100. Values over 70 indicate overbought conditions, and values under 30 indicate oversold conditions. Also look for agreement/divergence with the price to confirm a trend or signal the end of a trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VMA(System.Int32,System.Int32)">
            <summary>
            The VMA (Variable Moving Average, also known as VIDYA or Variable Index Dynamic Average) is an exponential moving average that automatically adjusts the smoothing weight based on the volatility of the data series. VMA solves a problem with most moving averages. In times of low volatility, such as when the price is trending, the moving average time period should be shorter to be sensitive to the inevitable break in the trend. Whereas, in more volatile non-trending times, the moving average time period should be longer to filter out the choppiness. VIDYA uses the CMO indicator for it's internal volatility calculations. Both the VMA and the CMO period are adjustable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VMA(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The VMA (Variable Moving Average, also known as VIDYA or Variable Index Dynamic Average) is an exponential moving average that automatically adjusts the smoothing weight based on the volatility of the data series. VMA solves a problem with most moving averages. In times of low volatility, such as when the price is trending, the moving average time period should be shorter to be sensitive to the inevitable break in the trend. Whereas, in more volatile non-trending times, the moving average time period should be longer to filter out the choppiness. VIDYA uses the CMO indicator for it's internal volatility calculations. Both the VMA and the CMO period are adjustable.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VOL">
            <summary>
            Volume is simply the number of shares (or contracts) traded during a specified time frame (e.g. hour, day, week, month, etc).
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VOL(NinjaTrader.Data.IDataSeries)">
            <summary>
            Volume is simply the number of shares (or contracts) traded during a specified time frame (e.g. hour, day, week, month, etc).
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VOLMA(System.Int32)">
            <summary>
            The VOLMA (Volume Moving Average) plots an exponential moving average (EMA) of volume.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VOLMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The VOLMA (Volume Moving Average) plots an exponential moving average (EMA) of volume.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VolumeCounter(System.Boolean,System.Boolean)">
            <summary>
            Displays the volume count of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VolumeCounter(NinjaTrader.Data.IDataSeries,System.Boolean,System.Boolean)">
            <summary>
            Displays the volume count of a bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VolumeOscillator(System.Int32,System.Int32)">
            <summary>
            The Volume Oscillator measures volume by calculating the difference of a fast and a slow moving average of volume. The Volume Oscillator can provide insight into the strength or weakness of a price trend. A positive value suggests there is enough market support to continue driving price activity in the direction of the current trend. A negative value suggests there is a lack of support, that prices may begin to become stagnant or reverse.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VolumeOscillator(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The Volume Oscillator measures volume by calculating the difference of a fast and a slow moving average of volume. The Volume Oscillator can provide insight into the strength or weakness of a price trend. A positive value suggests there is enough market support to continue driving price activity in the direction of the current trend. A negative value suggests there is a lack of support, that prices may begin to become stagnant or reverse.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VolumeProfile(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Plots a vertical histogram of volume by price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VolumeProfile(NinjaTrader.Data.IDataSeries,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Plots a vertical histogram of volume by price.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VolumeUpDown">
            <summary>
            Variation of the VOL (Volume) indicator that colors the volume histogram different color depending if the current bar is up or down bar
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VolumeUpDown(NinjaTrader.Data.IDataSeries)">
            <summary>
            Variation of the VOL (Volume) indicator that colors the volume histogram different color depending if the current bar is up or down bar
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VolumeZones(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Boolean,System.Drawing.Color,System.Int32)">
            <summary>
            Volume Zones plots a horizontal histogram that overlays a price chart. The histogram bars stretch from left to right starting at the left side of the chart. The length of each bar is determined by the cumulative total of all volume bars for the periods during which the price fell within the vertical range of the histogram bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VolumeZones(NinjaTrader.Data.IDataSeries,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Boolean,System.Drawing.Color,System.Int32)">
            <summary>
            Volume Zones plots a horizontal histogram that overlays a price chart. The histogram bars stretch from left to right starting at the left side of the chart. The length of each bar is determined by the cumulative total of all volume bars for the periods during which the price fell within the vertical range of the histogram bar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VROC(System.Int32,System.Int32)">
            <summary>
            The VROC (Volume Rate-of-Change) shows whether or not a volume trend is developing in either an up or down direction. It is similar to the ROC indicator, but is applied to volume instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VROC(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            The VROC (Volume Rate-of-Change) shows whether or not a volume trend is developing in either an up or down direction. It is similar to the ROC indicator, but is applied to volume instead.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VWMA(System.Int32)">
            <summary>
            The VWMA (Volume-Weighted Moving Average) returns the volume-weighted moving average for the specified price series and period. VWMA is similar to a Simple Moving Average (SMA), but each bar of data is weighted by the bar's Volume. VWMA places more significance on the days with the largest volume and the least for the days with lowest volume for the period specified.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.VWMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The VWMA (Volume-Weighted Moving Average) returns the volume-weighted moving average for the specified price series and period. VWMA is similar to a Simple Moving Average (SMA), but each bar of data is weighted by the bar's Volume. VWMA places more significance on the days with the largest volume and the least for the days with lowest volume for the period specified.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.WilliamsR(System.Int32)">
            <summary>
            The Williams %R is a momentum indicator that is designed to identify overbought and oversold areas in a nontrending market.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.WilliamsR(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The Williams %R is a momentum indicator that is designed to identify overbought and oversold areas in a nontrending market.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.WMA(System.Int32)">
            <summary>
            The WMA (Weighted Moving Average) is a Moving Average indicator that shows the average value of a security's price over a period of time with special emphasis on the more recent portions of the time period under analysis as opposed to the earlier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.WMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The WMA (Weighted Moving Average) is a Moving Average indicator that shows the average value of a security's price over a period of time with special emphasis on the more recent portions of the time period under analysis as opposed to the earlier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ZigZag(NinjaTrader.Data.DeviationType,System.Double,System.Boolean)">
            <summary>
            The ZigZag indicator shows trend lines filtering out changes below a defined level. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ZigZag(NinjaTrader.Data.IDataSeries,NinjaTrader.Data.DeviationType,System.Double,System.Boolean)">
            <summary>
            The ZigZag indicator shows trend lines filtering out changes below a defined level. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ZLEMA(System.Int32)">
            <summary>
            The ZLEMA (Zero-Lag Exponential Moving Average) is an EMA variant that attempts to adjust for lag.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.ZLEMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The ZLEMA (Zero-Lag Exponential Moving Average) is an EMA variant that attempts to adjust for lag.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.anaFibonacciClusterV14D(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            anaFibonacciClusterV14D.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.anaFibonacciClusterV14D(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            anaFibonacciClusterV14D.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.anaFibonacciClusterV14L(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            anaFibonacciClusterV14L.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.anaFibonacciClusterV14L(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            anaFibonacciClusterV14L.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.AutoTrendH(System.Boolean,System.Boolean,System.Int32)">
            <summary>
            AutoTrendLine with History option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.AutoTrendH(NinjaTrader.Data.IDataSeries,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            AutoTrendLine with History option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.bwAlligator">
            <summary>
            In principle, bwAlligator Technical Indicator is a combination of Balance Lines (Moving Averages) that use fractal geometry and nonlinear dynamics.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.bwAlligator(NinjaTrader.Data.IDataSeries)">
            <summary>
            In principle, bwAlligator Technical Indicator is a combination of Balance Lines (Moving Averages) that use fractal geometry and nonlinear dynamics.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.bwAO">
            <summary>
            Awesome Oscillator Technical Indicator (AO) is a 34-period simple moving average, plotted through the middle points of the bars (H+L)/2, which is subtracted from the 5-period simple moving average, built across the central points of the bars (H+L)/2. It shows us quite clearly what’s happening to the market driving force at the present moment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.bwAO(NinjaTrader.Data.IDataSeries)">
            <summary>
            Awesome Oscillator Technical Indicator (AO) is a 34-period simple moving average, plotted through the middle points of the bars (H+L)/2, which is subtracted from the 5-period simple moving average, built across the central points of the bars (H+L)/2. It shows us quite clearly what’s happening to the market driving force at the present moment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.bwFractals">
            <summary>
            Fractal Technical Indicator it is a series of at least five successive bars, with the highest HIGH in the middle, and two lower HIGHs on both sides. The reversing set is a series of at least five successive bars, with the lowest LOW in the middle, and two higher LOWs on both sides, which correlates to the sell fractal. The fractals are have High and Low values and are indicated with the up and down arrows.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.bwFractals(NinjaTrader.Data.IDataSeries)">
            <summary>
            Fractal Technical Indicator it is a series of at least five successive bars, with the highest HIGH in the middle, and two lower HIGHs on both sides. The reversing set is a series of at least five successive bars, with the lowest LOW in the middle, and two higher LOWs on both sides, which correlates to the sell fractal. The fractals are have High and Low values and are indicated with the up and down arrows.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.dsFibConfluence(System.Int32)">
            <summary>
            Enter the description of your new custom indicator here
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.dsFibConfluence(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Enter the description of your new custom indicator here
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DStochZeroLag(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DStochZeroLag(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DynamicSRLines(System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws nearest level of S/R lines above and below current market based on historical price swing High/Low pivots
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.DynamicSRLines(NinjaTrader.Data.IDataSeries,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws nearest level of S/R lines above and below current market based on historical price swing High/Low pivots
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TSEcoNews(TSEcoUtility.DockingPlace)">
            <summary>
             TS Economic News Add On
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TSEcoNews(NinjaTrader.Data.IDataSeries,TSEcoUtility.DockingPlace)">
            <summary>
             TS Economic News Add On
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.FractalLevel(System.Int32)">
            <summary>
            Draws the fractal pivot lines based on 7 fractal bar patterns
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.FractalLevel(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Draws the fractal pivot lines based on 7 fractal bar patterns
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.GrabLong(System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.GrabLong(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.GrabRange(System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.GrabRange(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.GrabShort(System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.GrabShort(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            EMAs
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.IchimokuCloud(System.Int32,System.Int32,System.Int32)">
            <summary>
            IchiCloud Kinko Hyo - please see http://www.forexabode.com/technical-analysis/ichimoku-cloud
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.IchimokuCloud(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32)">
            <summary>
            IchiCloud Kinko Hyo - please see http://www.forexabode.com/technical-analysis/ichimoku-cloud
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.LabelRayLineAlerts(System.String,System.Boolean,System.Single,NinjaTrader.Gui.Chart.LabelAreaType,NinjaTrader.Gui.Chart.LabelSideType)">
            <summary>
            Label Ray Lines Alerts
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.LabelRayLineAlerts(NinjaTrader.Data.IDataSeries,System.String,System.Boolean,System.Single,NinjaTrader.Gui.Chart.LabelAreaType,NinjaTrader.Gui.Chart.LabelSideType)">
            <summary>
            Label Ray Lines Alerts
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.LineAlert(System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.String)">
            <summary>
            This indicator will alert crossovers for manually drawn lines. Alerts are reset with each new bar or when ManualReset input set to true. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.LineAlert(NinjaTrader.Data.IDataSeries,System.String,System.Boolean,System.Drawing.Color,System.Boolean,System.String)">
            <summary>
            This indicator will alert crossovers for manually drawn lines. Alerts are reset with each new bar or when ManualReset input set to true. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.MACDGapless(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            The MACD (Moving Average Convergence/Divergence) is a trend following momentum indicator that shows the relationship between two moving averages of prices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.MACDGapless(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            The MACD (Moving Average Convergence/Divergence) is a trend following momentum indicator that shows the relationship between two moving averages of prices.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.mahTrendGRaBerV1(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This is an adaptation of the GRAB (GRB) setup used by Raghee Horner of InterbankFX for trading currency pairs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.mahTrendGRaBerV1(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This is an adaptation of the GRAB (GRB) setup used by Raghee Horner of InterbankFX for trading currency pairs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.HeikenAshi_Smoothed">
            <summary>
            HeikenAshi_Smoothed technique discussed in the article 'Using Heiken-Ashi Technique' in February 2004 issue of TASC magazine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.HeikenAshi_Smoothed(NinjaTrader.Data.IDataSeries)">
            <summary>
            HeikenAshi_Smoothed technique discussed in the article 'Using Heiken-Ashi Technique' in February 2004 issue of TASC magazine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RBI(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Generates a Generalized Renko Bars 'LineOnClose' Plot on a 1 TICK chart. You should only apply RBI to 1 TICK Charts! But you may get 'interesting'  results if you like to experiment with other charts! Sorry, but it will not improve your batting average!
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RBI(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Generates a Generalized Renko Bars 'LineOnClose' Plot on a 1 TICK chart. You should only apply RBI to 1 TICK Charts! But you may get 'interesting'  results if you like to experiment with other charts! Sorry, but it will not improve your batting average!
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RGaussianFilter(System.Int32,System.Int32)">
            <summary>
            Gaussian Filter Ported to NT
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RGaussianFilter(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32)">
            <summary>
            Gaussian Filter Ported to NT
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RSqueeze(RSqueeze.Utility.SqueezeStyle)">
            <summary>
            Squeeze collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RSqueeze(NinjaTrader.Data.IDataSeries,RSqueeze.Utility.SqueezeStyle)">
            <summary>
            Squeeze collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RValueCharts(System.Boolean,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Single,System.Int32,System.Boolean,System.Boolean,System.Drawing.Color,RValueCharts.Utility.ValueChartStyle)">
            <summary>
            Value Charts by David Stendhal; Converted to NinjaTrader by TradingStudies.com
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.RValueCharts(NinjaTrader.Data.IDataSeries,System.Boolean,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Single,System.Int32,System.Boolean,System.Boolean,System.Drawing.Color,RValueCharts.Utility.ValueChartStyle)">
            <summary>
            Value Charts by David Stendhal; Converted to NinjaTrader by TradingStudies.com
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.SlingShot(System.Drawing.Color,System.Drawing.Color,System.Int32,NinjaTrader.Data.PriceType,SlingShot.Utility.MovingAverageType,System.Int32,System.Int32,NinjaTrader.Data.PriceType,SlingShot.Utility.MovingAverageType)">
            <summary>
            SlingShot Indicator - Paints Region between two moving averages of your choice. Created by TradingStudies.com
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.SlingShot(NinjaTrader.Data.IDataSeries,System.Drawing.Color,System.Drawing.Color,System.Int32,NinjaTrader.Data.PriceType,SlingShot.Utility.MovingAverageType,System.Int32,System.Int32,NinjaTrader.Data.PriceType,SlingShot.Utility.MovingAverageType)">
            <summary>
            SlingShot Indicator - Paints Region between two moving averages of your choice. Created by TradingStudies.com
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.SMMA(System.Int32)">
            <summary>
            The SMMA (Smoothed Moving Average) is an indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.SMMA(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            The SMMA (Smoothed Moving Average) is an indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.SuperTrend(System.Int32,System.Double,System.Boolean)">
            <summary>
            SuperTrend Indicator developed by Roonius
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.SuperTrend(NinjaTrader.Data.IDataSeries,System.Int32,System.Double,System.Boolean)">
            <summary>
            SuperTrend Indicator developed by Roonius
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TrendLineAlert">
            <summary>
            Alert when price hits a trend line. Bid when price is below a trend line, and Ask when price is above a trend line. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TrendLineAlert(NinjaTrader.Data.IDataSeries)">
            <summary>
            Alert when price hits a trend line. Bid when price is below a trend line, and Ask when price is above a trend line. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TrendSpotter(System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Finds the the current, prevailing linear trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TrendSpotter(NinjaTrader.Data.IDataSeries,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Finds the the current, prevailing linear trend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TSIntradayPivots(System.Int32)">
            <summary>
            Rolling Intraday Pivots (created by TradingStudies.com)
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TSIntradayPivots(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Rolling Intraday Pivots (created by TradingStudies.com)
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TTMWaveAOC(System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TTMWaveAOC(NinjaTrader.Data.IDataSeries,System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TTMWaveBOC(System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TTMWaveBOC(NinjaTrader.Data.IDataSeries,System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TTMWaveCOC(System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.TTMWaveCOC(NinjaTrader.Data.IDataSeries,System.Boolean)">
            <summary>
            VM Wave A Open Code with gapless option
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.NtSeriesTrend(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Series Trend
            </summary>
            <param name="series"> input series</param>
            <param name="numOfBars"> number of bars </param>
            <returns>1 - rising, -1 falling, 0 flat or unknown</returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.NtIsWaveCrossed(System.Boolean,System.Boolean,System.String,System.Int32)">
            <summary>
            Return whether the wave crossed
            </summary>
            <param name="direction">true for Long and false for Short</param>
            <param name="waveLongOrShort">true for UP and false for DOWN</param>
            <param name="waveA_B_or_C">could be A, B or C</param>
            <param name="numOfBars">Number of Bars ago </param>
            <returns>1 for long, -1 for short, 0 didn't cross</returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.JurikDMX(System.Int32)">
            <summary>
            Jurik DMX (Directional Movement Index) is a smoother version of the technical indicator DMI, while retaining very fast response speed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.JurikDMX(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Jurik DMX (Directional Movement Index) is a smoother version of the technical indicator DMI, while retaining very fast response speed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.JurikJMA(System.Double,System.Double)">
            <summary>
            Jurik JMA Adaptive Moving Average is a Moving Average Indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.JurikJMA(NinjaTrader.Data.IDataSeries,System.Double,System.Double)">
            <summary>
            Jurik JMA Adaptive Moving Average is a Moving Average Indicator that shows the average value of a security's price over a period of time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.JurikRSX(System.Double)">
            <summary>
            Jurik RSX (Relative Trend Strength Index) is a smoother version of the technical RSI indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.JurikRSX(NinjaTrader.Data.IDataSeries,System.Double)">
            <summary>
            Jurik RSX (Relative Trend Strength Index) is a smoother version of the technical RSI indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.JurikVEL(System.Int32)">
            <summary>
            Jurik VEL (Zero-Lag Velocity) is a smoother version of the technical indicator 'momentum' with the special feature that the smoothing process has added no additional lag to the original momentum indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.JurikVEL(NinjaTrader.Data.IDataSeries,System.Int32)">
            <summary>
            Jurik VEL (Zero-Lag Velocity) is a smoother version of the technical indicator 'momentum' with the special feature that the smoothing process has added no additional lag to the original momentum indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.WoodiesCCI(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Woodies variation of the CCI.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.WoodiesCCI(NinjaTrader.Data.IDataSeries,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Woodies variation of the CCI.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.WoodiesPivots(NinjaTrader.Data.HLCCalculationMode,System.Int32)">
            <summary>
            Woodies Pivot Points.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.Strategy.WoodiesPivots(NinjaTrader.Data.IDataSeries,NinjaTrader.Data.HLCCalculationMode,System.Int32)">
            <summary>
            Woodies Pivot Points.
            </summary>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Strategy.Strategy.BarsRequired">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.Strategy.CalculateOnBarClose">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.Strategy.ForceMaximumBarsLookBack256">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.Strategy.LeadIndicator">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.Strategy.MaximumBarsLookBack">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.ADX">
            <summary>
            The Average Directional Index measures the strength of a prevailing trend as well as whether movement exists in the market. The ADX is measured on a scale of 0  100. A low ADX value (generally less than 20) can indicate a non-trending market with low volumes whereas a cross above 20 may indicate the start of a trend (either up or down). If the ADX is over 40 and begins to fall, it can indicate the slowdown of a current trend.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ADX.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ADX.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.ADX.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.ADXR">
            <summary>
            Average Directional Movement Rating quantifies momentum change in the ADX. It is calculated by adding two values of ADX (the current value and a value n periods back), then dividing by two. This additional smoothing makes the ADXR slightly less responsive than ADX. The interpretation is the same as the ADX; the higher the value, the stronger the trend.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ADXR.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ADXR.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.ADXR.Interval">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.ADXR.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.APZ">
            <summary>
            The APZ (Adaptive Prize Zone) forms a steady channel based on double smoothed exponential moving averages around the average price. See S/C, September 2006, p.28.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.APZ.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.APZ.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.Aroon">
            <summary>
            The Aroon Indicator was developed by Tushar Chande. Its comprised of two plots one measuring the number of periods since the most recent x-period high (Aroon Up) and the other measuring the number of periods since the most recent x-period low (Aroon Down).
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Aroon.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Aroon.OnBarUpdate">
            <summary>
            Calculates the indicator value(s) at the current index.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Aroon.Down">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Aroon.Period">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Aroon.Up">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.AroonOscillator">
            <summary>
            The Aroon Oscillator is based upon his Aroon Indicator. Much like the Aroon Indicator, the Aroon Oscillator measures the strength of a trend.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.AroonOscillator.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.AroonOscillator.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.AroonOscillator.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.ATR">
            <summary>
            The Average True Range (ATR) is a measure of volatility. It was introduced by Welles Wilder in his book 'New Concepts in Technical Trading Systems' and has since been used as a component of many indicators and trading systems.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ATR.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ATR.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.ATR.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.BarTimer">
            <summary>
            The Bar Timer displays the remaining time of a minute based bar.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.BarTimer.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.BarTimer.OnBarUpdate">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.BarTimer.OnTermination">
            <summary>
            Overload this method to handle the termination of an indicator. Use this method to dispose of any resources vs overloading the Dispose() method.
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.Bollinger">
            <summary>
            Bollinger Bands are plotted at standard deviation levels above and below a moving average. Since standard deviation is a measure of volatility, the bands are self-adjusting: widening during volatile markets and contracting during calmer periods.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Bollinger.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Bollinger.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Bollinger.Lower">
            <summary>
            Gets the lower value.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Bollinger.Middle">
            <summary>
            Get the middle value.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Bollinger.NumStdDev">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Bollinger.Period">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Bollinger.Upper">
            <summary>
            Get the upper value.
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.BOP">
            <summary>
            The balance of power indicator measures the strength of the bulls vs. bears by assessing the ability of each to push price to an extreme level.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.BOP.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.BOP.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.BOP.Smooth">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.BuySellPressure">
            <summary>
            Indicates the current buying or selling pressure as a perecentage. This is a tick by tick indicator. If 'Calculate on bar close' is true, the indicator values will always be 100.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.BuySellPressure.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.BuySellPressure.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.BuySellVolume">
            <summary>
            This indicator is a real-time indicator and does not plot against historical data. Plots a histogram splitting volume between trades at the ask or higher and trades at the bid and lower.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.BuySellVolume.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.BuySellVolume.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.CandleStickPattern">
            <summary>
            Detects common candlestick patterns and marks them on the chart.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.CandleStickPattern.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.CandleStickPattern.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.CandleStickPattern.PatternFound">
            <summary>
            Gets a value indicating if a pattern was found
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.CCI">
            <summary>
            The Commodity Channel Index (CCI) measures the variation of a security's price from its statistical mean. High values show that prices are unusually high compared to average prices whereas low values indicate that prices are unusually low.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.CCI.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.CCI.OnBarUpdate">
            <summary>
            Calculates the indicator value(s) at the current index.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.CCI.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.ChaikinMoneyFlow">
            <summary>
            Chaikin Money Flow.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ChaikinMoneyFlow.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ChaikinMoneyFlow.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.ChaikinMoneyFlow.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.ChaikinOscillator">
            <summary>
            Chaikin Oscillator.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ChaikinOscillator.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ChaikinOscillator.OnBarUpdate">
            <summary>
            Calculates the indicator value(s) at the current index.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.ChaikinOscillator.Fast">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.ChaikinOscillator.Slow">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.ChaikinVolatility">
            <summary>
            Chaikin Volatility
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ChaikinVolatility.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ChaikinVolatility.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.CMO">
            <summary>
            The CMO differs from other momentum oscillators such as Relative Strength Index (RSI) and Stochastics. It uses both up and down days data in the numerator of the calculation to measure momentum directly. Primarily used to look for extreme overbought and oversold conditions, CMO can also be used to look for trends.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.CMO.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.CMO.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.CMO.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.ConstantLines">
            <summary>
            Plots lines at user  defined values.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ConstantLines.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ConstantLines.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.CurrentDayOHL">
            <summary>
            Plots the open, high, and low values from the session starting on the current day.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.CurrentDayOHL.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.CurrentDayOHL.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.CustomPlotSample">
            <summary>
            This is a sample for an indicator which with custom plotting.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.CustomPlotSample.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.CustomPlotSample.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.CustomPlotSample.OnTermination">
            <summary>
            Overload this method to handle the termination of an indicator. Use this method to dispose of any resources vs overloading the Dispose() method.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.CustomPlotSample.Plot(System.Drawing.Graphics,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            Called when the indicator is plotted.
            </summary>
            <param name="graphics">Graphics context</param>
            <param name="bounds">Paintable chart region</param>
            <param name="min">Min indicator value plotted</param>
            <param name="max">Max indicator value plotted</param>
        </member>
        <member name="T:NinjaTrader.Indicator.Darvas">
            <summary>
            This Indicator represents the Darvas Box.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Darvas.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Darvas.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.DEMA">
            <summary>
            Double Exponential Moving Average
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.DEMA.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.DEMA.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.DM">
            <summary>
            Directional Movement (DM). This is the same indicator as the ADX, with the addition of the two directional movement indicators +DI and -DI. +DI and -DI measure upward and downward momentum. A buy signal is generated when +DI crosses -DI to the upside. A sell signal is generated when -DI crosses +DI to the downside.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.DM.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.DM.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.DM.DiPlus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.DM.DiMinus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.DM.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.DMI">
            <summary>
            Directional Movement Index. Directional Movement Index is quite similiar to Welles Wilder's Relative Strength Index. The difference is the DMI uses variable time periods (from 3 to 30) vs. the RSI's fixed periods.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.DMI.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.DMI.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.DMI.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.DMIndex">
            <summary>
            The Dynamic Momentum Index is a variable term RSI. The RSI term varies from 3 to 30. The variable time period makes the RSI more responsive to short-term moves. The more volatile the price is, the shorter the time period is. It is interpreted in the same way as the RSI, but provides signals earlier.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.DMIndex.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.DMIndex.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.DonchianChannel">
            <summary>
            Donchian Channel. The Donchian Channel indicator was created by Richard Donchian. It uses the highest high and the lowest low of a period of time to plot the channel.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.DonchianChannel.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.DonchianChannel.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.DonchianChannel.Lower">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.DonchianChannel.Mean">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.DonchianChannel.Period">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.DonchianChannel.Upper">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.DoubleStochastics">
            <summary>
            Double stochastics
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.DoubleStochastics.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.DoubleStochastics.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.EaseOfMovement">
            <summary>
            The Ease of Movement (EMV) indicator emphasizes days in which the stock is moving easily and minimizes the days in which the stock is finding it difficult to move. A buy signal is generated when the EMV crosses above zero, a sell signal when it crosses below zero. When the EMV hovers around zero, then there are small price movements and/or high volume, which is to say, the price is not moving easily.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.EaseOfMovement.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.EaseOfMovement.OnBarUpdate">
            <summary>
            Calculates the indicator value(s) at the current index.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.EaseOfMovement.Smoothing">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.EaseOfMovement.VolumeDivisor">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.EMA">
            <summary>
            Exponential Moving Average. The Exponential Moving Average is an indicator that shows the average value of a security's price over a period of time. When calculating a moving average. The EMA applies more weight to recent prices than the SMA.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.EMA.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.EMA.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.EMA.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.FisherTransform">
            <summary>
            Fisher Transform. The Fisher Transform has sharp and distinct turning points that occur in a timely fashion. The resulting peak swings are used to identify price reversals.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.FisherTransform.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.FisherTransform.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.FisherTransform.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.FOSC">
            <summary>
            The Forecast Oscillator (FOSC) is an extension of the linear regression based indicators made popular by Tushar Chande. The Forecast Oscillator plots the percentage difference between the forecast price (generated by an x-period linear regression line) and the actual price. The oscillator is above zero when the forecast price is greater than the actual price.  Conversely, it's less than zero if its below. In the rare case when the forecast price and the actual price are the same, the oscillator would plot zero. Actual prices that are persistently below the forecast price suggest lower prices ahead.  Likewise, actual prices that are persistently above the forecast price suggest higher prices ahead. Short-term traders should use shorter time periods and perhaps more relaxed standards for the required length of time above or below the forecast price. Long-term traders should use longer time periods and perhaps stricter standards for the required length of time above or below the forecast price. Chande also suggests plotting a three-day moving average trigger line of the Forecast Oscillator to generate early warnings of changes in trend. When the oscillator crosses below the trigger line, lower prices are suggested. When the oscillator crosses above the trigger line, higher prices are suggested.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.FOSC.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.FOSC.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.FOSC.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.HeikenAshi">
            <summary>
            HeikenAshi technique discussed in the article 'Using Heiken-Ashi Technique' in February 2004 issue of TASC magazine.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.HeikenAshi.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.HeikenAshi.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi.BarColorDownSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi.BarColorUp">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi.BarColorUpSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi.ShadowColor">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi.ShadowColorSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi.ShadowWidth">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.HMA">
            <summary>
            The Hull Moving Average (HMA) employs weighted MA calculations to offer superior smoothing, and much less lag, over traditional SMA indicators.
            This indicator is based on the reference article found here:
            http://www.justdata.com.au/Journals/AlanHull/hull_ma.htm
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.HMA.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.HMA.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HMA.Period">
            <summary>
            Period
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.KAMA">
            <summary>
            Kaufman's Adaptive Moving Average. Developed by Perry Kaufman, this indicator is an EMA using an Efficiency Ratio to modify the smoothing constant, which ranges from a minimum of Fast Length to a maximum of Slow Length. Since this moving average is adaptive it tends to follow prices more closely than other MA's.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.KAMA.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before
            any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.KAMA.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.KAMA.Fast">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.KAMA.Period">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.KAMA.Slow">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.KeltnerChannel">
            <summary>
            Keltner Channel. The Keltner Channel is a similar indicator to Bollinger Bands. Here the midline is a standard moving average with the upper and lower bands offset by the SMA of the difference between the high and low of the previous bars. The offset multiplier as well as the SMA period is configurable.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.KeltnerChannel.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.KeltnerChannel.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick).
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.KeltnerChannel.Period">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.KeltnerChannel.OffsetMultiplier">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.KeltnerChannel.Midline">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.KeltnerChannel.Upper">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.KeltnerChannel.Lower">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.KeyReversalDown">
            <summary>
            Returns a value of 1 when the current close is less than the prior close after penetrating the highest high of the last n bars.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.KeyReversalDown.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.KeyReversalDown.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.KeyReversalUp">
            <summary>
            Returns a value of 1 when the current close is greater than the prior close after penetrating the lowest low of the last n bars.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.KeyReversalUp.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.KeyReversalUp.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.LinReg">
            <summary>
            Linear Regression. The Linear Regression is an indicator that 'predicts' the value of a security's price.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.LinReg.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.LinReg.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.LinReg.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.LinRegIntercept">
            <summary>
            Linnear Regression Intercept
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.LinRegIntercept.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.LinRegIntercept.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.LinRegIntercept.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.LinRegSlope">
            <summary>
            Linear Regression Slope
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.LinRegSlope.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.LinRegSlope.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.LinRegSlope.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.MACD">
            <summary>
            The MACD (Moving Average Convergence/Divergence) is a trend following momentum indicator that shows the relationship between two moving averages of prices.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.MACD.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.MACD.OnBarUpdate">
            <summary>
            Calculates the indicator value(s) at the current index.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MACD.Avg">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MACD.Default">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MACD.Diff">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MACD.Fast">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MACD.Slow">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MACD.Smooth">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.MAEnvelopes">
            <summary>
            Moving Average Envelopes
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.MAEnvelopes.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.MAEnvelopes.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.MAMA">
            <summary>
            The MAMA (MESA Adaptive Moving Average) was developed by John Ehlers. It adapts to price movement in a new and unique way. The adaptation is based on the Hilbert Transform Discriminator. The adavantage of this method features fast attack average and a slow decay average. The MAMA + the FAMA (Following Adaptive Moving Average) lines only cross at major market reversals.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.MAMA.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.MAMA.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MAMA.Fama">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MAMA.FastLimit">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MAMA.Default">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MAMA.SlowLimit">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.MAX">
            <summary>
            The Maximum shows the maximum of the last n bars.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.MAX.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.MAX.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MAX.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.MFI">
            <summary>
            The MFI (Money Flow Index) is a momentum indicator that measures the strength of money flowing in and out of a security.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.MFI.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.MFI.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MFI.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.MIN">
            <summary>
            The Minimum shows the minimum of the last n bars.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.MIN.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.MIN.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MIN.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.Momentum">
            <summary>
            The Momentum indicator measures the amount that a security's price has changed over a given time span.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Momentum.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Momentum.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Momentum.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.NBarsDown">
            <summary>
            This indicator returns 1 when we have n of consecutive bars down, otherwise returns 0. A down bar is defined as a bar where the close is below the open and the bars makes a lower high and a lower low. You can adjust the specific requirements with the indicator options.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.NBarsDown.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.NBarsDown.OnBarUpdate">
            <summary>
            Calculates the indicator value(s) at the current index.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.NBarsDown.BarCount">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.NBarsUp">
            <summary>
            This indicator returns 1 when we have n of consecutive bars up, otherwise returns 0. An up bar is defined as a bar where the close is above the open and the bars makes a higher high and a higher low. You can adjust the specific requirements with the indicator options.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.NBarsUp.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.NBarsUp.OnBarUpdate">
            <summary>
            Calculates the indicator value(s) at the current index.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.NBarsUp.BarCount">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.OBV">
            <summary>
            OBV (On Balance Volume) is a running total of volume. It shows if volume is flowing into or out of a security. When the security closes higher than the previous close, all of the day's volume is considered up-volume. When the security closes lower than the previous close, all of the day's volume is considered down-volume.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.OBV.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.OBV.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.ParabolicSAR">
            <summary>
            Parabolic SAR according to Stocks and Commodities magazine V 11:11 (477-479).
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ParabolicSAR.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ParabolicSAR.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.ParabolicSAR.Acceleration">
            <summary>
            The initial acceleration factor
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.ParabolicSAR.AccelerationStep">
            <summary>
            The acceleration step factor
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.ParabolicSAR.AccelerationMax">
            <summary>
            The maximum acceleration
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.PFE">
            <summary>
            The PFE (Polarized Fractal Efficiency) is an indicator that uses fractal geometry to determine how efficiently the price is moving.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.PFE.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.PFE.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.Pivots">
            <summary>
            Pivot Points.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Pivots.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Pivots.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Pivots.GetBarsNow(System.Object)">
            <summary>
            Have the .GetBars() call in a seperate thread. Reason: NT internal pool locking would not work if called in main thread.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:NinjaTrader.Indicator.Pivots.OnTermination">
            <summary>
            Overload this method to handle the termination of an indicator. Use this method to dispose of any resources vs overloading the Dispose() method.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Pivots.Plot(System.Drawing.Graphics,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            </summary>
            <param name="graphics"></param>
            <param name="bounds"></param>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="P:NinjaTrader.Indicator.Pivots.PivotRangeType">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Pivots.PP">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Pivots.PriorDayHLC">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Pivots.R1">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Pivots.R2">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Pivots.R3">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Pivots.S1">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Pivots.S2">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Pivots.S3">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Pivots.UserDefinedClose">
            <summary>
            close value for user defined pivots calculation
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Pivots.UserDefinedHigh">
            <summary>
            high value for user defined pivots calculation
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Pivots.UserDefinedLow">
            <summary>
            low value for user defined pivots calculation
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Pivots.Width">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.PPO">
            <summary>
            The PPO (Percentage Price Oscillator) is based on two moving averages expressed as a percentage. The PPO is found by subtracting the longer MA from the shorter MA and then dividing the difference by the longer MA.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.PPO.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.PPO.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.PPO.Default">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.PPO.Fast">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.PPO.Slow">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.PPO.Smooth">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.PPO.Smoothed">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.PriceAlert">
            <summary>
            Sends an alert to the alert window when a price level has been reached.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.PriceAlert.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.PriceAlert.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.PriceAlert.Price">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.PriceOscillator">
            <summary>
            The Price Oscillator indicator shows the variation among two moving averages for the price of a security.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.PriceOscillator.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.PriceOscillator.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.PriceOscillator.Fast">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.PriceOscillator.Slow">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.PriceOscillator.Smooth">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.PriorDayOHLC">
            <summary>
            Plots the open, high, low and close values from the session starting on the prior day.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.PriorDayOHLC.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.PriorDayOHLC.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.Range">
            <summary>
            Calculates the range of a bar.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Range.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Range.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.RangeCounter">
            <summary>
            The Tick Counter displays the current tick count of a bar.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RangeCounter.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RangeCounter.OnBarUpdate">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RangeCounter.OnTermination">
            <summary>
            Overload this method to handle the termination of an indicator. Use this method to dispose of any resources vs overloading the Dispose() method.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RangeCounter.Plot(System.Drawing.Graphics,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            </summary>
            <param name="graphics"></param>
            <param name="bounds"></param>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="P:NinjaTrader.Indicator.RangeCounter.CountDown">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.RegressionChannel">
            <summary>
            Linear regression is used to calculate a best fit line for the price data. In addition an upper and lower band is added by calculating the standard deviation of prices from the regression line.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RegressionChannel.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RegressionChannel.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RegressionChannel.Plot(System.Drawing.Graphics,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            </summary>
            <param name="graphics"></param>
            <param name="bounds"></param>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="P:NinjaTrader.Indicator.RegressionChannel.Lower">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.RegressionChannel.Middle">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.RegressionChannel.Period">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.RegressionChannel.Upper">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.RegressionChannel.Width">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.RIND">
            <summary>
            RIND (Range Indicator) compares the intraday range (high - low) to the inter-day (close - previous close) range. When the intraday range is greater than the inter-day range, the Range Indicator will be a high value. This signals an end to the current trend. When the Range Indicator is at a low level, a new trend is about to start.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RIND.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RIND.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.RIND.PeriodQ">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.RIND.Smooth">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.ROC">
            <summary>
            The ROC (Rate-of-Change) indicator displays the percent change between the current price and the price x-time periods ago.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ROC.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ROC.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.ROC.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.RSI">
            <summary>
            The RSI (Relative Strength Index) is a price-following oscillator that ranges between 0 and 100.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RSI.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RSI.OnBarUpdate">
            <summary>
            Calculates the indicator value(s) at the current index.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.RSI.Avg">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.RSI.Default">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.RSI.Period">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.RSI.Smooth">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.RSquared">
            <summary>
            R-squared indicator
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RSquared.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RSquared.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.RSS">
            <summary>
            Relative Spread Strength of the spread between two moving averages. TASC, October 2006, p. 16.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RSS.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RSS.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.RVI">
            <summary>
            The RVI (Relative Volatility Index) was developed by Donald Dorsey as a compliment to and a confirmation of momentum based indicators. When used to confirm other signals, only buy when the RVI is over 50 and only sell when the RVI is under 50.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RVI.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RVI.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.RVI.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.SMA">
            <summary>
            The SMA (Simple Moving Average) is an indicator that shows the average value of a security's price over a period of time.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.SMA.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.SMA.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick).
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.SMA.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.StdDev">
            <summary>
            Standard Deviation is a statistical measure of volatility. Standard Deviation is typically used as a component of other indicators, rather than as a stand-alone indicator. For example, Bollinger Bands are calculated by adding a security's Standard Deviation to a moving average.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.StdDev.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.StdDev.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.StdDev.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.StdError">
            <summary>
            Standard Error shows how near prices go around a linear regression line.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.StdError.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.StdError.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.StdError.Period">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.StdError.Lower">
            <summary>
            Lower band of Standard Error
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.StdError.Upper">
            <summary>
            Upper band of Standard Error
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.Stochastics">
            <summary>
            The Stochastic Oscillator is made up of two lines that oscillate between a vertical scale of 0 to 100. The %K is the main line and it is drawn as a solid line. The second is the %D line and is a moving average of %K. The %D line is drawn as a dotted line. Use as a buy/sell signal generator, buying when fast moves above slow and selling when fast moves below slow.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Stochastics.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Stochastics.OnBarUpdate">
            <summary>
            Calculates the indicator value(s) at the current index.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Stochastics.D">
            <summary>
            Gets the slow D value.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Stochastics.K">
            <summary>
            Gets the slow K value.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Stochastics.PeriodD">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Stochastics.PeriodK">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Stochastics.Smooth">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.StochasticsFast">
            <summary>
            The Stochastic Oscillator is made up of two lines that oscillate between a vertical scale of 0 to 100. The %K is the main line and it is drawn as a solid line. The second is the %D line and is a moving average of %K. The %D line is drawn as a dotted line. Use as a buy/sell signal generator, buying when fast moves above slow and selling when fast moves below slow.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.StochasticsFast.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.StochasticsFast.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.StochasticsFast.D">
            <summary>
            Gets the fast D value.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.StochasticsFast.K">
            <summary>
            Gets the fast K value.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.StochasticsFast.PeriodD">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.StochasticsFast.PeriodK">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.StochRSI">
            <summary>
            The StochRSI is an oscillator similar in computation to the stochastic measure, except instead of price values as input, the StochRSI uses RSI values. The StochRSI computes the current position of the RSI relative to the high and low RSI values over a specified number of days. The intent of this measure, designed by Tushard Chande and Stanley Kroll, is to provide further information about the overbought/oversold nature of the RSI. The StochRSI ranges between 0.0 and 1.0. Values above 0.8 are generally seen to identify overbought levels and values below 0.2 are considered to indicate oversold conditions.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.StochRSI.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.StochRSI.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.StochRSI.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.SUM">
            <summary>
            The Sum shows the summation of the last n data points.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.SUM.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.SUM.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.SUM.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.Swing">
            <summary>
            The Swing indicator plots lines that represents the swing high and low points.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Swing.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Swing.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.Swing.SwingLowBar(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the number of bars ago a swing low occurred. Returns a value of -1 if a swing low is not found within the look back period.
            </summary>
            <param name="barsAgo"></param>
            <param name="instance"></param>
            <param name="lookBackPeriod"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.Swing.SwingHighBar(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the number of bars ago a swing high occurred. Returns a value of -1 if a swing high is not found within the look back period.
            </summary>
            <param name="barsAgo"></param>
            <param name="instance"></param>
            <param name="lookBackPeriod"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Indicator.Swing.SwingHigh">
            <summary>
            Gets the high swings.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.Swing.SwingLow">
            <summary>
            Gets the low swings.
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.T3">
            <summary>
            T3 Moving Average
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.T3.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.T3.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.TEMA">
            <summary>
            Triple Exponential Moving Average
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TEMA.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TEMA.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.TickCounter">
            <summary>
            The Tick Counter displays the current tick count of a bar.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TickCounter.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TickCounter.OnBarUpdate">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TickCounter.OnTermination">
            <summary>
            Overload this method to handle the termination of an indicator. Use this method to dispose of any resources vs overloading the Dispose() method.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TickCounter.Plot(System.Drawing.Graphics,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            </summary>
            <param name="graphics"></param>
            <param name="bounds"></param>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="P:NinjaTrader.Indicator.TickCounter.CountDown">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.TMA">
            <summary>
            The TMA (Triangular Moving Average) is a weighted moving average. Compared to the WMA which puts more weight on the latest price bar, the TMA puts more weight on the data in the middle of the specified period.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TMA.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TMA.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.TMA.Period">
            <summary>
            Period
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.TRIX">
            <summary>
            The TRIX (Triple Exponential Average) displays the percentage Rate of Change (ROC) of a triple EMA. Trix oscillates above and below the zero value. The indicator applies triple smoothing in an attempt to eliminate insignificant price movements within the trend that you're trying to isolate.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TRIX.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TRIX.OnBarUpdate">
            <summary>
            Calculates the indicator value(s) at the current index.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.TRIX.Period">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.TRIX.Signal">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.TRIX.Default">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.TSF">
            <summary>
            The TSF (Time Series Forecast) calculates probable future values for the price by fitting a linear regression line over a given number of price bars and following that line forward into the future. A linear regression line is a straight line which is as close to all of the given price points as possible. Also see the Linear Regression indicator.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TSF.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TSF.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.TSF.Forecast">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.TSF.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.TSI">
            <summary>
            The TSI (True Strength Index) is a momentum-based indicator, developed by William Blau. Designed to determine both trend and overbought/oversold conditions, the TSI is applicable to intraday time frames as well as long term trading.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TSI.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TSI.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.TSI.Fast">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.TSI.Slow">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.UltimateOscillator">
            <summary>
            The Ultimate Oscillator is the weighted sum of three oscillators of different time periods. The typical time periods are 7, 14 and 28. The values of the Ultimate Oscillator range from zero to 100. Values over 70 indicate overbought conditions, and values under 30 indicate oversold conditions. Also look for agreement/divergence with the price to confirm a trend or signal the end of a trend.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.UltimateOscillator.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.UltimateOscillator.OnBarUpdate">
            <summary>
            Calculates the indicator value(s) at the current index.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.UltimateOscillator.Fast">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.VMA">
            <summary>
            The VMA (Variable Moving Average, also known as VIDYA or Variable Index Dynamic Average) is an exponential moving average that automatically adjusts the smoothing weight based on the volatility of the data series. VMA solves a problem with most moving averages. In times of low volatility, such as when the price is trending, the moving average time period should be shorter to be sensitive to the inevitable break in the trend. Whereas, in more volatile non-trending times, the moving average time period should be longer to filter out the choppiness. VIDYA uses the CMO indicator for it's internal volatility calculations. Both the VMA and the CMO period are adjustable.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VMA.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VMA.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VMA.Period">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VMA.VolatilityPeriod">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.VOL">
            <summary>
            Volume is simply the number of shares (or contracts) traded during a specified time frame (e.g. hour, day, week, month, etc).
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VOL.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VOL.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.VOLMA">
            <summary>
            The VOLMA (Volume Moving Average) plots an exponential moving average (EMA) of volume.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VOLMA.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VOLMA.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VOLMA.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.VolumeCounter">
            <summary>
            The Volume Counter displays the current volume count of a bar.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeCounter.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeCounter.OnBarUpdate">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeCounter.OnTermination">
            <summary>
            Overload this method to handle the termination of an indicator. Use this method to dispose of any resources vs overloading the Dispose() method.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeCounter.Plot(System.Drawing.Graphics,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            </summary>
            <param name="graphics"></param>
            <param name="bounds"></param>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeCounter.CountDown">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.VolumeOscillator">
            <summary>
            The Volume Oscillator measures volume by calculating the difference of a fast and a slow moving average of volume. The Volume Oscillator can provide insight into the strength or weakness of a price trend. A positive value suggests there is enough market support to continue driving price activity in the direction of the current trend. A negative value suggests there is a lack of support, that prices may begin to become stagnant or reverse.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeOscillator.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeOscillator.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeOscillator.Fast">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeOscillator.Slow">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.VolumeProfile">
            <summary>
            Price by Volume.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeProfile.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeProfile.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeProfile.OnTermination">
            <summary>
            Overload this method to handle the termination of an indicator. Use this method to dispose of any resources vs overloading the Dispose() method.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeProfile.Plot(System.Drawing.Graphics,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            Called when the indicator is plotted.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeProfile.VolumeColorDown">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeProfile.VolumeColorDownSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeProfile.VolumeColorNeutral">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeProfile.VolumeColorNeutralSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeProfile.VolumeColorUp">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeProfile.VolumeColorUpSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeProfile.BarSpacing">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeProfile.DrawLines">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeProfile.LineColor">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeProfile.LineColorSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeProfile.Transparency">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.VolumeUpDown">
            <summary>
            Variation of the VOL (Volume) indicator that colors the volume histogram different color depending if the current bar is up or down bar
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeUpDown.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeUpDown.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.VolumeZones">
            <summary>
            Price by Volume.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeZones.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeZones.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeZones.OnTermination">
            <summary>
            Overload this method to handle the termination of an indicator. Use this method to dispose of any resources vs overloading the Dispose() method.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VolumeZones.Plot(System.Drawing.Graphics,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            Called when the indicator is plotted.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeZones.BarCount">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeZones.BarColorDown">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeZones.BarColorDownSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeZones.BarColorUp">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeZones.BarColorUpSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeZones.BarSpacing">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeZones.DrawLines">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeZones.LineColor">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeZones.LineColorSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VolumeZones.Transparency">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.VROC">
            <summary>
            The VROC (Volume Rate-of-Change) shows whether or not a volume trend is developing in either an up or down direction. It is similar to the ROC indicator, but is applied to volume instead.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VROC.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VROC.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VROC.Period">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VROC.Smooth">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.VWMA">
            <summary>
            The VWMA (Volume-Weighted Moving Average) returns the volume-weighted moving average for the specified price series and period. VWMA is similar to a Simple Moving Average (SMA), but each bar of data is weighted by the bar's Volume. VWMA places more significance on the days with the largest volume and the least for the days with lowest volume for the period specified.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VWMA.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.VWMA.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.VWMA.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.WilliamsR">
            <summary>
            The Williams %R is a momentum indicator that is designed to identify overbought and oversold areas in a nontrending market.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.WilliamsR.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.WilliamsR.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.WilliamsR.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.WMA">
            <summary>
            The WMA (Weighted Moving Average) is a Moving Average indicator that shows the average value of a security's price over a period of time with special emphasis on the more recent portions of the time period under analysis as opposed to the earlier.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.WMA.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.WMA.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.WMA.Period">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.ZigZag">
            <summary>
            The ZigZag indicator shows trend lines filtering out changes below a defined level. 
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ZigZag.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ZigZag.LowBar(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the number of bars ago a zig zag low occurred. Returns a value of -1 if a zig zag low is not found within the look back period.
            </summary>
            <param name="barsAgo"></param>
            <param name="instance"></param>
            <param name="lookBackPeriod"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.ZigZag.HighBar(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the number of bars ago a zig zag high occurred. Returns a value of -1 if a zig zag high is not found within the look back period.
            </summary>
            <param name="barsAgo"></param>
            <param name="instance"></param>
            <param name="lookBackPeriod"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Indicator.ZigZag.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ZigZag.GetMinMaxValues(NinjaTrader.Gui.Chart.ChartControl,System.Double@,System.Double@)">
            <summary>
            #ENS#
            </summary>
            <param name="chartControl"></param>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="P:NinjaTrader.Indicator.ZigZag.ZigZagHigh">
            <summary>
            Gets the ZigZag high points.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.ZigZag.ZigZagLow">
            <summary>
            Gets the ZigZag low points.
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.ZLEMA">
            <summary>
            The ZLEMA (Zero-Lag Exponential Moving Average) is an EMA variant that attempts to adjust for lag.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ZLEMA.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.ZLEMA.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.anaFibonacciClusterV14D">
            <summary>
            Daily Session Fibonacci Retracements
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.anaFibonacciClusterV14D.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.anaFibonacciClusterV14D.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.anaFibonacciClusterV14D.OnTermination">
            <summary>
            Overload this method to handle the termination of an indicator. Use this method to dispose of any resources vs overloading the Dispose() method.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.anaFibonacciClusterV14D.Plot(System.Drawing.Graphics,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            </summary>
            <param name="graphics"></param>
            <param name="bounds"></param>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.LabelPosition">
            <summary>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Offset" -->
        <!-- Badly formed XML comment ignored for member "P:NinjaTrader.Indicator.anaFibonacciClusterV14D.S_Offset" -->
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_S_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_S_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_E_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_E_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_D_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_D_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_C_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_C_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_B_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_B_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_A_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_A_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_Xtensions">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_Highs_Lows">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_Y_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_Y_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_Z_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Show_Z_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension0">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension1">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension2">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension3">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension4">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension5">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension6">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension7">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension8">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension9">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension10">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension11">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension12">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension13">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension14">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension15">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension16">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension17">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension18">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension19">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension20">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension21">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension22">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension23">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension24">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension25">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension26">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension27">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension28">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension29">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension30">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension31">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension32">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension33">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension34">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Extension35">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.ZminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.YminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.SminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.EminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.DminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.CminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.BminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.AminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.HiddenHigh0">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.HiddenHigh1">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.HiddenHigh2">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.HiddenHigh3">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.HiddenHigh4">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.HiddenHigh5">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.HiddenLow0">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.HiddenLow1">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.HiddenLow2">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.HiddenLow3">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.HiddenLow4">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.HiddenLow5">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Width">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.LookBack">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14D.Filter">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.anaFibonacciClusterV14L">
            <summary>
            Daily Session Fibonacci Retracements
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.anaFibonacciClusterV14L.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.anaFibonacciClusterV14L.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.anaFibonacciClusterV14L.OnTermination">
            <summary>
            Overload this method to handle the termination of an indicator. Use this method to dispose of any resources vs overloading the Dispose() method.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.anaFibonacciClusterV14L.Plot(System.Drawing.Graphics,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            </summary>
            <param name="graphics"></param>
            <param name="bounds"></param>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.LabelPosition">
            <summary>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Offset" -->
        <!-- Badly formed XML comment ignored for member "P:NinjaTrader.Indicator.anaFibonacciClusterV14L.S_Offset" -->
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_S_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_S_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_E_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_E_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_D_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_D_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_C_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_C_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_B_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_B_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_A_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_A_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_Xtensions">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_Highs_Lows">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_Y_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_Y_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_Z_Plus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Show_Z_Minus">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension0">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension1">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension2">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension3">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension4">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension5">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension6">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension7">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension8">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension9">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension10">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension11">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension12">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension13">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension14">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension15">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension16">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension17">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension18">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension19">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension20">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension21">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension22">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension23">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension24">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension25">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension26">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension27">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension28">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension29">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension30">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension31">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension32">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension33">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension34">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Extension35">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.ZminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.YminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.SminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.EminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.DminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.CminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.BminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AplusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AplusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AplusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AplusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AplusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AplusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AplusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AplusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AplusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AminusFib000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AminusFib236">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AminusFib382">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AminusFib500">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AminusFib618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AminusFib764">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AminusFib1000">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AminusFib1272">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.AminusFib1618">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.HiddenHigh0">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.HiddenHigh1">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.HiddenHigh2">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.HiddenHigh3">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.HiddenHigh4">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.HiddenHigh5">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.HiddenLow0">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.HiddenLow1">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.HiddenLow2">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.HiddenLow3">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.HiddenLow4">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.HiddenLow5">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Width">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.LookBack">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.anaFibonacciClusterV14L.Filter">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.AutoTrendH">
            <summary>
            Version 2.01 12/13/2012 Bugfix: (Dots not removed when showHistory set to false)
            This is a modification to AutoTrendLine that has trendline and trend breaks historys enabled along with some signaling.
            Version 2.0 11/21/2012 (DerekPhelps22@gmail.com for bug reports) Added option to enable trend line view history
            Usage:	AutoTrendH(bool: alertOnBreak, bool: showHistory, int: strength).TrendPrice 	::returns price at trendline at bar position
            		AutoTrendH(bool: alertOnBreak, bool: showHistory, int: strength).Signal 		::0 = no signal, 1 = Buy signal on break of down trend line, -1 = Sell signal on break of up trend line
            		AutoTrendH(bool: alertOnBreak, bool: showHistory, int: strength).Direction 		::0 = Undefined  1=active up trend w/price above, -1=active down trend w/price below
            		
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.AutoTrendH.Signal">
            <summary>
            Gets the trade signal. 0 = no signal, 1 = Buy signal on break of down trend line, -1 = Sell signal on break of up trend line
            </summary>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Indicator.AutoTrendH.Direction">
            <summary>
            Gets Trend Direction
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.AutoTrendH.TrendPrice">
            <summary>
            Gets TrendPrice
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.AutoTrendH.DownTrendColor">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.AutoTrendH.DownTrendColorSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.AutoTrendH.UpTrendColor">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.AutoTrendH.UpTrendColorSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.AutoTrendH.DownHistColor">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.AutoTrendH.DownHistColorSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.AutoTrendH.UpHistColor">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.AutoTrendH.UpHistColorSerialize">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.dsFibConfluence">
            <summary>
            Enter the description of your new custom indicator here
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.dsFibConfluence.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.dsFibConfluence.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.DStochZeroLag">
            <summary>
            
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.DStochZeroLag.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.DStochZeroLag.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="F:EcoNewsControl.EcoNewsControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:EcoNewsControl.EcoNewsControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:EcoNewsControl.EcoNewsControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.FractalLevel">
            <summary>
            Indicates the Fractal Level
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.FractalLevel.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.FractalLevel.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.GrabLong">
            <summary>
            EMAs
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.GrabLong.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.GrabLong.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabLong.BarColorDownSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabLong.BarColorUp">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabLong.BarColorUpSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabLong.ShadowColor">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabLong.ShadowColorSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabLong.ShadowWidth">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.GrabRange">
            <summary>
            EMAs
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.GrabRange.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.GrabRange.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabRange.BarColorDownSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabRange.BarColorUp">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabRange.BarColorUpSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabRange.ShadowColor">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabRange.ShadowColorSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabRange.ShadowWidth">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.GrabShort">
            <summary>
            EMAs
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.GrabShort.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.GrabShort.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabShort.BarColorDownSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabShort.BarColorUp">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabShort.BarColorUpSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabShort.ShadowColor">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabShort.ShadowColorSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.GrabShort.ShadowWidth">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.IchimokuCloud">
            <summary>
            Enter the description of your new custom indicator here
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.IchimokuCloud.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.IchimokuCloud.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.LabelRayLineAlerts">
            <summary>
            Label Ray Lines
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.LabelRayLineAlerts.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.LabelRayLineAlerts.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.LineAlert">
            <summary>
            Enter the description of your new custom indicator here
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.LineAlert.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.LineAlert.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.MACDGapless">
            <summary>
            The MACD (Moving Average Convergence/Divergence) is a trend following momentum indicator that shows the relationship between two moving averages of prices.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.MACDGapless.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.MACDGapless.OnBarUpdate">
            <summary>
            Calculates the indicator value(s) at the current index.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MACDGapless.Avg">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MACDGapless.Default">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MACDGapless.Diff">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MACDGapless.Fast">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MACDGapless.Slow">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.MACDGapless.Smooth">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.mahTrendGRaBerV1">
            <summary>
            This is an adaptation of the GRAB (GRB) setup used by Raghee Horner of InterbankFX for trading currency pairs.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.mahTrendGRaBerV1.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.mahTrendGRaBerV1.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.HeikenAshi_Smoothed">
            <summary>
            HeikenAshi technique discussed in the article 'Using Heiken-Ashi Technique' in February 2004 issue of TASC magazine.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.HeikenAshi_Smoothed.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.HeikenAshi_Smoothed.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi_Smoothed.BarColorDown">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi_Smoothed.BarColorDownSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi_Smoothed.BarColorUp">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi_Smoothed.BarColorUpSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi_Smoothed.ShadowColor">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi_Smoothed.ShadowColorSerialize">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi_Smoothed.ShadowWidth">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi_Smoothed.HAOpen">
            <summary>
            Gets the HeikenAshi_Smoothed Open value.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi_Smoothed.HAHigh">
            <summary>
            Gets the HeikenAshi_Smoothed High value.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi_Smoothed.HALow">
            <summary>
            Gets the HeikenAshi_Smoothed Low value.
            </summary>
        </member>
        <member name="P:NinjaTrader.Indicator.HeikenAshi_Smoothed.HAClose">
            <summary>
            Gets the HeikenAshi_Smoothed Close value.
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.RBI">
            <summary>
            Plots the Renko Bars Close[0] of any Brick Size and Reversal on a 1 tick chart. Sorry, It will not improve your batting average!
            </summary>")
        </member>
        <member name="M:NinjaTrader.Indicator.RBI.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.RBI.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.RValueCharts">
            <summary>
            RValueCharts. 
            12/02/08 Option to display market valuation text and alert on OB/OS conditions added by Elliott Wave.
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.SuperTrend">
            <summary>
            SuperTrend Indicator
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.SuperTrend.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.SuperTrend.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.TrendLineAlert">
            <summary>
            Alert when price hits a trend line. Bid when price is below a trend line, and Ask when price is above a trend line. 
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TrendLineAlert.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TrendLineAlert.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Indicator.TrendSpotter">
            <summary>
            Find the the current, prevailing linear trend.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TrendSpotter.Initialize">
            <summary>
            This method is used to configure the indicator and is called once before any bar data is loaded.
            </summary>
        </member>
        <member name="M:NinjaTrader.Indicator.TrendSpotter.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.AskPrice">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.AskPrice.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.AskPrice.OnMarketData(NinjaTrader.Data.MarketDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.AskPrice.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.AverageDailyVolume">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.AverageDailyVolume.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.AverageDailyVolume.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.AverageDailyVolume.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.Beta">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Beta.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Beta.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.BidPrice">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.BidPrice.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.BidPrice.OnMarketData(NinjaTrader.Data.MarketDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.BidPrice.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.CalendarYearHigh">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.CalendarYearHigh.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.CalendarYearHigh.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.CalendarYearHighDate">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.CalendarYearHighDate.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.CalendarYearHighDate.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.CalendarYearHighDate.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.CalendarYearLow">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.CalendarYearLow.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.CalendarYearLow.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.CalendarYearLowDate">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.CalendarYearLowDate.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.CalendarYearLowDate.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.CalendarYearLowDate.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.CurrentYearsEarningsPerShare">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.CurrentYearsEarningsPerShare.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.CurrentYearsEarningsPerShare.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.DailyHigh">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.DailyHigh.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.DailyHigh.OnMarketData(NinjaTrader.Data.MarketDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.DailyHigh.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.DailyLow">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.DailyLow.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.DailyLow.OnMarketData(NinjaTrader.Data.MarketDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.DailyLow.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.DailyVolume">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.DailyVolume.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.DailyVolume.OnMarketData(NinjaTrader.Data.MarketDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.DailyVolume.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.DescriptionColumn">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.DescriptionColumn.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.DescriptionColumn.ToString">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.FiveYearsGrowthPercentage">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.FiveYearsGrowthPercentage.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.FiveYearsGrowthPercentage.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.High52Weeks">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.High52Weeks.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.High52Weeks.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.High52WeeksDate">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.High52WeeksDate.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.High52WeeksDate.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.High52WeeksDate.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.HistoricalVolatility">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.HistoricalVolatility.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.HistoricalVolatility.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.Instrument">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Instrument.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Instrument.ToString">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.LastClose">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.LastClose.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.LastClose.OnMarketData(NinjaTrader.Data.MarketDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.LastClose.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.LastPrice">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.LastPrice.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.LastPrice.OnMarketData(NinjaTrader.Data.MarketDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.LastPrice.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.Low52Weeks">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Low52Weeks.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Low52Weeks.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.Low52WeeksDate">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Low52WeeksDate.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Low52WeeksDate.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Low52WeeksDate.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.NetChange">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.NetChange.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.NetChange.OnMarketData(NinjaTrader.Data.MarketDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.NetChange.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.MarketAnalyzer.NetChange.Unit">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.NextYearsEarningsPerShare">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.NextYearsEarningsPerShare.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.NextYearsEarningsPerShare.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.Opening">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Opening.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Opening.OnMarketData(NinjaTrader.Data.MarketDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.Opening.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.PercentHeldByInstitutions">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.PercentHeldByInstitutions.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.PercentHeldByInstitutions.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.PercentHeldByInstitutions.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.PositionAvgPrice">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.PositionAvgPrice.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.PositionAvgPrice.OnConnectionStatus(NinjaTrader.Cbi.ConnectionStatusEventArgs)">
            <summary>
            Called on connection status change
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.PositionAvgPrice.OnPositionUpdate(NinjaTrader.Cbi.PositionUpdateEventArgs)">
            <summary>
            Called when a position is modified.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.PositionAvgPrice.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.MarketAnalyzer.PositionAvgPrice.AccountName">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.PositionSize">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.PositionSize.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.PositionSize.OnConnectionStatus(NinjaTrader.Cbi.ConnectionStatusEventArgs)">
            <summary>
            Called on connection status change
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.PositionSize.OnPositionUpdate(NinjaTrader.Cbi.PositionUpdateEventArgs)">
            <summary>
            Called when a position is modified.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.PositionSize.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.MarketAnalyzer.PositionSize.AccountName">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.PriceEarningsRatio">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.PriceEarningsRatio.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.PriceEarningsRatio.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.ProfitLoss">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.ProfitLoss.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.ProfitLoss.OnConnectionStatus(NinjaTrader.Cbi.ConnectionStatusEventArgs)">
            <summary>
            Called on connection status change
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.ProfitLoss.OnExecutionUpdate(NinjaTrader.Cbi.ExecutionUpdateEventArgs)">
            <summary>
            Called on a new fill.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.ProfitLoss.OnMarketData(NinjaTrader.Data.MarketDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.ProfitLoss.OnPositionUpdate(NinjaTrader.Cbi.PositionUpdateEventArgs)">
            <summary>
            Called when a position is modified.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.ProfitLoss.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.MarketAnalyzer.ProfitLoss.AccountName">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.RealizedProfitLoss">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.RealizedProfitLoss.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.RealizedProfitLoss.OnConnectionStatus(NinjaTrader.Cbi.ConnectionStatusEventArgs)">
            <summary>
            Called on connection status change
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.RealizedProfitLoss.OnExecutionUpdate(NinjaTrader.Cbi.ExecutionUpdateEventArgs)">
            <summary>
            Called on a new fill.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.RealizedProfitLoss.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.MarketAnalyzer.RealizedProfitLoss.AccountName">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.SharesOutstanding">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.SharesOutstanding.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.SharesOutstanding.OnFundamentalData(NinjaTrader.Data.FundamentalDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.SharesOutstanding.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.TimeLastTick">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.TimeLastTick.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.TimeLastTick.OnMarketData(NinjaTrader.Data.MarketDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.TradedContracts">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.TradedContracts.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.TradedContracts.OnConnectionStatus(NinjaTrader.Cbi.ConnectionStatusEventArgs)">
            <summary>
            Called on connection status change
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.TradedContracts.OnExecutionUpdate(NinjaTrader.Cbi.ExecutionUpdateEventArgs)">
            <summary>
            Called on order fill.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.TradedContracts.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.MarketAnalyzer.TradedContracts.AccountName">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.MarketAnalyzer.UnrealizedProfitLoss">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.UnrealizedProfitLoss.Initialize">
            <summary>
            This method is used to configure the market analyzer column and is called once before any event mathod is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.UnrealizedProfitLoss.OnConnectionStatus(NinjaTrader.Cbi.ConnectionStatusEventArgs)">
            <summary>
            Called on connection status change
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.UnrealizedProfitLoss.OnMarketData(NinjaTrader.Data.MarketDataEventArgs)">
            <summary>
            Called on each incoming market data tick.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.UnrealizedProfitLoss.OnPositionUpdate(NinjaTrader.Cbi.PositionUpdateEventArgs)">
            <summary>
            Called when a position is modified.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NinjaTrader.MarketAnalyzer.UnrealizedProfitLoss.Format(System.Double)">
            <summary>
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.MarketAnalyzer.UnrealizedProfitLoss.AccountName">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.SampleAtmStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.SampleAtmStrategy.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.SampleAtmStrategy.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.SampleMACrossOver">
            <summary>
            Simple moving average cross over strategy.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.SampleMACrossOver.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.SampleMACrossOver.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick).
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.SampleMACrossOver.Fast">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.SampleMACrossOver.Slow">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.SampleMultiInstrument">
            <summary>
            Multi-Instrument sample strategy.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.SampleMultiInstrument.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.SampleMultiInstrument.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.SampleMultiTimeFrame">
            <summary>
            This is a sample multi-time frame strategy.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.SampleMultiTimeFrame.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.SampleMultiTimeFrame.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.AutomatedSuperTrend">
            <summary>
            SuperTrend, Raghee, Bill Williams, MACD, MA
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.AutomatedSuperTrend.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.AutomatedSuperTrend.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.avoitenko">
            <summary>
            championship 2010 M
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.avoitenko.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.avoitenko.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.ChartTrader">
            <summary>
            Enter the description of your strategy here
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.ChartTrader.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.ChartTrader.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.LogTest1">
            <summary>
            Enter the description of your strategy here
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.LogTest1.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.LogTest1.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.LongTheDoji">
            <summary>
            
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.LongTheDoji.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.LongTheDoji.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.MacdSqueezeKeltnerMA">
            <summary>
            My new strategy March 13 2012
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MacdSqueezeKeltnerMA.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MacdSqueezeKeltnerMA.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.MyCustomStrategy">
            <summary>
            Enter the description of your strategy here
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MyCustomStrategy.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MyCustomStrategy.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.Nemeth1">
            <summary>
            Carter and Nemeth
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.Nemeth1.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.Nemeth1.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.Raghee1">
            <summary>
            Enter the description of your strategy here
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.Raghee1.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.Raghee1.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.RValStrategy">
            <summary>
            just test
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.RValStrategy.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.RValStrategy.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.RValStrategy2">
            <summary>
            just test
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.RValStrategy2.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.RValStrategy2.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.RValStrategy3">
            <summary>
            just test
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.RValStrategy3.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.RValStrategy3.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.Scalping1">
            <summary>
            Scalping at night through morning
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.Scalping1.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.Scalping1.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.ScalpingLimit">
            <summary>
            single timeframe with limit orders
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.ScalpingLimit.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.ScalpingLimit.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.ScalpingMultiTimeFrame1">
            <summary>
            75 Tick Eur/Usd
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.ScalpingMultiTimeFrame1.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.ScalpingMultiTimeFrame1.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Custom.Strategy.SemiAutomated1">
            <summary>
            User will enter orders. Strategy will pick it up and will send its own orders.
            </summary>
        </member>
        <member name="M:NinjaTrader.Custom.Strategy.SemiAutomated1.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Custom.Strategy.SemiAutomated1.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.str3targerts">
            <summary>
            Enter the description of your strategy here
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.str3targerts.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.str3targerts.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.strKeltner">
            <summary>
            Enter the description of your strategy here
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.strKeltner.Initialize">
            <summary>sssss'as
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.strKeltner.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.TTM1">
            <summary>
            TTMWaves
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.TTM1.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.TTM1.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.UnamangedSample1">
            <summary>
            Enter the description of your strategy here
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.UnamangedSample1.Initialize">
            <summary>
            This method is used to configure the strategy and is called once before any strategy method is called.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.UnamangedSample1.OnBarUpdate">
            <summary>
            Called on each bar update event (incoming tick)
            </summary>
        </member>
        <member name="T:NinjaTrader.Data.DayBarsType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.DayBarsType.Add(NinjaTrader.Data.Bars,System.Double,System.Double,System.Double,System.Double,System.DateTime,System.Int64,System.Boolean)">
            <summary>
            </summary>
            <param name="bars"></param>
            <param name="open"></param>
            <param name="high"></param>
            <param name="low"></param>
            <param name="close"></param>
            <param name="time"></param>
            <param name="volume"></param>
            <param name="isRealtime"></param>
        </member>
        <member name="M:NinjaTrader.Data.DayBarsType.ApplyDefaults(NinjaTrader.Gui.Chart.BarsData)">
            <summary>
            </summary>
            <param name="barsData"></param>
        </member>
        <member name="M:NinjaTrader.Data.DayBarsType.ChartDataBoxDate(System.DateTime)">
            <summary>
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.DayBarsType.ChartLabel(NinjaTrader.Gui.Chart.ChartControl,System.DateTime)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.DayBarsType.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.DayBarsType.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.DayBarsType.GetInitialLookBackDays(NinjaTrader.Data.Period,System.Int32)">
            <summary>
            </summary>
            <param name="period"></param>
            <param name="barsBack"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.DayBarsType.GetPercentComplete(NinjaTrader.Data.Bars,System.DateTime)">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.DayBarsType.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Data.Period,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="period"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.DayBarsType.ToString(NinjaTrader.Data.Period)">
            <summary>
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Data.DayBarsType.BuiltFrom">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.DayBarsType.ChartStyleTypesSupported">
            <summary>
            Here is how you restrict the selectable chart styles by bars type
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.DayBarsType.DefaultValue">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.DayBarsType.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.DayBarsType.IsIntraday">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Data.KagiBarsType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.KagiBarsType.Add(NinjaTrader.Data.Bars,System.Double,System.Double,System.Double,System.Double,System.DateTime,System.Int64,System.Boolean)">
            <summary>
            </summary>
            <param name="bars"></param>
            <param name="open"></param>
            <param name="high"></param>
            <param name="low"></param>
            <param name="close"></param>
            <param name="time"></param>
            <param name="volume"></param>
            <param name="isRealtime"></param>
        </member>
        <member name="M:NinjaTrader.Data.KagiBarsType.ApplyDefaults(NinjaTrader.Gui.Chart.BarsData)">
            <summary>
            </summary>
            <param name="barsData"></param>
        </member>
        <member name="M:NinjaTrader.Data.KagiBarsType.ChartDataBoxDate(System.DateTime)">
            <summary>
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.KagiBarsType.ChartLabel(NinjaTrader.Gui.Chart.ChartControl,System.DateTime)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.KagiBarsType.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.KagiBarsType.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.KagiBarsType.GetInitialLookBackDays(NinjaTrader.Data.Period,System.Int32)">
            <summary>
            </summary>
            <param name="period"></param>
            <param name="barsBack"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.KagiBarsType.GetPercentComplete(NinjaTrader.Data.Bars,System.DateTime)">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.KagiBarsType.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Data.Period,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="period"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.KagiBarsType.ToString(NinjaTrader.Data.Period)">
            <summary>
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Data.KagiBarsType.BuiltFrom">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.KagiBarsType.ChartStyleTypesSupported">
            <summary>
            Here is how you restrict the selectable chart styles by bars type
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.KagiBarsType.DefaultValue">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.KagiBarsType.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.KagiBarsType.IsIntraday">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Data.LineBreak">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.LineBreak.Add(NinjaTrader.Data.Bars,System.Double,System.Double,System.Double,System.Double,System.DateTime,System.Int64,System.Boolean)">
            <summary>
            
            </summary>
            <param name="bars"></param>
            <param name="open"></param>
            <param name="high"></param>
            <param name="low"></param>
            <param name="close"></param>
            <param name="time"></param>
            <param name="volume"></param>
            <param name="isRealtime"></param>
        </member>
        <member name="M:NinjaTrader.Data.LineBreak.ApplyDefaults(NinjaTrader.Gui.Chart.BarsData)">
            <summary>
            </summary>
            <param name="barsData"></param>
        </member>
        <member name="M:NinjaTrader.Data.LineBreak.ChartDataBoxDate(System.DateTime)">
            <summary>
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.LineBreak.ChartLabel(NinjaTrader.Gui.Chart.ChartControl,System.DateTime)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.LineBreak.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.LineBreak.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.LineBreak.GetInitialLookBackDays(NinjaTrader.Data.Period,System.Int32)">
            <summary>
            </summary>
            <param name="period"></param>
            <param name="barsBack"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.LineBreak.GetPercentComplete(NinjaTrader.Data.Bars,System.DateTime)">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.LineBreak.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Data.Period,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="period"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.LineBreak.ToString(NinjaTrader.Data.Period)">
            <summary>
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Data.LineBreak.BuiltFrom">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.LineBreak.ChartStyleTypesSupported">
            <summary>
            Here is how you restrict the selectable chart styles by bars type
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.LineBreak.DefaultValue">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.LineBreak.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.LineBreak.IsIntraday">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Data.MinuteBarsType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.MinuteBarsType.Add(NinjaTrader.Data.Bars,System.Double,System.Double,System.Double,System.Double,System.DateTime,System.Int64,System.Boolean)">
            <summary>
            </summary>
            <param name="bars"></param>
            <param name="open"></param>
            <param name="high"></param>
            <param name="low"></param>
            <param name="close"></param>
            <param name="time"></param>
            <param name="volume"></param>
            <param name="isRealtime"></param>
        </member>
        <member name="M:NinjaTrader.Data.MinuteBarsType.ApplyDefaults(NinjaTrader.Gui.Chart.BarsData)">
            <summary>
            </summary>
            <param name="barsData"></param>
        </member>
        <member name="M:NinjaTrader.Data.MinuteBarsType.ChartDataBoxDate(System.DateTime)">
            <summary>
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.MinuteBarsType.ChartLabel(NinjaTrader.Gui.Chart.ChartControl,System.DateTime)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.MinuteBarsType.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.MinuteBarsType.GetInitialLookBackDays(NinjaTrader.Data.Period,System.Int32)">
            <summary>
            </summary>
            <param name="period"></param>
            <param name="barsBack"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.MinuteBarsType.GetPercentComplete(NinjaTrader.Data.Bars,System.DateTime)">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.MinuteBarsType.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Data.Period,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="period"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.MinuteBarsType.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.MinuteBarsType.ToString(NinjaTrader.Data.Period)">
            <summary>
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Data.MinuteBarsType.BuiltFrom">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.MinuteBarsType.ChartStyleTypesSupported">
            <summary>
            Here is how you restrict the selectable chart styles by bars type
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.MinuteBarsType.DefaultValue">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.MinuteBarsType.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.MinuteBarsType.IsIntraday">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Data.MonthBarsType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.MonthBarsType.Add(NinjaTrader.Data.Bars,System.Double,System.Double,System.Double,System.Double,System.DateTime,System.Int64,System.Boolean)">
            <summary>
            </summary>
            <param name="bars"></param>
            <param name="open"></param>
            <param name="high"></param>
            <param name="low"></param>
            <param name="close"></param>
            <param name="time"></param>
            <param name="volume"></param>
            <param name="isRealtime"></param>
        </member>
        <member name="M:NinjaTrader.Data.MonthBarsType.ApplyDefaults(NinjaTrader.Gui.Chart.BarsData)">
            <summary>
            </summary>
            <param name="barsData"></param>
        </member>
        <member name="M:NinjaTrader.Data.MonthBarsType.ChartDataBoxDate(System.DateTime)">
            <summary>
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.MonthBarsType.ChartLabel(NinjaTrader.Gui.Chart.ChartControl,System.DateTime)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.MonthBarsType.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.MonthBarsType.GetInitialLookBackDays(NinjaTrader.Data.Period,System.Int32)">
            <summary>
            </summary>
            <param name="period"></param>
            <param name="barsBack"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.MonthBarsType.GetPercentComplete(NinjaTrader.Data.Bars,System.DateTime)">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.MonthBarsType.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Data.Period,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="period"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.MonthBarsType.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.MonthBarsType.ToString(NinjaTrader.Data.Period)">
            <summary>
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Data.MonthBarsType.BuiltFrom">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.MonthBarsType.ChartStyleTypesSupported">
            <summary>
            Here is how you restrict the selectable chart styles by bars type
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.MonthBarsType.DefaultValue">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.MonthBarsType.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.MonthBarsType.IsIntraday">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Data.PointAndFigureBarsType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.PointAndFigureBarsType.Add(NinjaTrader.Data.Bars,System.Double,System.Double,System.Double,System.Double,System.DateTime,System.Int64,System.Boolean)">
            <summary>
            </summary>
            <param name="bars"></param>
            <param name="open"></param>
            <param name="high"></param>
            <param name="low"></param>
            <param name="close"></param>
            <param name="time"></param>
            <param name="volume"></param>
            <param name="isRealtime"></param>
        </member>
        <member name="M:NinjaTrader.Data.PointAndFigureBarsType.ApplyDefaults(NinjaTrader.Gui.Chart.BarsData)">
            <summary>
            </summary>
            <param name="barsData"></param>
        </member>
        <member name="M:NinjaTrader.Data.PointAndFigureBarsType.ChartDataBoxDate(System.DateTime)">
            <summary>
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.PointAndFigureBarsType.ChartLabel(NinjaTrader.Gui.Chart.ChartControl,System.DateTime)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.PointAndFigureBarsType.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.PointAndFigureBarsType.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.PointAndFigureBarsType.GetInitialLookBackDays(NinjaTrader.Data.Period,System.Int32)">
            <summary>
            </summary>
            <param name="period"></param>
            <param name="barsBack"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.PointAndFigureBarsType.GetPercentComplete(NinjaTrader.Data.Bars,System.DateTime)">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.PointAndFigureBarsType.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Data.Period,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="period"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.PointAndFigureBarsType.ToString(NinjaTrader.Data.Period)">
            <summary>
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Data.PointAndFigureBarsType.BuiltFrom">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.PointAndFigureBarsType.ChartStyleTypesSupported">
            <summary>
            Here is how you restrict the selectable chart styles by bars type
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.PointAndFigureBarsType.DefaultValue">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.PointAndFigureBarsType.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.PointAndFigureBarsType.IsIntraday">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Data.RangeBarsType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.RangeBarsType.Add(NinjaTrader.Data.Bars,System.Double,System.Double,System.Double,System.Double,System.DateTime,System.Int64,System.Boolean)">
            <summary>
            </summary>
            <param name="bars"></param>
            <param name="open"></param>
            <param name="high"></param>
            <param name="low"></param>
            <param name="close"></param>
            <param name="time"></param>
            <param name="volume"></param>
            <param name="isRealtime"></param>
        </member>
        <member name="M:NinjaTrader.Data.RangeBarsType.ChartDataBoxDate(System.DateTime)">
            <summary>
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.RangeBarsType.ChartLabel(NinjaTrader.Gui.Chart.ChartControl,System.DateTime)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.RangeBarsType.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.RangeBarsType.GetInitialLookBackDays(NinjaTrader.Data.Period,System.Int32)">
            <summary>
            </summary>
            <param name="period"></param>
            <param name="barsBack"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.RangeBarsType.GetPercentComplete(NinjaTrader.Data.Bars,System.DateTime)">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.RangeBarsType.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Data.Period,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="period"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.RangeBarsType.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.RangeBarsType.ToString(NinjaTrader.Data.Period)">
            <summary>
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Data.RangeBarsType.BuiltFrom">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.RangeBarsType.ChartStyleTypesSupported">
            <summary>
            Here is how you restrict the selectable chart styles by bars type
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.RangeBarsType.DefaultValue">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.RangeBarsType.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.RangeBarsType.IsIntraday">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Data.RenkoBarsType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.RenkoBarsType.Add(NinjaTrader.Data.Bars,System.Double,System.Double,System.Double,System.Double,System.DateTime,System.Int64,System.Boolean)">
            <summary>
            </summary>
            <param name="bars"></param>
            <param name="open"></param>
            <param name="high"></param>
            <param name="low"></param>
            <param name="close"></param>
            <param name="time"></param>
            <param name="volume"></param>
            <param name="isRealtime"></param>
        </member>
        <member name="M:NinjaTrader.Data.RenkoBarsType.ApplyDefaults(NinjaTrader.Gui.Chart.BarsData)">
            <summary>
            </summary>
            <param name="barsData"></param>
        </member>
        <member name="M:NinjaTrader.Data.RenkoBarsType.ChartDataBoxDate(System.DateTime)">
            <summary>
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.RenkoBarsType.ChartLabel(NinjaTrader.Gui.Chart.ChartControl,System.DateTime)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.RenkoBarsType.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.RenkoBarsType.GetInitialLookBackDays(NinjaTrader.Data.Period,System.Int32)">
            <summary>
            </summary>
            <param name="period"></param>
            <param name="barsBack"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.RenkoBarsType.GetPercentComplete(NinjaTrader.Data.Bars,System.DateTime)">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.RenkoBarsType.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Data.Period,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="period"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.RenkoBarsType.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.RenkoBarsType.ToString(NinjaTrader.Data.Period)">
            <summary>
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Data.RenkoBarsType.BuiltFrom">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.RenkoBarsType.ChartStyleTypesSupported">
            <summary>
            Here is how you restrict the selectable chart styles by bars type
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.RenkoBarsType.DefaultValue">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.RenkoBarsType.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.RenkoBarsType.IsIntraday">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Data.SecondBarsType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.SecondBarsType.Add(NinjaTrader.Data.Bars,System.Double,System.Double,System.Double,System.Double,System.DateTime,System.Int64,System.Boolean)">
            <summary>
            </summary>
            <param name="bars"></param>
            <param name="open"></param>
            <param name="high"></param>
            <param name="low"></param>
            <param name="close"></param>
            <param name="time"></param>
            <param name="volume"></param>
            <param name="isRealtime"></param>
        </member>
        <member name="M:NinjaTrader.Data.SecondBarsType.ApplyDefaults(NinjaTrader.Gui.Chart.BarsData)">
            <summary>
            </summary>
            <param name="barsData"></param>
        </member>
        <member name="M:NinjaTrader.Data.SecondBarsType.ChartDataBoxDate(System.DateTime)">
            <summary>
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.SecondBarsType.ChartLabel(NinjaTrader.Gui.Chart.ChartControl,System.DateTime)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.SecondBarsType.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.SecondBarsType.GetInitialLookBackDays(NinjaTrader.Data.Period,System.Int32)">
            <summary>
            </summary>
            <param name="period"></param>
            <param name="barsBack"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.SecondBarsType.GetPercentComplete(NinjaTrader.Data.Bars,System.DateTime)">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.SecondBarsType.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Data.Period,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="period"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.SecondBarsType.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.SecondBarsType.TimeToBarTime(NinjaTrader.Data.Bars,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            </summary>
            <param name="bars"></param>
            <param name="time"></param>
            <param name="periodStart"></param>
            <param name="periodValue"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.SecondBarsType.ToString(NinjaTrader.Data.Period)">
            <summary>
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Data.SecondBarsType.BuiltFrom">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.SecondBarsType.ChartStyleTypesSupported">
            <summary>
            Here is how you restrict the selectable chart styles by bars type
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.SecondBarsType.DefaultValue">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.SecondBarsType.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.SecondBarsType.IsIntraday">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Data.TickBarsType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.TickBarsType.Add(NinjaTrader.Data.Bars,System.Double,System.Double,System.Double,System.Double,System.DateTime,System.Int64,System.Boolean)">
            <summary>
            </summary>
            <param name="bars"></param>
            <param name="open"></param>
            <param name="high"></param>
            <param name="low"></param>
            <param name="close"></param>
            <param name="time"></param>
            <param name="volume"></param>
            <param name="isRealtime"></param>
        </member>
        <member name="M:NinjaTrader.Data.TickBarsType.ApplyDefaults(NinjaTrader.Gui.Chart.BarsData)">
            <summary>
            </summary>
            <param name="barsData"></param>
        </member>
        <member name="M:NinjaTrader.Data.TickBarsType.ChartDataBoxDate(System.DateTime)">
            <summary>
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.TickBarsType.ChartLabel(NinjaTrader.Gui.Chart.ChartControl,System.DateTime)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.TickBarsType.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.TickBarsType.GetInitialLookBackDays(NinjaTrader.Data.Period,System.Int32)">
            <summary>
            </summary>
            <param name="period"></param>
            <param name="barsBack"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.TickBarsType.GetPercentComplete(NinjaTrader.Data.Bars,System.DateTime)">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.TickBarsType.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Data.Period,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="period"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.TickBarsType.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.TickBarsType.ToString(NinjaTrader.Data.Period)">
            <summary>
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Data.TickBarsType.BuiltFrom">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.TickBarsType.ChartStyleTypesSupported">
            <summary>
            Here is how you restrict the selectable chart styles by bars type
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.TickBarsType.DefaultValue">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.TickBarsType.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.TickBarsType.IsIntraday">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Data.VolumeBarsType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.VolumeBarsType.Add(NinjaTrader.Data.Bars,System.Double,System.Double,System.Double,System.Double,System.DateTime,System.Int64,System.Boolean)">
            <summary>
            </summary>
            <param name="bars"></param>
            <param name="open"></param>
            <param name="high"></param>
            <param name="low"></param>
            <param name="close"></param>
            <param name="time"></param>
            <param name="volume"></param>
            <param name="isRealtime"></param>
        </member>
        <member name="M:NinjaTrader.Data.VolumeBarsType.ApplyDefaults(NinjaTrader.Gui.Chart.BarsData)">
            <summary>
            </summary>
            <param name="barsData"></param>
        </member>
        <member name="M:NinjaTrader.Data.VolumeBarsType.ChartDataBoxDate(System.DateTime)">
            <summary>
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.VolumeBarsType.ChartLabel(NinjaTrader.Gui.Chart.ChartControl,System.DateTime)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.VolumeBarsType.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.VolumeBarsType.GetInitialLookBackDays(NinjaTrader.Data.Period,System.Int32)">
            <summary>
            </summary>
            <param name="period"></param>
            <param name="barsBack"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.VolumeBarsType.GetPercentComplete(NinjaTrader.Data.Bars,System.DateTime)">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.VolumeBarsType.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Data.Period,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="period"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.VolumeBarsType.ToString(NinjaTrader.Data.Period)">
            <summary>
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.VolumeBarsType.#ctor">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.VolumeBarsType.BuiltFrom">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.VolumeBarsType.ChartStyleTypesSupported">
            <summary>
            Here is how you restrict the selectable chart styles by bars type
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.VolumeBarsType.DefaultValue">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.VolumeBarsType.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.VolumeBarsType.IsIntraday">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Data.WeekBarsType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.WeekBarsType.Add(NinjaTrader.Data.Bars,System.Double,System.Double,System.Double,System.Double,System.DateTime,System.Int64,System.Boolean)">
            <summary>
            </summary>
            <param name="bars"></param>
            <param name="open"></param>
            <param name="high"></param>
            <param name="low"></param>
            <param name="close"></param>
            <param name="time"></param>
            <param name="volume"></param>
            <param name="isRealtime"></param>
        </member>
        <member name="M:NinjaTrader.Data.WeekBarsType.ApplyDefaults(NinjaTrader.Gui.Chart.BarsData)">
            <summary>
            </summary>
            <param name="barsData"></param>
        </member>
        <member name="M:NinjaTrader.Data.WeekBarsType.ChartDataBoxDate(System.DateTime)">
            <summary>
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.WeekBarsType.ChartLabel(NinjaTrader.Gui.Chart.ChartControl,System.DateTime)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.WeekBarsType.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.WeekBarsType.GetInitialLookBackDays(NinjaTrader.Data.Period,System.Int32)">
            <summary>
            </summary>
            <param name="period"></param>
            <param name="barsBack"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.WeekBarsType.GetPercentComplete(NinjaTrader.Data.Bars,System.DateTime)">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.WeekBarsType.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Data.Period,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="period"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.WeekBarsType.TimeToBarTime(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            </summary>
            <param name="time"></param>
            <param name="periodStart"></param>
            <param name="periodValue"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.WeekBarsType.ToString(NinjaTrader.Data.Period)">
            <summary>
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.WeekBarsType.#ctor">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.WeekBarsType.BuiltFrom">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.WeekBarsType.ChartStyleTypesSupported">
            <summary>
            Here is how you restrict the selectable chart styles by bars type
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.WeekBarsType.DefaultValue">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.WeekBarsType.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.WeekBarsType.IsIntraday">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Data.YearBarsType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.YearBarsType.Add(NinjaTrader.Data.Bars,System.Double,System.Double,System.Double,System.Double,System.DateTime,System.Int64,System.Boolean)">
            <summary>
            </summary>
            <param name="bars"></param>
            <param name="open"></param>
            <param name="high"></param>
            <param name="low"></param>
            <param name="close"></param>
            <param name="time"></param>
            <param name="volume"></param>
            <param name="isRealtime"></param>
        </member>
        <member name="M:NinjaTrader.Data.YearBarsType.ApplyDefaults(NinjaTrader.Gui.Chart.BarsData)">
            <summary>
            </summary>
            <param name="barsData"></param>
        </member>
        <member name="M:NinjaTrader.Data.YearBarsType.ChartDataBoxDate(System.DateTime)">
            <summary>
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.YearBarsType.ChartLabel(NinjaTrader.Gui.Chart.ChartControl,System.DateTime)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.YearBarsType.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.YearBarsType.GetInitialLookBackDays(NinjaTrader.Data.Period,System.Int32)">
            <summary>
            </summary>
            <param name="period"></param>
            <param name="barsBack"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.YearBarsType.GetPercentComplete(NinjaTrader.Data.Bars,System.DateTime)">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.YearBarsType.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Data.Period,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="period"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.YearBarsType.ToString(NinjaTrader.Data.Period)">
            <summary>
            </summary>
            <param name="period"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Data.YearBarsType.#ctor">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.YearBarsType.BuiltFrom">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.YearBarsType.ChartStyleTypesSupported">
            <summary>
            Here is how you restrict the selectable chart styles by bars type
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.YearBarsType.DefaultValue">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.YearBarsType.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.YearBarsType.IsIntraday">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Gui.Chart.BoxStyle">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.BoxStyle.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.BoxStyle.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.BoxStyle.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.BoxStyle.GetBarPaintWidth(System.Int32)">
            <summary>
            </summary>
            <param name="barWidth"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.BoxStyle.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Gui.Chart.ChartStyle,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="chartStyle"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.BoxStyle.PaintBars(NinjaTrader.Gui.Chart.ChartControl,System.Drawing.Graphics,NinjaTrader.Data.Bars,System.Int32,System.Int32,System.Int32,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="graphics"></param>
            <param name="bars"></param>
            <param name="panelIdx"></param>
            <param name="fromIdx"></param>
            <param name="toIdx"></param>
            <param name="bounds"></param>
            <param name="max"></param>
            <param name="min"></param>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.BoxStyle.DisplayName">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.BoxStyle.IsTransparent">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Gui.Chart.OpenCloseStyle">
            <summary>
            This implementation is a courtesy of Al Slane, an active NinjaTrader user. Thanks a lot for your contribution.
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.OpenCloseStyle.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.OpenCloseStyle.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.OpenCloseStyle.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.OpenCloseStyle.GetBarPaintWidth(System.Int32)">
            <summary>
            </summary>
            <param name="barWidth"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.OpenCloseStyle.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Gui.Chart.ChartStyle,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="chartStyle"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.OpenCloseStyle.PaintBars(NinjaTrader.Gui.Chart.ChartControl,System.Drawing.Graphics,NinjaTrader.Data.Bars,System.Int32,System.Int32,System.Int32,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="graphics"></param>
            <param name="bars"></param>
            <param name="panelIdx"></param>
            <param name="fromIdx"></param>
            <param name="toIdx"></param>
            <param name="bounds"></param>
            <param name="max"></param>
            <param name="min"></param>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.OpenCloseStyle.DisplayName">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.OpenCloseStyle.IsTransparent">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Gui.Chart.CandleStyle">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.CandleStyle.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.CandleStyle.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.CandleStyle.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.CandleStyle.GetBarPaintWidth(System.Int32)">
            <summary>
            </summary>
            <param name="barWidth"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.CandleStyle.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Gui.Chart.ChartStyle,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="chartStyle"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.CandleStyle.PaintBars(NinjaTrader.Gui.Chart.ChartControl,System.Drawing.Graphics,NinjaTrader.Data.Bars,System.Int32,System.Int32,System.Int32,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="graphics"></param>
            <param name="bars"></param>
            <param name="panelIdx"></param>
            <param name="fromIdx"></param>
            <param name="toIdx"></param>
            <param name="bounds"></param>
            <param name="max"></param>
            <param name="min"></param>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.CandleStyle.DisplayName">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.CandleStyle.IsTransparent">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Gui.Chart.HiLoBarsStyle">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.HiLoBarsStyle.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.HiLoBarsStyle.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.HiLoBarsStyle.GetBarPaintWidth(System.Int32)">
            <summary>
            </summary>
            <param name="barWidth"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.HiLoBarsStyle.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Gui.Chart.ChartStyle,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="chartStyle"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.HiLoBarsStyle.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.HiLoBarsStyle.PaintBars(NinjaTrader.Gui.Chart.ChartControl,System.Drawing.Graphics,NinjaTrader.Data.Bars,System.Int32,System.Int32,System.Int32,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="graphics"></param>
            <param name="bars"></param>
            <param name="panelIdx"></param>
            <param name="fromIdx"></param>
            <param name="toIdx"></param>
            <param name="bounds"></param>
            <param name="max"></param>
            <param name="min"></param>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.HiLoBarsStyle.DisplayName">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.HiLoBarsStyle.IsTransparent">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Gui.Chart.KagiLineStyle">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.KagiLineStyle.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.KagiLineStyle.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.KagiLineStyle.GetBarPaintWidth(System.Int32)">
            <summary>
            </summary>
            <param name="barWidth"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.KagiLineStyle.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Gui.Chart.ChartStyle,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="chartStyle"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.KagiLineStyle.PaintBars(NinjaTrader.Gui.Chart.ChartControl,System.Drawing.Graphics,NinjaTrader.Data.Bars,System.Int32,System.Int32,System.Int32,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="graphics"></param>
            <param name="bars"></param>
            <param name="panelIdx"></param>
            <param name="fromIdx"></param>
            <param name="toIdx"></param>
            <param name="bounds"></param>
            <param name="max"></param>
            <param name="min"></param>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.KagiLineStyle.DisplayName">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.KagiLineStyle.IsTransparent">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Gui.Chart.LineOnCloseStyle">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.LineOnCloseStyle.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.LineOnCloseStyle.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.LineOnCloseStyle.GetBarPaintWidth(System.Int32)">
            <summary>
            </summary>
            <param name="barWidth"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.LineOnCloseStyle.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Gui.Chart.ChartStyle,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="chartStyle"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.LineOnCloseStyle.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.LineOnCloseStyle.PaintBars(NinjaTrader.Gui.Chart.ChartControl,System.Drawing.Graphics,NinjaTrader.Data.Bars,System.Int32,System.Int32,System.Int32,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="graphics"></param>
            <param name="bars"></param>
            <param name="panelIdx"></param>
            <param name="fromIdx"></param>
            <param name="toIdx"></param>
            <param name="bounds"></param>
            <param name="max"></param>
            <param name="min"></param>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.LineOnCloseStyle.DisplayName">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.LineOnCloseStyle.IsTransparent">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Gui.Chart.OhlcStyle">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.OhlcStyle.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.OhlcStyle.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.OhlcStyle.GetBarPaintWidth(System.Int32)">
            <summary>
            </summary>
            <param name="barWidth"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.OhlcStyle.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Gui.Chart.ChartStyle,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="chartStyle"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.OhlcStyle.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.OhlcStyle.PaintBars(NinjaTrader.Gui.Chart.ChartControl,System.Drawing.Graphics,NinjaTrader.Data.Bars,System.Int32,System.Int32,System.Int32,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="graphics"></param>
            <param name="bars"></param>
            <param name="panelIdx"></param>
            <param name="fromIdx"></param>
            <param name="toIdx"></param>
            <param name="bounds"></param>
            <param name="max"></param>
            <param name="min"></param>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.OhlcStyle.DisplayName">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.OhlcStyle.IsTransparent">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Gui.Chart.PointAndFigureStyle">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.PointAndFigureStyle.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.PointAndFigureStyle.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.PointAndFigureStyle.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.PointAndFigureStyle.GetBarPaintWidth(System.Int32)">
            <summary>
            </summary>
            <param name="barWidth"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.PointAndFigureStyle.GetProperties(System.ComponentModel.PropertyDescriptor,NinjaTrader.Gui.Chart.ChartStyle,System.Attribute[])">
            <summary>
            </summary>
            <param name="propertyDescriptor"></param>
            <param name="chartStyle"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Gui.Chart.PointAndFigureStyle.PaintBars(NinjaTrader.Gui.Chart.ChartControl,System.Drawing.Graphics,NinjaTrader.Data.Bars,System.Int32,System.Int32,System.Int32,System.Drawing.Rectangle,System.Double,System.Double)">
            <summary>
            </summary>
            <param name="chartControl"></param>
            <param name="graphics"></param>
            <param name="bars"></param>
            <param name="panelIdx"></param>
            <param name="fromIdx"></param>
            <param name="toIdx"></param>
            <param name="bounds"></param>
            <param name="max"></param>
            <param name="min"></param>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.PointAndFigureStyle.DisplayName">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.PointAndFigureStyle.LineWidth">
            <summary>
            </summary>
        </member>
        <member name="P:NinjaTrader.Gui.Chart.PointAndFigureStyle.IsTransparent">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.DefaultFillType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.DefaultFillType.Fill(NinjaTrader.Cbi.Order)">
            <summary>
            Processes a historical order and checks for potential fills.
            </summary>
            <param name="order">Historical order to process</param>
        </member>
        <member name="T:NinjaTrader.Strategy.DefaultOptimizationMethod">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.DefaultOptimizationMethod.Clone">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:NinjaTrader.Strategy.DefaultOptimizationMethod.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.DefaultOptimizationMethod.Initialize">
            <summary>
            Called before Optimize() to setup the optimizer.
            Always called in main thread which would allow for putting additional GUI in here.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.DefaultOptimizationMethod.Iterate(System.Int32)">
            <summary>
            This methods iterates the parameters recursively. The actual back test is performed, as the last parameter is iterated.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:NinjaTrader.Strategy.DefaultOptimizationMethod.Optimize">
            <summary>
            Runs the optimizer on a given parameter set.
            Beware: this method might be called in a non-main, worker thread. E.g. driving GUI logic from here forward would cause issues.
            This is a brute-force optimizer. It runs back tests on every potential parameter combination.
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.DefaultOptimizationMethod.Iterations">
            <summary>
            Gets the number of iterations. Return 0 if not determinable.
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.DefaultOptimizationMethod.MultiThreadSupport">
            <summary>
            Gets a value indicating if NinjaTrader should toggle internal logic to multi thread support.
            </summary>
        </member>
        <member name="T:NinjaTrader.Data.DefaultTickFilter">
            <summary>
            Default tick filter.
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.DefaultTickFilter.OnTick">
            <summary>
            This method is used to filter ticks is called once for every incoming tick.
            </summary>
            <returns>true = tick is valid, false = tick is invalid</returns>
        </member>
        <member name="M:NinjaTrader.Strategy.GeneticOptimizer.Clone">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.GeneticOptimizer.Initialize">
            <summary>
            Called before Optimize() to setup the optimizer.
            Always called in main thread which would allow for putting additional GUI in here.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.GeneticOptimizer.IterationCompleted(System.Object,System.Double)">
            <summary>
            Callback triggered as an iteration is completed. Note: it might be called from a differet thread if MultiThreadSupport == true.
            </summary>
            <param name="individual"></param>
            <param name="performanceValue"></param>
        </member>
        <member name="M:NinjaTrader.Strategy.GeneticOptimizer.Optimize">
            <summary>
            Runs the optimizer on a given parameter set.
            Beware: this method might be called in a non-main, worker thread. E.g. driving GUI logic from here forward would cause issues.
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.GeneticOptimizer.MaxGenerations">
            <summary>
            The maximum number of generations.
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.GeneticOptimizer.PopulationSize">
            <summary>
            The number of individuals in each generation.
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.GeneticOptimizer.MinimumPerformance">
            <summary>
            The minimum performance. Optimizer will stop if min performance is reached. Ignored if 0
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.GeneticOptimizer.MutationRate">
            <summary>
            The probability that a parameter will be mutated during procreation.
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.GeneticOptimizer.MutationStrength">
            <summary>
            The amount that a parameter can mutate as a percentage of the parameter's possible range of values.
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.GeneticOptimizer.StabilitySize">
            <summary>
            Percentage of the all time best performing non changing individuals. Once reached, Optimizer will generate random generation. See also Reset Size
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.GeneticOptimizer.CrossoverRate">
            <summary>
            The percentage of population which will be procreated from parents. The rest of population will be random generated
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.GeneticOptimizer.ResetSize">
            <summary>
            Percentage best-performing individuals to keep when reseeding the population after stability is reached
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.GeneticOptimizer.Iterations">
            <summary>
            Gets the number of iterations. Return 0 if not determinable.
            </summary>
        </member>
        <member name="P:NinjaTrader.Strategy.GeneticOptimizer.MultiThreadSupport">
            <summary>
            Gets a value indicating if NinjaTrader should toggle internal logic for multi thread support on the optimizer.
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.GoForm.InitializeComponent(NinjaTrader.Strategy.Chromosomes)">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NinjaTrader.Strategy.LiberalFillType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.LiberalFillType.Fill(NinjaTrader.Cbi.Order)">
            <summary>
            Processes a historical order and checks for potential fills.
            </summary>
            <param name="order">Historical order to process</param>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxAvgProfit">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxAvgProfit.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxAvgProfitLong">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxAvgProfitLong.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxAvgProfitShort">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxAvgProfitShort.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxNetProfit">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxNetProfit.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxNetProfitLong">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxNetProfitLong.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxNetProfitShort">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxNetProfitShort.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxPercentProfitable">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxPercentProfitable.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxPercentProfitableLong">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxPercentProfitableLong.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxPercentProfitableShort">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxPercentProfitableShort.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxProbablity">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxProbablity.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxProfitFactor">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxProfitFactor.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxProfitFactorLong">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxProfitFactorLong.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxProfitFactorShort">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxProfitFactorShort.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxSharpeRatio">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxSharpeRatio.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxWinLossRatio">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxWinLossRatio.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxWinLossRatioLong">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxWinLossRatioLong.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MaxWinLossRatioShort">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MaxWinLossRatioShort.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MinDrawDown">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MinDrawDown.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MinDrawDownLong">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MinDrawDownLong.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Strategy.MinDrawDownShort">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Strategy.MinDrawDownShort.GetPerformanceValue(NinjaTrader.Strategy.SystemPerformance)">
            <summary>
            Return the performance value of a backtesting result.
            </summary>
            <param name="systemPerformance"></param>
            <returns></returns>
        </member>
        <member name="T:NinjaTrader.Data.TextImportType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.TextImportType.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.TextImportType.Initialize">
            <summary>
            This method is used to configure the import type and is called once before any data is imported
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.TextImportType.NextDataPoint">
            <summary>
            Read the next line of data to import.
            </summary>
            <returns>TRUE: line read successfully. FALSE: stop reading data from that file, move to next import file.</returns>
        </member>
        <member name="M:NinjaTrader.Data.TextImportType.NextInstrument">
            <summary>
            Sets up the next instrument for importing
            </summary>
            <returns>TRUE: continue processing. Else, abort whole import.</returns>
        </member>
        <member name="P:NinjaTrader.Data.TextImportType.EndOfBarTimestamps">
            <summary>
            NinjaTrader as default timestamps bars at the end of spanned period.
            </summary>
        </member>
        <member name="P:NinjaTrader.Data.TextImportType.FileNames">
            <summary>
            </summary>
        </member>
        <member name="T:NinjaTrader.Data.TextAltImportType">
            <summary>
            </summary>
        </member>
        <member name="M:NinjaTrader.Data.TextAltImportType.#ctor">
            <summary>
            </summary>
        </member>
    </members>
</doc>
